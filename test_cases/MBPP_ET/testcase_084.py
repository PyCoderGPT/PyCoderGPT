from case_MBPP_084 import is_Sum_Of_Powers_Of_Two


def check(candidate):
    assert candidate(10) == True
    assert candidate(7) == False
    assert candidate(14) == True
    assert candidate(12) == True
    assert candidate(8) == True
    assert candidate(13) == False
    assert candidate(13) == False
    assert candidate(10) == True
    assert candidate(9) == False
    assert candidate(15) == False
    assert candidate(15) == False
    assert candidate(15) == False
    assert candidate(7) == False
    assert candidate(14) == True
    assert candidate(13) == False
    assert candidate(5) == False
    assert candidate(13) == False
    assert candidate(11) == False
    assert candidate(6) == True
    assert candidate(7) == False
    assert candidate(8) == True
    assert candidate(10) == True
    assert candidate(14) == True
    assert candidate(13) == False
    assert candidate(13) == False
    assert candidate(14) == True
    assert candidate(14) == True
    assert candidate(13) == False
    assert candidate(11) == False
    assert candidate(5) == False
    assert candidate(5) == False
    assert candidate(11) == False
    assert candidate(10) == True
    assert candidate(9) == False
    assert candidate(9) == False
    assert candidate(9) == False
    assert candidate(8) == True
    assert candidate(11) == False
    assert candidate(2) == True
    assert candidate(3) == False
    assert candidate(3) == False
    assert candidate(11) == False
    assert candidate(8) == True
    assert candidate(9) == False
    assert candidate(12) == True
    assert candidate(2) == True
    assert candidate(9) == False
    assert candidate(12) == True
    assert candidate(3) == False
    assert candidate(7) == False
    assert candidate(5) == False
    assert candidate(11) == False
    assert candidate(4) == True
    assert candidate(7) == False
    assert candidate(3) == False
    assert candidate(5) == False
    assert candidate(11) == False
    assert candidate(7) == False
    assert candidate(10) == True
    assert candidate(12) == True
    assert candidate(7) == False
    assert candidate(10) == True
    assert candidate(6) == True
    assert candidate(7) == False
    assert candidate(10) == True
    assert candidate(9) == False
    assert candidate(7) == False
    assert candidate(5) == False
    assert candidate(3) == False
    assert candidate(17) == False
    assert candidate(13) == False
    assert candidate(9) == False
    assert candidate(9) == False
    assert candidate(14) == True
    assert candidate(17) == False
    assert candidate(13) == False
    assert candidate(11) == False
    assert candidate(18) == True
    assert candidate(16) == True
    assert candidate(12) == True
    assert candidate(14) == True
    assert candidate(11) == False
    assert candidate(14) == True
    assert candidate(13) == False
    assert candidate(14) == True
    assert candidate(12) == True
    assert candidate(9) == False
    assert candidate(9) == False
    assert candidate(15) == False
    assert candidate(12) == True
    assert candidate(12) == True
    assert candidate(19) == False
    assert candidate(16) == True
    assert candidate(10) == True
    assert candidate(9) == False
    assert candidate(17) == False
    assert candidate(10) == True
    assert candidate(19) == False
    assert candidate(11) == False
    assert candidate(17) == False
    assert candidate(15) == False
    assert candidate(11) == False

if __name__ == '__main__':
    check(is_Sum_Of_Powers_Of_Two)