from case_MBPP_365 import rotate_right


def check(candidate):
    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],3,4)==[8, 9, 10, 1, 2, 3, 4, 5, 6]
    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],2,2)==[9, 10, 1, 2, 3, 4, 5, 6, 7, 8]
    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],5,2)==[6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8]
    assert candidate([2, 7, 7, 8, 8, 8, 5, 11, 6, 11], 2, 6) == [6, 11, 2, 7, 7, 8]
    assert candidate([3, 5, 6, 6, 6, 1, 6, 8, 12, 12], 5, 3) == [1, 6, 8, 12, 12, 3, 5, 6, 6, 6, 1, 6]
    assert candidate([6, 3, 3, 2, 5, 4, 5, 12, 6, 9], 5, 9) == [4, 5, 12, 6, 9, 6]
    assert candidate([5, 1, 1, 3, 5, 5, 2, 5, 12, 15], 2, 2) == [12, 15, 5, 1, 1, 3, 5, 5, 2, 5]
    assert candidate([2, 2, 7, 7, 5, 11, 4, 4, 4, 15], 6, 2) == [5, 11, 4, 4, 4, 15, 2, 2, 7, 7, 5, 11, 4, 4]
    assert candidate([5, 2, 5, 8, 1, 7, 6, 5, 8, 15], 4, 9) == [6, 5, 8, 15, 5]
    assert candidate([6, 2, 6, 7, 5, 8, 12, 6, 11, 11], 2, 2) == [11, 11, 6, 2, 6, 7, 5, 8, 12, 6]
    assert candidate([4, 7, 4, 9, 3, 1, 2, 13, 4, 15], 1, 9) == [15, 4]
    assert candidate([3, 3, 1, 1, 7, 6, 2, 5, 9, 10], 6, 3) == [7, 6, 2, 5, 9, 10, 3, 3, 1, 1, 7, 6, 2]
    assert candidate([4, 2, 1, 7, 7, 3, 11, 12, 9, 5], 6, 5) == [7, 3, 11, 12, 9, 5, 4, 2, 1, 7, 7]
    assert candidate([4, 2, 8, 7, 4, 2, 9, 12, 10, 5], 7, 3) == [7, 4, 2, 9, 12, 10, 5, 4, 2, 8, 7, 4, 2, 9]
    assert candidate([4, 1, 3, 4, 2, 5, 9, 6, 10, 13], 7, 3) == [4, 2, 5, 9, 6, 10, 13, 4, 1, 3, 4, 2, 5, 9]
    assert candidate([4, 4, 7, 3, 4, 11, 3, 6, 6, 5], 7, 3) == [3, 4, 11, 3, 6, 6, 5, 4, 4, 7, 3, 4, 11, 3]
    assert candidate([6, 3, 3, 7, 7, 3, 7, 11, 11, 5], 6, 7) == [7, 3, 7, 11, 11, 5, 6, 3, 3]
    assert candidate([6, 1, 8, 7, 5, 5, 6, 13, 12, 7], 7, 6) == [7, 5, 5, 6, 13, 12, 7, 6, 1, 8, 7]
    assert candidate([5, 6, 2, 3, 1, 8, 10, 6, 9, 14], 5, 8) == [8, 10, 6, 9, 14, 5, 6]
    assert candidate([5, 5, 1, 6, 7, 4, 7, 12, 12, 7], 7, 1) == [6, 7, 4, 7, 12, 12, 7, 5, 5, 1, 6, 7, 4, 7, 12, 12]
    assert candidate([4, 4, 5, 8, 7, 9, 5, 3, 12, 10], 4, 7) == [5, 3, 12, 10, 4, 4, 5]
    assert candidate([5, 1, 2, 6, 10, 10, 6, 5, 10, 5], 1, 6) == [5, 5, 1, 2, 6]
    assert candidate([1, 7, 5, 3, 9, 4, 2, 3, 14, 8], 4, 3) == [2, 3, 14, 8, 1, 7, 5, 3, 9, 4, 2]
    assert candidate([1, 4, 4, 1, 6, 1, 4, 11, 6, 15], 2, 1) == [6, 15, 1, 4, 4, 1, 6, 1, 4, 11, 6]
    assert candidate([4, 6, 1, 8, 10, 6, 11, 9, 11, 10], 1, 4) == [10, 4, 6, 1, 8, 10, 6]
    assert candidate([4, 7, 4, 5, 4, 4, 11, 10, 10, 14], 6, 1) == [4, 4, 11, 10, 10, 14, 4, 7, 4, 5, 4, 4, 11, 10, 10]
    assert candidate([1, 2, 6, 6, 3, 11, 5, 7, 10, 7], 8, 5) == [6, 6, 3, 11, 5, 7, 10, 7, 1, 2, 6, 6, 3]
    assert candidate([6, 7, 1, 4, 9, 1, 9, 13, 8, 5], 8, 3) == [1, 4, 9, 1, 9, 13, 8, 5, 6, 7, 1, 4, 9, 1, 9]
    assert candidate([1, 2, 2, 3, 1, 11, 10, 7, 14, 5], 7, 2) == [3, 1, 11, 10, 7, 14, 5, 1, 2, 2, 3, 1, 11, 10, 7]
    assert candidate([5, 3, 6, 9, 3, 5, 2, 12, 6, 12], 6, 4) == [3, 5, 2, 12, 6, 12, 5, 3, 6, 9, 3, 5]
    assert candidate([3, 5, 5, 7, 9, 1, 8, 9, 12, 8], 6, 6) == [9, 1, 8, 9, 12, 8, 3, 5, 5, 7]
    assert candidate([6, 3, 1, 5, 9, 2, 10, 11, 14, 9], 2, 9) == [14, 9, 6]
    assert candidate([4, 5, 1, 2, 10, 4, 2, 13, 7, 13], 4, 2) == [2, 13, 7, 13, 4, 5, 1, 2, 10, 4, 2, 13]
    assert candidate([2, 1, 4, 3, 5, 4, 8, 6, 5, 12], 5, 2) == [4, 8, 6, 5, 12, 2, 1, 4, 3, 5, 4, 8, 6]
    assert candidate([6, 4, 8, 8, 7, 2, 2, 11, 5, 15], 1, 1) == [15, 6, 4, 8, 8, 7, 2, 2, 11, 5]
    assert candidate([6, 7, 6, 5, 10, 3, 7, 12, 8, 15], 4, 9) == [7, 12, 8, 15, 6]
    assert candidate([5, 1, 7, 4, 1, 4, 8, 13, 12, 10], 7, 5) == [4, 1, 4, 8, 13, 12, 10, 5, 1, 7, 4, 1]
    assert candidate([3, 4, 8, 4, 7, 3, 9, 11, 10, 11], 1, 7) == [11, 3, 4, 8]
    assert candidate([4, 6, 4, 9, 10, 4, 5, 10, 7, 13], 1, 2) == [13, 4, 6, 4, 9, 10, 4, 5, 10]
    assert candidate([5, 1, 8, 8, 6, 11, 2, 5, 7, 5], 1, 6) == [5, 5, 1, 8, 8]
    assert candidate([3, 4, 5, 7, 4, 8, 8, 9, 10, 5], 6, 2) == [4, 8, 8, 9, 10, 5, 3, 4, 5, 7, 4, 8, 8, 9]
    assert candidate([4, 1, 4, 5, 7, 6, 5, 6, 6, 13], 7, 1) == [5, 7, 6, 5, 6, 6, 13, 4, 1, 4, 5, 7, 6, 5, 6, 6]
    assert candidate([3, 3, 2, 7, 7, 11, 7, 4, 4, 8], 3, 2) == [4, 4, 8, 3, 3, 2, 7, 7, 11, 7, 4]
    assert candidate([6, 3, 2, 7, 8, 10, 10, 8, 6, 13], 7, 2) == [7, 8, 10, 10, 8, 6, 13, 6, 3, 2, 7, 8, 10, 10, 8]
    assert candidate([6, 2, 3, 3, 7, 10, 3, 12, 6, 5], 3, 2) == [12, 6, 5, 6, 2, 3, 3, 7, 10, 3, 12]
    assert candidate([5, 7, 5, 9, 2, 9, 11, 3, 11, 6], 4, 3) == [11, 3, 11, 6, 5, 7, 5, 9, 2, 9, 11]
    assert candidate([6, 7, 6, 1, 6, 8, 12, 7, 4, 11], 7, 2) == [1, 6, 8, 12, 7, 4, 11, 6, 7, 6, 1, 6, 8, 12, 7]
    assert candidate([6, 4, 7, 7, 3, 4, 9, 12, 14, 9], 5, 3) == [4, 9, 12, 14, 9, 6, 4, 7, 7, 3, 4, 9]
    assert candidate([4, 6, 1, 8, 10, 1, 11, 7, 5, 12], 1, 2) == [12, 4, 6, 1, 8, 10, 1, 11, 7]
    assert candidate([1, 2, 7, 1, 4, 7, 9, 5, 11, 15], 4, 2) == [9, 5, 11, 15, 1, 2, 7, 1, 4, 7, 9, 5]
    assert candidate([3, 7, 1, 6, 4, 2, 6, 13, 14, 10], 5, 5) == [2, 6, 13, 14, 10, 3, 7, 1, 6, 4]
    assert candidate([2, 6, 8, 4, 2, 6, 11, 7, 4, 6], 2, 1) == [4, 6, 2, 6, 8, 4, 2, 6, 11, 7, 4]
    assert candidate([5, 2, 3, 9, 9, 2, 7, 6, 9, 14], 5, 6) == [2, 7, 6, 9, 14, 5, 2, 3, 9]
    assert candidate([3, 7, 6, 3, 9, 3, 11, 3, 11, 5], 1, 5) == [5, 3, 7, 6, 3, 9]
    assert candidate([6, 6, 3, 8, 9, 11, 12, 13, 14, 6], 5, 7) == [11, 12, 13, 14, 6, 6, 6, 3]
    assert candidate([6, 7, 6, 7, 7, 2, 4, 13, 8, 5], 2, 1) == [8, 5, 6, 7, 6, 7, 7, 2, 4, 13, 8]
    assert candidate([6, 6, 3, 7, 3, 4, 11, 7, 9, 13], 3, 3) == [7, 9, 13, 6, 6, 3, 7, 3, 4, 11]
    assert candidate([1, 6, 4, 1, 8, 2, 4, 6, 10, 11], 1, 7) == [11, 1, 6, 4]
    assert candidate([1, 1, 8, 9, 9, 4, 11, 13, 14, 9], 4, 2) == [11, 13, 14, 9, 1, 1, 8, 9, 9, 4, 11, 13]
    assert candidate([5, 7, 8, 1, 10, 8, 5, 11, 11, 8], 2, 2) == [11, 8, 5, 7, 8, 1, 10, 8, 5, 11]
    assert candidate([2, 6, 5, 4, 9, 2, 11, 5, 4, 13], 5, 5) == [2, 11, 5, 4, 13, 2, 6, 5, 4, 9]
    assert candidate([6, 4, 8, 8, 6, 4, 6, 7, 13, 9], 1, 4) == [9, 6, 4, 8, 8, 6, 4]
    assert candidate([4, 1, 1, 4, 8, 10, 5, 4, 4, 12], 3, 6) == [4, 4, 12, 4, 1, 1, 4]
    assert candidate([2, 2, 7, 7, 7, 4, 10, 10, 14, 14], 3, 4) == [10, 14, 14, 2, 2, 7, 7, 7, 4]
    assert candidate([5, 4, 5, 3, 2, 4, 2, 9, 12, 15], 1, 1) == [15, 5, 4, 5, 3, 2, 4, 2, 9, 12]
    assert candidate([5, 1, 5, 6, 4, 6, 9, 3, 14, 9], 6, 2) == [4, 6, 9, 3, 14, 9, 5, 1, 5, 6, 4, 6, 9, 3]
    assert candidate([6, 1, 1, 6, 2, 4, 2, 9, 5, 7], 6, 5) == [2, 4, 2, 9, 5, 7, 6, 1, 1, 6, 2]
    assert candidate([4, 5, 1, 9, 8, 1, 6, 6, 7, 6], 7, 6) == [9, 8, 1, 6, 6, 7, 6, 4, 5, 1, 9]
    assert candidate([5, 1, 3, 9, 10, 11, 7, 10, 14, 7], 5, 4) == [11, 7, 10, 14, 7, 5, 1, 3, 9, 10, 11]
    assert candidate([1, 6, 1, 4, 9, 4, 9, 13, 10, 11], 10, 3) == [1, 6, 1, 4, 9, 4, 9, 13, 10, 11, 1, 6, 1, 4, 9, 4, 9]
    assert candidate([3, 5, 7, 2, 4, 11, 8, 7, 5, 13], 9, 4) == [5, 7, 2, 4, 11, 8, 7, 5, 13, 3, 5, 7, 2, 4, 11]
    assert candidate([3, 6, 1, 6, 2, 8, 2, 7, 6, 15], 9, 7) == [6, 1, 6, 2, 8, 2, 7, 6, 15, 3, 6, 1]
    assert candidate([6, 6, 4, 9, 6, 7, 7, 12, 6, 9], 3, 7) == [12, 6, 9, 6, 6, 4]
    assert candidate([2, 1, 5, 9, 2, 9, 5, 7, 14, 10], 8, 7) == [5, 9, 2, 9, 5, 7, 14, 10, 2, 1, 5]
    assert candidate([4, 7, 4, 7, 2, 8, 3, 9, 6, 14], 2, 4) == [6, 14, 4, 7, 4, 7, 2, 8]
    assert candidate([4, 1, 5, 2, 8, 4, 2, 5, 10, 10], 7, 1) == [2, 8, 4, 2, 5, 10, 10, 4, 1, 5, 2, 8, 4, 2, 5, 10]
    assert candidate([3, 1, 2, 7, 10, 7, 5, 3, 9, 5], 2, 2) == [9, 5, 3, 1, 2, 7, 10, 7, 5, 3]
    assert candidate([3, 6, 4, 5, 6, 11, 4, 8, 11, 11], 9, 7) == [6, 4, 5, 6, 11, 4, 8, 11, 11, 3, 6, 4]
    assert candidate([4, 1, 1, 8, 2, 3, 2, 5, 7, 9], 2, 2) == [7, 9, 4, 1, 1, 8, 2, 3, 2, 5]
    assert candidate([2, 2, 7, 6, 10, 9, 7, 8, 5, 12], 10, 7) == [2, 2, 7, 6, 10, 9, 7, 8, 5, 12, 2, 2, 7]
    assert candidate([4, 2, 6, 5, 9, 11, 2, 13, 14, 7], 10, 7) == [4, 2, 6, 5, 9, 11, 2, 13, 14, 7, 4, 2, 6]
    assert candidate([2, 1, 6, 2, 2, 9, 10, 10, 13, 13], 8, 2) == [6, 2, 2, 9, 10, 10, 13, 13, 2, 1, 6, 2, 2, 9, 10, 10]
    assert candidate([6, 4, 4, 8, 9, 3, 5, 13, 10, 11], 5, 4) == [3, 5, 13, 10, 11, 6, 4, 4, 8, 9, 3]
    assert candidate([6, 5, 8, 8, 1, 8, 3, 9, 10, 12], 2, 3) == [10, 12, 6, 5, 8, 8, 1, 8, 3]
    assert candidate([6, 5, 1, 6, 7, 7, 6, 13, 13, 13], 1, 6) == [13, 6, 5, 1, 6]
    assert candidate([2, 6, 1, 6, 7, 4, 5, 11, 6, 6], 7, 5) == [6, 7, 4, 5, 11, 6, 6, 2, 6, 1, 6, 7]
    assert candidate([2, 5, 3, 1, 7, 7, 7, 4, 7, 5], 3, 7) == [4, 7, 5, 2, 5, 3]
    assert candidate([5, 7, 8, 3, 6, 6, 12, 8, 7, 12], 7, 2) == [3, 6, 6, 12, 8, 7, 12, 5, 7, 8, 3, 6, 6, 12, 8]
    assert candidate([3, 2, 6, 1, 9, 9, 2, 5, 9, 7], 3, 3) == [5, 9, 7, 3, 2, 6, 1, 9, 9, 2]
    assert candidate([3, 2, 8, 1, 3, 7, 10, 13, 10, 10], 8, 5) == [8, 1, 3, 7, 10, 13, 10, 10, 3, 2, 8, 1, 3]
    assert candidate([2, 6, 6, 8, 6, 6, 12, 13, 4, 9], 7, 1) == [8, 6, 6, 12, 13, 4, 9, 2, 6, 6, 8, 6, 6, 12, 13, 4]
    assert candidate([6, 7, 2, 5, 7, 7, 11, 4, 6, 14], 2, 3) == [6, 14, 6, 7, 2, 5, 7, 7, 11]
    assert candidate([6, 1, 5, 8, 8, 5, 3, 10, 4, 13], 8, 4) == [5, 8, 8, 5, 3, 10, 4, 13, 6, 1, 5, 8, 8, 5]
    assert candidate([1, 4, 6, 1, 10, 8, 12, 12, 6, 14], 10, 4) == [1, 4, 6, 1, 10, 8, 12, 12, 6, 14, 1, 4, 6, 1, 10, 8]
    assert candidate([6, 2, 2, 1, 2, 10, 10, 12, 6, 5], 2, 1) == [6, 5, 6, 2, 2, 1, 2, 10, 10, 12, 6]
    assert candidate([3, 7, 2, 1, 1, 9, 5, 12, 8, 14], 9, 5) == [7, 2, 1, 1, 9, 5, 12, 8, 14, 3, 7, 2, 1, 1]
    assert candidate([3, 1, 3, 6, 2, 6, 7, 12, 10, 11], 6, 4) == [2, 6, 7, 12, 10, 11, 3, 1, 3, 6, 2, 6]
    assert candidate([6, 3, 2, 1, 6, 7, 2, 4, 4, 14], 7, 7) == [1, 6, 7, 2, 4, 4, 14, 6, 3, 2]
    assert candidate([1, 1, 3, 3, 6, 6, 2, 10, 4, 8], 1, 3) == [8, 1, 1, 3, 3, 6, 6, 2]
    assert candidate([6, 2, 1, 2, 3, 5, 10, 13, 12, 15], 4, 6) == [10, 13, 12, 15, 6, 2, 1, 2]
    assert candidate([4, 2, 3, 5, 8, 7, 4, 13, 5, 10], 9, 3) == [2, 3, 5, 8, 7, 4, 13, 5, 10, 4, 2, 3, 5, 8, 7, 4]
    assert candidate([3, 1, 6, 5, 2, 3, 8, 7, 7, 6], 2, 6) == [7, 6, 3, 1, 6, 5]

if __name__ == '__main__':
    check(rotate_right)