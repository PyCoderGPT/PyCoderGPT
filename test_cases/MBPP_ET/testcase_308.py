from case_MBPP_308 import get_ludic


def check(candidate):
    assert candidate(10) == [1, 2, 3, 5, 7]
    assert candidate(25) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]
    assert candidate(45) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43]
    assert candidate(5) == [1, 2, 3, 5]
    assert candidate(11) == [1, 2, 3, 5, 7, 11]
    assert candidate(12) == [1, 2, 3, 5, 7, 11]
    assert candidate(12) == [1, 2, 3, 5, 7, 11]
    assert candidate(6) == [1, 2, 3, 5]
    assert candidate(8) == [1, 2, 3, 5, 7]
    assert candidate(14) == [1, 2, 3, 5, 7, 11, 13]
    assert candidate(14) == [1, 2, 3, 5, 7, 11, 13]
    assert candidate(14) == [1, 2, 3, 5, 7, 11, 13]
    assert candidate(6) == [1, 2, 3, 5]
    assert candidate(15) == [1, 2, 3, 5, 7, 11, 13]
    assert candidate(10) == [1, 2, 3, 5, 7]
    assert candidate(13) == [1, 2, 3, 5, 7, 11, 13]
    assert candidate(11) == [1, 2, 3, 5, 7, 11]
    assert candidate(13) == [1, 2, 3, 5, 7, 11, 13]
    assert candidate(8) == [1, 2, 3, 5, 7]
    assert candidate(11) == [1, 2, 3, 5, 7, 11]
    assert candidate(10) == [1, 2, 3, 5, 7]
    assert candidate(6) == [1, 2, 3, 5]
    assert candidate(7) == [1, 2, 3, 5, 7]
    assert candidate(7) == [1, 2, 3, 5, 7]
    assert candidate(10) == [1, 2, 3, 5, 7]
    assert candidate(11) == [1, 2, 3, 5, 7, 11]
    assert candidate(13) == [1, 2, 3, 5, 7, 11, 13]
    assert candidate(5) == [1, 2, 3, 5]
    assert candidate(8) == [1, 2, 3, 5, 7]
    assert candidate(5) == [1, 2, 3, 5]
    assert candidate(14) == [1, 2, 3, 5, 7, 11, 13]
    assert candidate(13) == [1, 2, 3, 5, 7, 11, 13]
    assert candidate(13) == [1, 2, 3, 5, 7, 11, 13]
    assert candidate(8) == [1, 2, 3, 5, 7]
    assert candidate(11) == [1, 2, 3, 5, 7, 11]
    assert candidate(10) == [1, 2, 3, 5, 7]
    assert candidate(25) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]
    assert candidate(27) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]
    assert candidate(22) == [1, 2, 3, 5, 7, 11, 13, 17]
    assert candidate(21) == [1, 2, 3, 5, 7, 11, 13, 17]
    assert candidate(25) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]
    assert candidate(20) == [1, 2, 3, 5, 7, 11, 13, 17]
    assert candidate(28) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]
    assert candidate(29) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29]
    assert candidate(21) == [1, 2, 3, 5, 7, 11, 13, 17]
    assert candidate(30) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29]
    assert candidate(28) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]
    assert candidate(26) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]
    assert candidate(26) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]
    assert candidate(23) == [1, 2, 3, 5, 7, 11, 13, 17, 23]
    assert candidate(29) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29]
    assert candidate(24) == [1, 2, 3, 5, 7, 11, 13, 17, 23]
    assert candidate(28) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]
    assert candidate(21) == [1, 2, 3, 5, 7, 11, 13, 17]
    assert candidate(30) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29]
    assert candidate(25) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]
    assert candidate(22) == [1, 2, 3, 5, 7, 11, 13, 17]
    assert candidate(28) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]
    assert candidate(28) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]
    assert candidate(21) == [1, 2, 3, 5, 7, 11, 13, 17]
    assert candidate(28) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]
    assert candidate(24) == [1, 2, 3, 5, 7, 11, 13, 17, 23]
    assert candidate(22) == [1, 2, 3, 5, 7, 11, 13, 17]
    assert candidate(30) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29]
    assert candidate(25) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]
    assert candidate(22) == [1, 2, 3, 5, 7, 11, 13, 17]
    assert candidate(20) == [1, 2, 3, 5, 7, 11, 13, 17]
    assert candidate(27) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]
    assert candidate(21) == [1, 2, 3, 5, 7, 11, 13, 17]
    assert candidate(49) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43, 47]
    assert candidate(50) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43, 47]
    assert candidate(49) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43, 47]
    assert candidate(40) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37]
    assert candidate(48) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43, 47]
    assert candidate(50) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43, 47]
    assert candidate(43) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43]
    assert candidate(44) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43]
    assert candidate(43) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43]
    assert candidate(45) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43]
    assert candidate(44) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43]
    assert candidate(47) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43, 47]
    assert candidate(43) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43]
    assert candidate(48) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43, 47]
    assert candidate(49) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43, 47]
    assert candidate(49) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43, 47]
    assert candidate(40) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37]
    assert candidate(49) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43, 47]
    assert candidate(45) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43]
    assert candidate(46) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43]
    assert candidate(44) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43]
    assert candidate(50) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43, 47]
    assert candidate(47) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43, 47]
    assert candidate(41) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41]
    assert candidate(47) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43, 47]
    assert candidate(46) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43]
    assert candidate(49) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43, 47]
    assert candidate(44) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43]
    assert candidate(43) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43]
    assert candidate(41) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41]
    assert candidate(44) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43]
    assert candidate(44) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43]
    assert candidate(49) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43, 47]

if __name__ == '__main__':
    check(get_ludic)