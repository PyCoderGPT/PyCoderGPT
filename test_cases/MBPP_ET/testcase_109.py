from case_MBPP_109 import re_arrange_array


def check(candidate):
    assert candidate([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9) == [-1, -3, -7, 4, 5, 6, 2, 8, 9]
    assert candidate([12, -14, -26, 13, 15], 5) == [-14, -26, 12, 13, 15]
    assert candidate([10, 24, 36, -42, -39, -78, 85], 7) == [-42, -39, -78, 10, 24, 36, 85]
    assert candidate([-6, 7, -5, 7, 5, 1, -6, 5, 10], 9) == [-6, -5, -6, 7, 5, 1, 7, 5, 10]
    assert candidate([0, 4, -3, 6, 8, 4, -4, 4, 13], 9) == [-3, -4, 0, 6, 8, 4, 4, 4, 13]
    assert candidate([-5, 3, 0, 2, 3, 9, -2, 4, 7], 7) == [-5, -2, 0, 2, 3, 9, 3, 4, 7]
    assert candidate([4, 5, 2, 1, 1, 8, -8, 12, 12], 8) == [-8, 5, 2, 1, 1, 8, 4, 12, 12]
    assert candidate([-4, 1, -5, 6, 2, 7, -3, 8, 11], 6) == [-4, -5, 1, 6, 2, 7, -3, 8, 11]
    assert candidate([-1, 4, 2, 2, 1, 9, -2, 9, 12], 6) == [-1, 4, 2, 2, 1, 9, -2, 9, 12]
    assert candidate([1, 3, 2, 1, 10, 7, -5, 10, 5], 6) == [1, 3, 2, 1, 10, 7, -5, 10, 5]
    assert candidate([2, 3, -4, 5, 3, 9, -11, 13, 13], 9) == [-4, -11, 2, 5, 3, 9, 3, 13, 13]
    assert candidate([-2, 4, -3, 1, 5, 4, -6, 9, 14], 5) == [-2, -3, 4, 1, 5, 4, -6, 9, 14]
    assert candidate([-3, 5, 0, 6, 1, 10, -12, 10, 9], 9) == [-3, -12, 0, 6, 1, 10, 5, 10, 9]
    assert candidate([-5, 6, -1, 3, 4, 1, -10, 4, 6], 4) == [-5, -1, 6, 3, 4, 1, -10, 4, 6]
    assert candidate([-3, 2, -6, 6, 3, 10, -11, 4, 11], 7) == [-3, -6, -11, 6, 3, 10, 2, 4, 11]
    assert candidate([2, 4, 2, 5, 5, 11, -2, 7, 14], 5) == [2, 4, 2, 5, 5, 11, -2, 7, 14]
    assert candidate([-6, 6, -3, 8, 5, 8, -7, 10, 7], 8) == [-6, -3, -7, 8, 5, 8, 6, 10, 7]
    assert candidate([-4, 7, -4, 8, 1, 9, -4, 11, 13], 6) == [-4, -4, 7, 8, 1, 9, -4, 11, 13]
    assert candidate([-3, 1, 0, 3, 1, 2, -9, 7, 12], 6) == [-3, 1, 0, 3, 1, 2, -9, 7, 12]
    assert candidate([-6, 4, 1, 3, 1, 7, -9, 5, 13], 4) == [-6, 4, 1, 3, 1, 7, -9, 5, 13]
    assert candidate([4, 1, -7, 1, 8, 8, -2, 11, 10], 6) == [-7, 1, 4, 1, 8, 8, -2, 11, 10]
    assert candidate([1, 4, -6, 9, 7, 3, -10, 9, 14], 5) == [-6, 4, 1, 9, 7, 3, -10, 9, 14]
    assert candidate([0, 5, -4, 5, 3, 2, -2, 11, 8], 6) == [-4, 5, 0, 5, 3, 2, -2, 11, 8]
    assert candidate([1, 7, -5, 4, 9, 9, -9, 9, 5], 7) == [-5, -9, 1, 4, 9, 9, 7, 9, 5]
    assert candidate([4, 4, -7, 9, 5, 2, -5, 5, 13], 8) == [-7, -5, 4, 9, 5, 2, 4, 5, 13]
    assert candidate([1, 1, -6, 4, 10, 4, -10, 3, 9], 7) == [-6, -10, 1, 4, 10, 4, 1, 3, 9]
    assert candidate([-1, 1, -7, 8, 7, 11, -6, 11, 9], 9) == [-1, -7, -6, 8, 7, 11, 1, 11, 9]
    assert candidate([-6, 4, -4, 6, 7, 8, -11, 5, 8], 7) == [-6, -4, -11, 6, 7, 8, 4, 5, 8]
    assert candidate([-5, 5, -8, 1, 1, 11, -2, 8, 8], 4) == [-5, -8, 5, 1, 1, 11, -2, 8, 8]
    assert candidate([1, 2, -8, 8, 3, 6, -11, 13, 7], 5) == [-8, 2, 1, 8, 3, 6, -11, 13, 7]
    assert candidate([-5, 1, 1, 7, 4, 9, -7, 13, 9], 5) == [-5, 1, 1, 7, 4, 9, -7, 13, 9]
    assert candidate([-4, 7, -5, 5, 5, 7, -10, 13, 12], 5) == [-4, -5, 7, 5, 5, 7, -10, 13, 12]
    assert candidate([-5, 6, -1, 6, 7, 9, -8, 5, 9], 4) == [-5, -1, 6, 6, 7, 9, -8, 5, 9]
    assert candidate([-4, 4, -6, 1, 10, 8, -12, 5, 12], 4) == [-4, -6, 4, 1, 10, 8, -12, 5, 12]
    assert candidate([-3, 1, -4, 9, 10, 8, -2, 6, 5], 5) == [-3, -4, 1, 9, 10, 8, -2, 6, 5]
    assert candidate([-3, 4, 2, 8, 6, 4, -8, 3, 10], 9) == [-3, -8, 2, 8, 6, 4, 4, 3, 10]
    assert candidate([11, -17, -21, 9, 15], 1) == [11, -17, -21, 9, 15]
    assert candidate([15, -19, -28, 9, 20], 4) == [-19, -28, 15, 9, 20]
    assert candidate([13, -13, -27, 11, 20], 4) == [-13, -27, 13, 11, 20]
    assert candidate([7, -18, -25, 12, 11], 4) == [-18, -25, 7, 12, 11]
    assert candidate([8, -15, -23, 12, 10], 5) == [-15, -23, 8, 12, 10]
    assert candidate([9, -19, -29, 9, 15], 1) == [9, -19, -29, 9, 15]
    assert candidate([13, -19, -21, 17, 19], 3) == [-19, -21, 13, 17, 19]
    assert candidate([9, -10, -25, 18, 12], 3) == [-10, -25, 9, 18, 12]
    assert candidate([14, -17, -22, 18, 13], 2) == [-17, 14, -22, 18, 13]
    assert candidate([13, -13, -29, 13, 12], 3) == [-13, -29, 13, 13, 12]
    assert candidate([12, -16, -24, 13, 10], 2) == [-16, 12, -24, 13, 10]
    assert candidate([17, -16, -21, 11, 10], 5) == [-16, -21, 17, 11, 10]
    assert candidate([13, -9, -28, 8, 12], 4) == [-9, -28, 13, 8, 12]
    assert candidate([14, -15, -25, 8, 18], 4) == [-15, -25, 14, 8, 18]
    assert candidate([11, -13, -23, 9, 13], 1) == [11, -13, -23, 9, 13]
    assert candidate([8, -9, -26, 17, 15], 2) == [-9, 8, -26, 17, 15]
    assert candidate([9, -12, -22, 9, 17], 4) == [-12, -22, 9, 9, 17]
    assert candidate([8, -15, -23, 15, 11], 4) == [-15, -23, 8, 15, 11]
    assert candidate([7, -18, -28, 17, 19], 4) == [-18, -28, 7, 17, 19]
    assert candidate([16, -11, -31, 17, 12], 5) == [-11, -31, 16, 17, 12]
    assert candidate([16, -14, -31, 13, 20], 3) == [-14, -31, 16, 13, 20]
    assert candidate([10, -9, -25, 12, 17], 2) == [-9, 10, -25, 12, 17]
    assert candidate([12, -16, -23, 17, 17], 4) == [-16, -23, 12, 17, 17]
    assert candidate([14, -13, -25, 12, 11], 3) == [-13, -25, 14, 12, 11]
    assert candidate([17, -13, -22, 11, 19], 3) == [-13, -22, 17, 11, 19]
    assert candidate([7, -18, -31, 17, 19], 1) == [7, -18, -31, 17, 19]
    assert candidate([16, -11, -28, 12, 18], 3) == [-11, -28, 16, 12, 18]
    assert candidate([16, -11, -30, 15, 20], 5) == [-11, -30, 16, 15, 20]
    assert candidate([11, -13, -29, 17, 12], 1) == [11, -13, -29, 17, 12]
    assert candidate([13, -13, -30, 14, 19], 3) == [-13, -30, 13, 14, 19]
    assert candidate([17, -11, -28, 9, 14], 1) == [17, -11, -28, 9, 14]
    assert candidate([14, -10, -22, 13, 13], 5) == [-10, -22, 14, 13, 13]
    assert candidate([9, -11, -26, 15, 16], 3) == [-11, -26, 9, 15, 16]
    assert candidate([15, 19, 35, -39, -41, -82, 84], 5) == [-39, -41, 35, 15, 19, -82, 84]
    assert candidate([6, 19, 39, -39, -41, -74, 84], 2) == [6, 19, 39, -39, -41, -74, 84]
    assert candidate([11, 28, 37, -44, -43, -75, 85], 5) == [-44, -43, 37, 11, 28, -75, 85]
    assert candidate([5, 21, 31, -41, -38, -82, 82], 4) == [-41, 21, 31, 5, -38, -82, 82]
    assert candidate([8, 24, 38, -42, -44, -73, 88], 3) == [8, 24, 38, -42, -44, -73, 88]
    assert candidate([13, 23, 31, -44, -39, -77, 84], 5) == [-44, -39, 31, 13, 23, -77, 84]
    assert candidate([15, 20, 37, -37, -34, -77, 80], 7) == [-37, -34, -77, 15, 20, 37, 80]
    assert candidate([12, 27, 40, -46, -44, -76, 87], 5) == [-46, -44, 40, 12, 27, -76, 87]
    assert candidate([15, 23, 37, -43, -35, -77, 87], 3) == [15, 23, 37, -43, -35, -77, 87]
    assert candidate([13, 20, 41, -37, -35, -80, 85], 2) == [13, 20, 41, -37, -35, -80, 85]
    assert candidate([5, 21, 36, -41, -39, -80, 86], 3) == [5, 21, 36, -41, -39, -80, 86]
    assert candidate([13, 23, 39, -46, -34, -77, 80], 6) == [-46, -34, -77, 13, 23, 39, 80]
    assert candidate([6, 22, 31, -47, -34, -83, 82], 6) == [-47, -34, -83, 6, 22, 31, 82]
    assert candidate([6, 21, 31, -47, -44, -77, 85], 7) == [-47, -44, -77, 6, 21, 31, 85]
    assert candidate([7, 28, 34, -40, -43, -76, 84], 7) == [-40, -43, -76, 7, 28, 34, 84]
    assert candidate([15, 29, 35, -38, -35, -73, 83], 7) == [-38, -35, -73, 15, 29, 35, 83]
    assert candidate([14, 21, 32, -45, -39, -82, 85], 7) == [-45, -39, -82, 14, 21, 32, 85]
    assert candidate([9, 21, 39, -37, -36, -77, 85], 6) == [-37, -36, -77, 9, 21, 39, 85]
    assert candidate([10, 28, 34, -38, -39, -77, 82], 6) == [-38, -39, -77, 10, 28, 34, 82]
    assert candidate([11, 26, 31, -42, -40, -79, 81], 7) == [-42, -40, -79, 11, 26, 31, 81]
    assert candidate([11, 29, 35, -44, -44, -73, 86], 4) == [-44, 29, 35, 11, -44, -73, 86]
    assert candidate([13, 19, 31, -46, -40, -73, 81], 5) == [-46, -40, 31, 13, 19, -73, 81]
    assert candidate([7, 22, 36, -37, -37, -76, 90], 5) == [-37, -37, 36, 7, 22, -76, 90]
    assert candidate([11, 19, 31, -45, -39, -77, 82], 3) == [11, 19, 31, -45, -39, -77, 82]
    assert candidate([13, 21, 32, -40, -36, -73, 80], 4) == [-40, 21, 32, 13, -36, -73, 80]
    assert candidate([5, 28, 37, -37, -34, -73, 83], 2) == [5, 28, 37, -37, -34, -73, 83]
    assert candidate([12, 28, 40, -45, -36, -75, 85], 2) == [12, 28, 40, -45, -36, -75, 85]
    assert candidate([8, 24, 31, -39, -42, -76, 83], 7) == [-39, -42, -76, 8, 24, 31, 83]
    assert candidate([13, 21, 41, -45, -36, -74, 89], 5) == [-45, -36, 41, 13, 21, -74, 89]
    assert candidate([11, 28, 33, -39, -43, -80, 80], 3) == [11, 28, 33, -39, -43, -80, 80]
    assert candidate([10, 27, 38, -39, -42, -80, 81], 7) == [-39, -42, -80, 10, 27, 38, 81]
    assert candidate([9, 20, 39, -42, -38, -80, 81], 6) == [-42, -38, -80, 9, 20, 39, 81]
    assert candidate([11, 20, 31, -47, -43, -83, 87], 2) == [11, 20, 31, -47, -43, -83, 87]

if __name__ == '__main__':
    check(re_arrange_array)