from case_MBPP_235 import cube_nums


def check(candidate):
    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]
    assert candidate([10,20,30])==([1000, 8000, 27000])
    assert candidate([12,15])==([1728, 3375])
    assert candidate([3, 6, 6, 4, 4, 9, 5, 11, 11, 12]) == [27, 216, 216, 64, 64, 729, 125, 1331, 1331, 1728]
    assert candidate([4, 3, 5, 5, 1, 8, 5, 5, 4, 6]) == [64, 27, 125, 125, 1, 512, 125, 125, 64, 216]
    assert candidate([2, 1, 3, 4, 5, 8, 4, 5, 11, 12]) == [8, 1, 27, 64, 125, 512, 64, 125, 1331, 1728]
    assert candidate([5, 2, 1, 4, 6, 2, 4, 13, 10, 11]) == [125, 8, 1, 64, 216, 8, 64, 2197, 1000, 1331]
    assert candidate([6, 5, 2, 2, 7, 4, 11, 12, 6, 5]) == [216, 125, 8, 8, 343, 64, 1331, 1728, 216, 125]
    assert candidate([6, 5, 1, 7, 1, 7, 6, 11, 9, 10]) == [216, 125, 1, 343, 1, 343, 216, 1331, 729, 1000]
    assert candidate([3, 1, 2, 8, 10, 11, 7, 5, 13, 10]) == [27, 1, 8, 512, 1000, 1331, 343, 125, 2197, 1000]
    assert candidate([4, 5, 7, 8, 4, 7, 2, 13, 4, 11]) == [64, 125, 343, 512, 64, 343, 8, 2197, 64, 1331]
    assert candidate([2, 4, 8, 9, 1, 7, 7, 4, 14, 6]) == [8, 64, 512, 729, 1, 343, 343, 64, 2744, 216]
    assert candidate([1, 3, 8, 1, 2, 10, 5, 9, 7, 6]) == [1, 27, 512, 1, 8, 1000, 125, 729, 343, 216]
    assert candidate([2, 4, 5, 2, 4, 8, 6, 10, 7, 12]) == [8, 64, 125, 8, 64, 512, 216, 1000, 343, 1728]
    assert candidate([5, 2, 6, 3, 3, 1, 10, 4, 10, 7]) == [125, 8, 216, 27, 27, 1, 1000, 64, 1000, 343]
    assert candidate([4, 5, 1, 7, 1, 6, 6, 4, 9, 10]) == [64, 125, 1, 343, 1, 216, 216, 64, 729, 1000]
    assert candidate([5, 5, 4, 4, 3, 10, 10, 7, 14, 13]) == [125, 125, 64, 64, 27, 1000, 1000, 343, 2744, 2197]
    assert candidate([2, 2, 4, 3, 9, 6, 3, 11, 11, 11]) == [8, 8, 64, 27, 729, 216, 27, 1331, 1331, 1331]
    assert candidate([4, 4, 3, 1, 7, 6, 4, 9, 11, 13]) == [64, 64, 27, 1, 343, 216, 64, 729, 1331, 2197]
    assert candidate([2, 4, 4, 5, 3, 3, 7, 10, 4, 6]) == [8, 64, 64, 125, 27, 27, 343, 1000, 64, 216]
    assert candidate([3, 7, 1, 9, 8, 8, 9, 9, 8, 15]) == [27, 343, 1, 729, 512, 512, 729, 729, 512, 3375]
    assert candidate([1, 3, 2, 2, 2, 7, 9, 10, 13, 12]) == [1, 27, 8, 8, 8, 343, 729, 1000, 2197, 1728]
    assert candidate([2, 3, 7, 9, 4, 6, 3, 4, 5, 6]) == [8, 27, 343, 729, 64, 216, 27, 64, 125, 216]
    assert candidate([5, 3, 8, 9, 3, 5, 7, 12, 8, 5]) == [125, 27, 512, 729, 27, 125, 343, 1728, 512, 125]
    assert candidate([5, 6, 3, 5, 1, 1, 6, 8, 14, 7]) == [125, 216, 27, 125, 1, 1, 216, 512, 2744, 343]
    assert candidate([1, 5, 4, 1, 8, 2, 3, 4, 10, 11]) == [1, 125, 64, 1, 512, 8, 27, 64, 1000, 1331]
    assert candidate([1, 3, 2, 1, 1, 9, 6, 5, 8, 7]) == [1, 27, 8, 1, 1, 729, 216, 125, 512, 343]
    assert candidate([3, 3, 7, 3, 3, 2, 12, 10, 13, 15]) == [27, 27, 343, 27, 27, 8, 1728, 1000, 2197, 3375]
    assert candidate([5, 4, 4, 9, 5, 4, 2, 6, 4, 9]) == [125, 64, 64, 729, 125, 64, 8, 216, 64, 729]
    assert candidate([1, 2, 5, 7, 7, 5, 3, 8, 8, 7]) == [1, 8, 125, 343, 343, 125, 27, 512, 512, 343]
    assert candidate([2, 1, 1, 4, 2, 9, 9, 8, 6, 5]) == [8, 1, 1, 64, 8, 729, 729, 512, 216, 125]
    assert candidate([6, 3, 1, 5, 5, 11, 11, 11, 7, 5]) == [216, 27, 1, 125, 125, 1331, 1331, 1331, 343, 125]
    assert candidate([5, 1, 4, 7, 9, 2, 4, 7, 4, 8]) == [125, 1, 64, 343, 729, 8, 64, 343, 64, 512]
    assert candidate([4, 3, 7, 8, 7, 9, 9, 6, 5, 9]) == [64, 27, 343, 512, 343, 729, 729, 216, 125, 729]
    assert candidate([3, 3, 2, 8, 1, 1, 9, 9, 4, 6]) == [27, 27, 8, 512, 1, 1, 729, 729, 64, 216]
    assert candidate([4, 5, 1, 9, 8, 1, 12, 13, 9, 10]) == [64, 125, 1, 729, 512, 1, 1728, 2197, 729, 1000]
    assert candidate([6, 15, 34]) == [216, 3375, 39304]
    assert candidate([12, 23, 28]) == [1728, 12167, 21952]
    assert candidate([6, 16, 32]) == [216, 4096, 32768]
    assert candidate([8, 25, 26]) == [512, 15625, 17576]
    assert candidate([6, 20, 34]) == [216, 8000, 39304]
    assert candidate([15, 23, 29]) == [3375, 12167, 24389]
    assert candidate([9, 22, 31]) == [729, 10648, 29791]
    assert candidate([15, 18, 27]) == [3375, 5832, 19683]
    assert candidate([8, 17, 31]) == [512, 4913, 29791]
    assert candidate([13, 16, 28]) == [2197, 4096, 21952]
    assert candidate([10, 22, 29]) == [1000, 10648, 24389]
    assert candidate([12, 21, 32]) == [1728, 9261, 32768]
    assert candidate([10, 18, 29]) == [1000, 5832, 24389]
    assert candidate([5, 25, 29]) == [125, 15625, 24389]
    assert candidate([6, 21, 35]) == [216, 9261, 42875]
    assert candidate([9, 16, 30]) == [729, 4096, 27000]
    assert candidate([5, 17, 34]) == [125, 4913, 39304]
    assert candidate([5, 21, 32]) == [125, 9261, 32768]
    assert candidate([7, 25, 30]) == [343, 15625, 27000]
    assert candidate([15, 15, 30]) == [3375, 3375, 27000]
    assert candidate([13, 20, 33]) == [2197, 8000, 35937]
    assert candidate([8, 15, 32]) == [512, 3375, 32768]
    assert candidate([8, 25, 31]) == [512, 15625, 29791]
    assert candidate([8, 24, 26]) == [512, 13824, 17576]
    assert candidate([12, 20, 33]) == [1728, 8000, 35937]
    assert candidate([10, 16, 33]) == [1000, 4096, 35937]
    assert candidate([13, 16, 26]) == [2197, 4096, 17576]
    assert candidate([10, 17, 28]) == [1000, 4913, 21952]
    assert candidate([12, 24, 32]) == [1728, 13824, 32768]
    assert candidate([14, 23, 34]) == [2744, 12167, 39304]
    assert candidate([6, 22, 35]) == [216, 10648, 42875]
    assert candidate([8, 15, 25]) == [512, 3375, 15625]
    assert candidate([13, 22, 35]) == [2197, 10648, 42875]
    assert candidate([9, 13]) == [729, 2197]
    assert candidate([16, 15]) == [4096, 3375]
    assert candidate([12, 19]) == [1728, 6859]
    assert candidate([15, 19]) == [3375, 6859]
    assert candidate([14, 20]) == [2744, 8000]
    assert candidate([7, 17]) == [343, 4913]
    assert candidate([9, 12]) == [729, 1728]
    assert candidate([10, 14]) == [1000, 2744]
    assert candidate([14, 10]) == [2744, 1000]
    assert candidate([9, 10]) == [729, 1000]
    assert candidate([7, 10]) == [343, 1000]
    assert candidate([10, 10]) == [1000, 1000]
    assert candidate([16, 10]) == [4096, 1000]
    assert candidate([15, 10]) == [3375, 1000]
    assert candidate([10, 16]) == [1000, 4096]
    assert candidate([13, 19]) == [2197, 6859]
    assert candidate([16, 20]) == [4096, 8000]
    assert candidate([11, 15]) == [1331, 3375]
    assert candidate([16, 14]) == [4096, 2744]
    assert candidate([15, 14]) == [3375, 2744]
    assert candidate([10, 19]) == [1000, 6859]
    assert candidate([14, 11]) == [2744, 1331]
    assert candidate([17, 13]) == [4913, 2197]
    assert candidate([11, 20]) == [1331, 8000]
    assert candidate([7, 13]) == [343, 2197]
    assert candidate([7, 18]) == [343, 5832]
    assert candidate([17, 16]) == [4913, 4096]
    assert candidate([10, 10]) == [1000, 1000]
    assert candidate([15, 18]) == [3375, 5832]
    assert candidate([10, 13]) == [1000, 2197]
    assert candidate([11, 12]) == [1331, 1728]
    assert candidate([11, 16]) == [1331, 4096]
    assert candidate([13, 16]) == [2197, 4096]

if __name__ == '__main__':
    check(cube_nums)