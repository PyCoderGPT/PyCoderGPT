from case_MBPP_231 import largest_neg


def check(candidate):
    assert candidate([1,2,3,-4,-6]) == -6
    assert candidate([1,2,3,-8,-9]) == -9
    assert candidate([1,2,3,4,-1]) == -1
    assert candidate([4, 1, 5, -8, -8]) == -8
    assert candidate([1, 6, 8, -2, -5]) == -5
    assert candidate([5, 6, 8, 0, -1]) == -1
    assert candidate([3, 4, 6, -7, -3]) == -7
    assert candidate([2, 7, 6, 1, -5]) == -5
    assert candidate([2, 1, 1, -4, -11]) == -11
    assert candidate([1, 6, 8, -6, -7]) == -7
    assert candidate([3, 7, 5, 1, -3]) == -3
    assert candidate([2, 7, 3, -6, -4]) == -6
    assert candidate([2, 7, 7, -5, -4]) == -5
    assert candidate([4, 1, 2, -9, -5]) == -9
    assert candidate([2, 7, 7, -1, -9]) == -9
    assert candidate([5, 2, 2, -3, -10]) == -10
    assert candidate([2, 4, 5, 1, -10]) == -10
    assert candidate([5, 4, 2, -6, -7]) == -7
    assert candidate([2, 7, 4, -1, -7]) == -7
    assert candidate([2, 1, 4, -3, -8]) == -8
    assert candidate([3, 4, 4, 0, -9]) == -9
    assert candidate([5, 7, 1, -6, -10]) == -10
    assert candidate([4, 4, 1, 1, -7]) == -7
    assert candidate([1, 3, 2, -6, -7]) == -7
    assert candidate([6, 5, 4, 0, -6]) == -6
    assert candidate([5, 3, 6, -6, -8]) == -8
    assert candidate([4, 2, 3, -9, -10]) == -10
    assert candidate([4, 2, 3, -6, -6]) == -6
    assert candidate([5, 2, 8, -9, -10]) == -10
    assert candidate([2, 6, 4, -4, -3]) == -4
    assert candidate([6, 5, 5, -4, -8]) == -8
    assert candidate([3, 4, 8, 1, -11]) == -11
    assert candidate([5, 1, 3, -3, -1]) == -3
    assert candidate([5, 6, 4, -5, -9]) == -9
    assert candidate([3, 1, 1, -4, -4]) == -4
    assert candidate([6, 7, 3, -4, -6]) == -6
    assert candidate([4, 5, 4, -3, -9]) == -9
    assert candidate([6, 3, 1, -8, -4]) == -8
    assert candidate([6, 5, 5, -11, -4]) == -11
    assert candidate([3, 7, 3, -3, -6]) == -6
    assert candidate([5, 4, 2, -6, -11]) == -11
    assert candidate([3, 5, 3, -12, -10]) == -12
    assert candidate([5, 1, 4, -10, -5]) == -10
    assert candidate([4, 7, 5, -3, -10]) == -10
    assert candidate([6, 6, 6, -7, -4]) == -7
    assert candidate([3, 6, 3, -9, -9]) == -9
    assert candidate([2, 3, 8, -10, -14]) == -14
    assert candidate([4, 5, 4, -3, -12]) == -12
    assert candidate([3, 3, 8, -5, -11]) == -11
    assert candidate([4, 3, 8, -8, -6]) == -8
    assert candidate([1, 5, 3, -4, -14]) == -14
    assert candidate([1, 3, 1, -7, -5]) == -7
    assert candidate([1, 7, 1, -7, -11]) == -11
    assert candidate([1, 2, 2, -7, -5]) == -7
    assert candidate([6, 5, 1, -4, -7]) == -7
    assert candidate([5, 4, 4, -8, -9]) == -9
    assert candidate([3, 2, 4, -8, -10]) == -10
    assert candidate([5, 5, 6, -9, -7]) == -9
    assert candidate([3, 3, 1, -7, -9]) == -9
    assert candidate([3, 7, 5, -13, -13]) == -13
    assert candidate([3, 5, 5, -13, -14]) == -14
    assert candidate([2, 4, 5, -10, -7]) == -10
    assert candidate([4, 4, 7, -9, -11]) == -11
    assert candidate([6, 1, 8, -8, -6]) == -8
    assert candidate([1, 1, 2, -12, -8]) == -12
    assert candidate([6, 1, 3, -7, -8]) == -8
    assert candidate([3, 2, 3, -3, -10]) == -10
    assert candidate([4, 3, 4, -5, -7]) == -7
    assert candidate([5, 4, 5, -3, -7]) == -7
    assert candidate([3, 7, 4, 8, -4]) == -4
    assert candidate([2, 3, 5, 6, -3]) == -3
    assert candidate([6, 5, 6, 2, -1]) == -1
    assert candidate([2, 3, 7, 7, 4]) == 2
    assert candidate([3, 7, 8, 2, -6]) == -6
    assert candidate([5, 6, 1, 7, -4]) == -4
    assert candidate([2, 7, 1, 6, -4]) == -4
    assert candidate([1, 1, 4, 1, -3]) == -3
    assert candidate([4, 3, 3, 1, -5]) == -5
    assert candidate([1, 7, 8, 4, 3]) == 1
    assert candidate([6, 7, 3, 9, -2]) == -2
    assert candidate([5, 3, 3, 1, -3]) == -3
    assert candidate([5, 3, 8, 6, 3]) == 3
    assert candidate([2, 3, 7, 8, -3]) == -3
    assert candidate([3, 2, 3, 3, -4]) == -4
    assert candidate([4, 1, 7, 1, 4]) == 1
    assert candidate([2, 6, 6, 3, -4]) == -4
    assert candidate([5, 6, 8, 4, -1]) == -1
    assert candidate([3, 3, 8, 2, -5]) == -5
    assert candidate([3, 1, 4, 7, -4]) == -4
    assert candidate([2, 4, 8, 1, 2]) == 1
    assert candidate([1, 5, 6, 4, -2]) == -2
    assert candidate([4, 5, 6, 3, -5]) == -5
    assert candidate([4, 1, 2, 5, 0]) == 0
    assert candidate([4, 6, 3, 6, -3]) == -3
    assert candidate([2, 7, 3, 3, -3]) == -3
    assert candidate([3, 2, 1, 2, -3]) == -3
    assert candidate([5, 4, 4, 2, 0]) == 0
    assert candidate([1, 4, 6, 1, 0]) == 0
    assert candidate([1, 1, 1, 7, -1]) == -1
    assert candidate([1, 3, 4, 1, -4]) == -4
    assert candidate([1, 1, 6, 1, -1]) == -1
    assert candidate([3, 7, 4, 6, -5]) == -5

if __name__ == '__main__':
    check(largest_neg)