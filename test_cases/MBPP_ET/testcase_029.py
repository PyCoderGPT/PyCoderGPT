from case_MBPP_029 import comb_sort


def check(candidate):
    assert candidate([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79]
    assert candidate([41, 32, 15, 19, 22]) == [15, 19, 22, 32, 41]
    assert candidate([99, 15, 13, 47]) == [13, 15, 47, 99]
    assert candidate([7, 10, 39, 29, 78]) == [7, 10, 29, 39, 78]
    assert candidate([2, 19, 41, 28, 75]) == [2, 19, 28, 41, 75]
    assert candidate([9, 11, 37, 30, 83]) == [9, 11, 30, 37, 83]
    assert candidate([2, 10, 37, 27, 76]) == [2, 10, 27, 37, 76]
    assert candidate([1, 11, 37, 27, 75]) == [1, 11, 27, 37, 75]
    assert candidate([9, 12, 33, 24, 84]) == [9, 12, 24, 33, 84]
    assert candidate([10, 14, 41, 25, 82]) == [10, 14, 25, 41, 82]
    assert candidate([3, 20, 38, 27, 75]) == [3, 20, 27, 38, 75]
    assert candidate([7, 12, 40, 26, 76]) == [7, 12, 26, 40, 76]
    assert candidate([2, 19, 38, 24, 84]) == [2, 19, 24, 38, 84]
    assert candidate([3, 11, 34, 23, 77]) == [3, 11, 23, 34, 77]
    assert candidate([1, 12, 34, 20, 81]) == [1, 12, 20, 34, 81]
    assert candidate([6, 15, 38, 26, 77]) == [6, 15, 26, 38, 77]
    assert candidate([6, 10, 38, 22, 84]) == [6, 10, 22, 38, 84]
    assert candidate([7, 16, 38, 28, 75]) == [7, 16, 28, 38, 75]
    assert candidate([1, 14, 37, 26, 75]) == [1, 14, 26, 37, 75]
    assert candidate([8, 18, 36, 29, 80]) == [8, 18, 29, 36, 80]
    assert candidate([4, 16, 37, 28, 79]) == [4, 16, 28, 37, 79]
    assert candidate([8, 11, 37, 24, 84]) == [8, 11, 24, 37, 84]
    assert candidate([4, 10, 32, 25, 75]) == [4, 10, 25, 32, 75]
    assert candidate([2, 17, 38, 20, 78]) == [2, 17, 20, 38, 78]
    assert candidate([1, 16, 41, 30, 82]) == [1, 16, 30, 41, 82]
    assert candidate([5, 12, 32, 25, 83]) == [5, 12, 25, 32, 83]
    assert candidate([5, 13, 32, 28, 74]) == [5, 13, 28, 32, 74]
    assert candidate([6, 20, 40, 26, 79]) == [6, 20, 26, 40, 79]
    assert candidate([1, 10, 34, 22, 80]) == [1, 10, 22, 34, 80]
    assert candidate([7, 10, 39, 20, 83]) == [7, 10, 20, 39, 83]
    assert candidate([1, 20, 38, 24, 74]) == [1, 20, 24, 38, 74]
    assert candidate([3, 14, 42, 29, 80]) == [3, 14, 29, 42, 80]
    assert candidate([4, 13, 38, 28, 83]) == [4, 13, 28, 38, 83]
    assert candidate([2, 20, 33, 24, 80]) == [2, 20, 24, 33, 80]
    assert candidate([2, 13, 32, 25, 79]) == [2, 13, 25, 32, 79]
    assert candidate([7, 12, 33, 29, 76]) == [7, 12, 29, 33, 76]
    assert candidate([42, 36, 20, 21, 24]) == [20, 21, 24, 36, 42]
    assert candidate([37, 32, 20, 21, 18]) == [18, 20, 21, 32, 37]
    assert candidate([36, 27, 16, 24, 21]) == [16, 21, 24, 27, 36]
    assert candidate([42, 27, 11, 19, 25]) == [11, 19, 25, 27, 42]
    assert candidate([43, 31, 19, 24, 23]) == [19, 23, 24, 31, 43]
    assert candidate([37, 31, 13, 16, 25]) == [13, 16, 25, 31, 37]
    assert candidate([40, 34, 14, 17, 26]) == [14, 17, 26, 34, 40]
    assert candidate([36, 27, 17, 20, 20]) == [17, 20, 20, 27, 36]
    assert candidate([44, 37, 15, 19, 20]) == [15, 19, 20, 37, 44]
    assert candidate([44, 32, 11, 14, 23]) == [11, 14, 23, 32, 44]
    assert candidate([45, 27, 19, 14, 23]) == [14, 19, 23, 27, 45]
    assert candidate([46, 35, 18, 22, 21]) == [18, 21, 22, 35, 46]
    assert candidate([40, 31, 10, 20, 25]) == [10, 20, 25, 31, 40]
    assert candidate([45, 34, 11, 17, 21]) == [11, 17, 21, 34, 45]
    assert candidate([43, 28, 18, 21, 27]) == [18, 21, 27, 28, 43]
    assert candidate([40, 34, 14, 16, 22]) == [14, 16, 22, 34, 40]
    assert candidate([41, 31, 15, 22, 26]) == [15, 22, 26, 31, 41]
    assert candidate([43, 31, 17, 22, 27]) == [17, 22, 27, 31, 43]
    assert candidate([44, 29, 18, 22, 19]) == [18, 19, 22, 29, 44]
    assert candidate([42, 27, 11, 14, 26]) == [11, 14, 26, 27, 42]
    assert candidate([38, 32, 12, 14, 17]) == [12, 14, 17, 32, 38]
    assert candidate([46, 33, 18, 14, 18]) == [14, 18, 18, 33, 46]
    assert candidate([46, 34, 20, 17, 25]) == [17, 20, 25, 34, 46]
    assert candidate([43, 36, 10, 20, 26]) == [10, 20, 26, 36, 43]
    assert candidate([43, 28, 11, 20, 24]) == [11, 20, 24, 28, 43]
    assert candidate([42, 36, 12, 14, 26]) == [12, 14, 26, 36, 42]
    assert candidate([38, 29, 10, 23, 21]) == [10, 21, 23, 29, 38]
    assert candidate([41, 30, 19, 14, 18]) == [14, 18, 19, 30, 41]
    assert candidate([38, 37, 17, 19, 25]) == [17, 19, 25, 37, 38]
    assert candidate([44, 28, 16, 22, 18]) == [16, 18, 22, 28, 44]
    assert candidate([41, 31, 13, 14, 23]) == [13, 14, 23, 31, 41]
    assert candidate([45, 36, 20, 18, 21]) == [18, 20, 21, 36, 45]
    assert candidate([44, 31, 15, 24, 17]) == [15, 17, 24, 31, 44]
    assert candidate([97, 13, 17, 45]) == [13, 17, 45, 97]
    assert candidate([96, 10, 11, 48]) == [10, 11, 48, 96]
    assert candidate([97, 16, 12, 45]) == [12, 16, 45, 97]
    assert candidate([95, 13, 16, 51]) == [13, 16, 51, 95]
    assert candidate([104, 11, 18, 48]) == [11, 18, 48, 104]
    assert candidate([96, 10, 16, 48]) == [10, 16, 48, 96]
    assert candidate([95, 18, 8, 52]) == [8, 18, 52, 95]
    assert candidate([98, 15, 9, 43]) == [9, 15, 43, 98]
    assert candidate([94, 18, 8, 45]) == [8, 18, 45, 94]
    assert candidate([100, 11, 16, 47]) == [11, 16, 47, 100]
    assert candidate([103, 20, 10, 44]) == [10, 20, 44, 103]
    assert candidate([100, 10, 15, 48]) == [10, 15, 48, 100]
    assert candidate([100, 12, 15, 46]) == [12, 15, 46, 100]
    assert candidate([102, 16, 11, 42]) == [11, 16, 42, 102]
    assert candidate([99, 16, 15, 48]) == [15, 16, 48, 99]
    assert candidate([95, 14, 14, 42]) == [14, 14, 42, 95]
    assert candidate([98, 20, 12, 45]) == [12, 20, 45, 98]
    assert candidate([104, 19, 9, 42]) == [9, 19, 42, 104]
    assert candidate([100, 12, 16, 48]) == [12, 16, 48, 100]
    assert candidate([104, 16, 12, 42]) == [12, 16, 42, 104]
    assert candidate([94, 20, 17, 44]) == [17, 20, 44, 94]
    assert candidate([97, 16, 16, 43]) == [16, 16, 43, 97]
    assert candidate([100, 15, 9, 48]) == [9, 15, 48, 100]
    assert candidate([100, 14, 11, 51]) == [11, 14, 51, 100]
    assert candidate([98, 14, 9, 52]) == [9, 14, 52, 98]
    assert candidate([104, 10, 15, 51]) == [10, 15, 51, 104]
    assert candidate([99, 12, 13, 49]) == [12, 13, 49, 99]
    assert candidate([94, 14, 11, 49]) == [11, 14, 49, 94]
    assert candidate([102, 11, 15, 44]) == [11, 15, 44, 102]
    assert candidate([97, 11, 10, 42]) == [10, 11, 42, 97]
    assert candidate([102, 13, 17, 45]) == [13, 17, 45, 102]
    assert candidate([94, 12, 16, 46]) == [12, 16, 46, 94]
    assert candidate([97, 15, 12, 49]) == [12, 15, 49, 97]

if __name__ == '__main__':
    check(comb_sort)