from case_MBPP_325 import nth_nums


def check(candidate):
    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],2)==[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
    assert candidate([10,20,30],3)==([1000, 8000, 27000])
    assert candidate([12,15],5)==([248832, 759375])
    assert candidate([2, 6, 5, 3, 2, 2, 8, 3, 10, 9], 2) == [4, 36, 25, 9, 4, 4, 64, 9, 100, 81]
    assert candidate([1, 3, 6, 8, 9, 11, 6, 10, 8, 9], 1) == [1, 3, 6, 8, 9, 11, 6, 10, 8, 9]
    assert candidate([4, 7, 5, 3, 6, 7, 7, 10, 11, 15], 7) == [16384, 823543, 78125, 2187, 279936, 823543, 823543, 10000000, 19487171, 170859375]
    assert candidate([3, 1, 6, 5, 2, 5, 3, 11, 5, 9], 3) == [27, 1, 216, 125, 8, 125, 27, 1331, 125, 729]
    assert candidate([3, 7, 1, 1, 1, 7, 6, 12, 5, 13], 6) == [729, 117649, 1, 1, 1, 117649, 46656, 2985984, 15625, 4826809]
    assert candidate([5, 6, 6, 6, 9, 3, 8, 13, 6, 12], 2) == [25, 36, 36, 36, 81, 9, 64, 169, 36, 144]
    assert candidate([3, 1, 5, 6, 7, 11, 2, 8, 4, 14], 4) == [81, 1, 625, 1296, 2401, 14641, 16, 4096, 256, 38416]
    assert candidate([2, 6, 6, 9, 6, 7, 6, 3, 9, 12], 3) == [8, 216, 216, 729, 216, 343, 216, 27, 729, 1728]
    assert candidate([6, 4, 1, 5, 4, 3, 3, 8, 5, 7], 1) == [6, 4, 1, 5, 4, 3, 3, 8, 5, 7]
    assert candidate([1, 7, 1, 6, 4, 2, 5, 12, 9, 5], 6) == [1, 117649, 1, 46656, 4096, 64, 15625, 2985984, 531441, 15625]
    assert candidate([6, 3, 2, 7, 5, 1, 5, 8, 12, 8], 7) == [279936, 2187, 128, 823543, 78125, 1, 78125, 2097152, 35831808, 2097152]
    assert candidate([2, 5, 6, 9, 3, 11, 11, 12, 10, 10], 7) == [128, 78125, 279936, 4782969, 2187, 19487171, 19487171, 35831808, 10000000, 10000000]
    assert candidate([4, 6, 4, 2, 4, 2, 5, 5, 9, 12], 5) == [1024, 7776, 1024, 32, 1024, 32, 3125, 3125, 59049, 248832]
    assert candidate([6, 5, 6, 5, 2, 1, 12, 13, 6, 13], 4) == [1296, 625, 1296, 625, 16, 1, 20736, 28561, 1296, 28561]
    assert candidate([1, 1, 3, 2, 10, 4, 10, 13, 4, 8], 6) == [1, 1, 729, 64, 1000000, 4096, 1000000, 4826809, 4096, 262144]
    assert candidate([5, 6, 2, 7, 1, 8, 11, 10, 5, 15], 2) == [25, 36, 4, 49, 1, 64, 121, 100, 25, 225]
    assert candidate([4, 7, 7, 3, 6, 7, 8, 8, 14, 13], 5) == [1024, 16807, 16807, 243, 7776, 16807, 32768, 32768, 537824, 371293]
    assert candidate([4, 3, 2, 5, 6, 2, 2, 12, 7, 10], 4) == [256, 81, 16, 625, 1296, 16, 16, 20736, 2401, 10000]
    assert candidate([1, 6, 2, 2, 2, 5, 3, 4, 8, 15], 5) == [1, 7776, 32, 32, 32, 3125, 243, 1024, 32768, 759375]
    assert candidate([4, 4, 4, 2, 7, 2, 10, 5, 7, 6], 5) == [1024, 1024, 1024, 32, 16807, 32, 100000, 3125, 16807, 7776]
    assert candidate([2, 6, 1, 4, 10, 3, 5, 3, 12, 13], 5) == [32, 7776, 1, 1024, 100000, 243, 3125, 243, 248832, 371293]
    assert candidate([5, 2, 2, 5, 1, 1, 9, 11, 8, 8], 4) == [625, 16, 16, 625, 1, 1, 6561, 14641, 4096, 4096]
    assert candidate([4, 7, 4, 2, 1, 7, 6, 6, 10, 9], 5) == [1024, 16807, 1024, 32, 1, 16807, 7776, 7776, 100000, 59049]
    assert candidate([1, 1, 3, 6, 9, 2, 8, 13, 8, 6], 4) == [1, 1, 81, 1296, 6561, 16, 4096, 28561, 4096, 1296]
    assert candidate([2, 7, 2, 5, 7, 1, 2, 5, 5, 9], 1) == [2, 7, 2, 5, 7, 1, 2, 5, 5, 9]
    assert candidate([5, 3, 1, 3, 3, 7, 6, 11, 14, 6], 1) == [5, 3, 1, 3, 3, 7, 6, 11, 14, 6]
    assert candidate([5, 7, 4, 9, 4, 6, 10, 13, 14, 7], 3) == [125, 343, 64, 729, 64, 216, 1000, 2197, 2744, 343]
    assert candidate([2, 3, 8, 1, 4, 3, 5, 11, 6, 7], 1) == [2, 3, 8, 1, 4, 3, 5, 11, 6, 7]
    assert candidate([4, 2, 4, 8, 1, 7, 7, 8, 13, 14], 7) == [16384, 128, 16384, 2097152, 1, 823543, 823543, 2097152, 62748517, 105413504]
    assert candidate([2, 4, 3, 9, 5, 5, 4, 7, 8, 6], 6) == [64, 4096, 729, 531441, 15625, 15625, 4096, 117649, 262144, 46656]
    assert candidate([2, 7, 3, 8, 3, 1, 7, 11, 11, 7], 5) == [32, 16807, 243, 32768, 243, 1, 16807, 161051, 161051, 16807]
    assert candidate([6, 3, 7, 5, 8, 11, 12, 4, 14, 6], 2) == [36, 9, 49, 25, 64, 121, 144, 16, 196, 36]
    assert candidate([2, 7, 4, 5, 8, 2, 3, 7, 8, 10], 4) == [16, 2401, 256, 625, 4096, 16, 81, 2401, 4096, 10000]
    assert candidate([10, 18, 26], 8) == [100000000, 11019960576, 208827064576]
    assert candidate([14, 23, 35], 4) == [38416, 279841, 1500625]
    assert candidate([5, 18, 33], 2) == [25, 324, 1089]
    assert candidate([5, 25, 31], 5) == [3125, 9765625, 28629151]
    assert candidate([12, 15, 28], 7) == [35831808, 170859375, 13492928512]
    assert candidate([13, 16, 29], 4) == [28561, 65536, 707281]
    assert candidate([9, 24, 32], 5) == [59049, 7962624, 33554432]
    assert candidate([7, 23, 29], 3) == [343, 12167, 24389]
    assert candidate([12, 23, 28], 3) == [1728, 12167, 21952]
    assert candidate([15, 15, 35], 1) == [15, 15, 35]
    assert candidate([12, 25, 26], 6) == [2985984, 244140625, 308915776]
    assert candidate([12, 17, 32], 5) == [248832, 1419857, 33554432]
    assert candidate([6, 19, 28], 2) == [36, 361, 784]
    assert candidate([8, 16, 32], 7) == [2097152, 268435456, 34359738368]
    assert candidate([8, 19, 30], 4) == [4096, 130321, 810000]
    assert candidate([15, 22, 33], 7) == [170859375, 2494357888, 42618442977]
    assert candidate([13, 23, 31], 4) == [28561, 279841, 923521]
    assert candidate([15, 15, 33], 5) == [759375, 759375, 39135393]
    assert candidate([15, 24, 35], 4) == [50625, 331776, 1500625]
    assert candidate([10, 16, 34], 8) == [100000000, 4294967296, 1785793904896]
    assert candidate([6, 24, 26], 5) == [7776, 7962624, 11881376]
    assert candidate([5, 16, 33], 4) == [625, 65536, 1185921]
    assert candidate([15, 16, 28], 5) == [759375, 1048576, 17210368]
    assert candidate([6, 16, 30], 6) == [46656, 16777216, 729000000]
    assert candidate([15, 19, 27], 3) == [3375, 6859, 19683]
    assert candidate([9, 16, 25], 4) == [6561, 65536, 390625]
    assert candidate([6, 23, 26], 3) == [216, 12167, 17576]
    assert candidate([9, 18, 26], 2) == [81, 324, 676]
    assert candidate([13, 25, 27], 5) == [371293, 9765625, 14348907]
    assert candidate([9, 21, 31], 1) == [9, 21, 31]
    assert candidate([14, 18, 34], 5) == [537824, 1889568, 45435424]
    assert candidate([7, 23, 28], 8) == [5764801, 78310985281, 377801998336]
    assert candidate([7, 20, 29], 5) == [16807, 3200000, 20511149]
    assert candidate([11, 15], 2) == [121, 225]
    assert candidate([14, 12], 10) == [289254654976, 61917364224]
    assert candidate([10, 10], 2) == [100, 100]
    assert candidate([13, 20], 3) == [2197, 8000]
    assert candidate([10, 18], 7) == [10000000, 612220032]
    assert candidate([10, 15], 9) == [1000000000, 38443359375]
    assert candidate([10, 16], 4) == [10000, 65536]
    assert candidate([14, 11], 10) == [289254654976, 25937424601]
    assert candidate([7, 10], 3) == [343, 1000]
    assert candidate([17, 18], 5) == [1419857, 1889568]
    assert candidate([7, 17], 10) == [282475249, 2015993900449]
    assert candidate([17, 18], 5) == [1419857, 1889568]
    assert candidate([7, 14], 10) == [282475249, 289254654976]
    assert candidate([7, 19], 1) == [7, 19]
    assert candidate([15, 19], 9) == [38443359375, 322687697779]
    assert candidate([12, 13], 10) == [61917364224, 137858491849]
    assert candidate([15, 17], 9) == [38443359375, 118587876497]
    assert candidate([14, 15], 4) == [38416, 50625]
    assert candidate([13, 13], 10) == [137858491849, 137858491849]
    assert candidate([13, 18], 4) == [28561, 104976]
    assert candidate([15, 10], 3) == [3375, 1000]
    assert candidate([16, 13], 2) == [256, 169]
    assert candidate([14, 10], 5) == [537824, 100000]
    assert candidate([16, 16], 5) == [1048576, 1048576]
    assert candidate([10, 11], 5) == [100000, 161051]
    assert candidate([16, 11], 8) == [4294967296, 214358881]
    assert candidate([7, 19], 9) == [40353607, 322687697779]
    assert candidate([17, 15], 6) == [24137569, 11390625]
    assert candidate([8, 17], 2) == [64, 289]
    assert candidate([8, 13], 10) == [1073741824, 137858491849]
    assert candidate([7, 19], 5) == [16807, 2476099]
    assert candidate([7, 11], 1) == [7, 11]
    assert candidate([13, 17], 8) == [815730721, 6975757441]

if __name__ == '__main__':
    check(nth_nums)