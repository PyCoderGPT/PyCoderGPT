from case_MBPP_087 import pancake_sort


def check(candidate):
    assert candidate([15, 79, 25, 38, 69]) == [15, 25, 38, 69, 79]
    assert candidate([98, 12, 54, 36, 85]) == [12, 36, 54, 85, 98]
    assert candidate([41, 42, 32, 12, 23]) == [12, 23, 32, 41, 42]
    assert candidate([14, 76, 23, 38, 72]) == [14, 23, 38, 72, 76]
    assert candidate([18, 80, 28, 39, 71]) == [18, 28, 39, 71, 80]
    assert candidate([10, 78, 29, 33, 65]) == [10, 29, 33, 65, 78]
    assert candidate([19, 74, 30, 37, 73]) == [19, 30, 37, 73, 74]
    assert candidate([10, 82, 27, 43, 69]) == [10, 27, 43, 69, 82]
    assert candidate([11, 84, 23, 33, 72]) == [11, 23, 33, 72, 84]
    assert candidate([10, 75, 20, 38, 65]) == [10, 20, 38, 65, 75]
    assert candidate([10, 75, 29, 42, 69]) == [10, 29, 42, 69, 75]
    assert candidate([20, 83, 23, 35, 69]) == [20, 23, 35, 69, 83]
    assert candidate([11, 82, 28, 33, 71]) == [11, 28, 33, 71, 82]
    assert candidate([18, 80, 25, 38, 70]) == [18, 25, 38, 70, 80]
    assert candidate([18, 77, 25, 34, 64]) == [18, 25, 34, 64, 77]
    assert candidate([15, 75, 26, 33, 73]) == [15, 26, 33, 73, 75]
    assert candidate([14, 79, 27, 42, 74]) == [14, 27, 42, 74, 79]
    assert candidate([18, 75, 20, 40, 73]) == [18, 20, 40, 73, 75]
    assert candidate([17, 83, 27, 43, 73]) == [17, 27, 43, 73, 83]
    assert candidate([19, 75, 29, 41, 66]) == [19, 29, 41, 66, 75]
    assert candidate([19, 81, 25, 34, 74]) == [19, 25, 34, 74, 81]
    assert candidate([14, 80, 21, 35, 73]) == [14, 21, 35, 73, 80]
    assert candidate([17, 79, 25, 36, 70]) == [17, 25, 36, 70, 79]
    assert candidate([10, 84, 23, 42, 68]) == [10, 23, 42, 68, 84]
    assert candidate([13, 81, 23, 33, 69]) == [13, 23, 33, 69, 81]
    assert candidate([20, 76, 30, 40, 73]) == [20, 30, 40, 73, 76]
    assert candidate([12, 80, 20, 43, 67]) == [12, 20, 43, 67, 80]
    assert candidate([18, 82, 21, 43, 66]) == [18, 21, 43, 66, 82]
    assert candidate([16, 83, 24, 33, 68]) == [16, 24, 33, 68, 83]
    assert candidate([17, 82, 27, 41, 74]) == [17, 27, 41, 74, 82]
    assert candidate([14, 78, 20, 33, 68]) == [14, 20, 33, 68, 78]
    assert candidate([12, 79, 28, 41, 74]) == [12, 28, 41, 74, 79]
    assert candidate([14, 80, 29, 39, 72]) == [14, 29, 39, 72, 80]
    assert candidate([11, 74, 25, 42, 72]) == [11, 25, 42, 72, 74]
    assert candidate([14, 77, 21, 38, 65]) == [14, 21, 38, 65, 77]
    assert candidate([13, 83, 22, 41, 67]) == [13, 22, 41, 67, 83]
    assert candidate([103, 12, 52, 36, 82]) == [12, 36, 52, 82, 103]
    assert candidate([93, 10, 55, 40, 85]) == [10, 40, 55, 85, 93]
    assert candidate([95, 7, 59, 33, 85]) == [7, 33, 59, 85, 95]
    assert candidate([98, 13, 57, 31, 80]) == [13, 31, 57, 80, 98]
    assert candidate([93, 9, 56, 35, 84]) == [9, 35, 56, 84, 93]
    assert candidate([102, 8, 52, 32, 88]) == [8, 32, 52, 88, 102]
    assert candidate([97, 15, 51, 41, 87]) == [15, 41, 51, 87, 97]
    assert candidate([103, 8, 50, 36, 80]) == [8, 36, 50, 80, 103]
    assert candidate([102, 17, 54, 40, 84]) == [17, 40, 54, 84, 102]
    assert candidate([102, 10, 50, 38, 84]) == [10, 38, 50, 84, 102]
    assert candidate([101, 13, 51, 39, 86]) == [13, 39, 51, 86, 101]
    assert candidate([101, 7, 52, 40, 85]) == [7, 40, 52, 85, 101]
    assert candidate([93, 15, 58, 32, 85]) == [15, 32, 58, 85, 93]
    assert candidate([102, 15, 52, 41, 81]) == [15, 41, 52, 81, 102]
    assert candidate([103, 14, 58, 32, 90]) == [14, 32, 58, 90, 103]
    assert candidate([94, 14, 49, 34, 89]) == [14, 34, 49, 89, 94]
    assert candidate([94, 15, 59, 38, 87]) == [15, 38, 59, 87, 94]
    assert candidate([103, 10, 53, 38, 85]) == [10, 38, 53, 85, 103]
    assert candidate([93, 7, 58, 31, 85]) == [7, 31, 58, 85, 93]
    assert candidate([95, 10, 50, 37, 83]) == [10, 37, 50, 83, 95]
    assert candidate([102, 7, 54, 34, 90]) == [7, 34, 54, 90, 102]
    assert candidate([101, 8, 55, 36, 89]) == [8, 36, 55, 89, 101]
    assert candidate([101, 14, 54, 34, 88]) == [14, 34, 54, 88, 101]
    assert candidate([100, 10, 58, 39, 88]) == [10, 39, 58, 88, 100]
    assert candidate([93, 17, 56, 36, 88]) == [17, 36, 56, 88, 93]
    assert candidate([100, 16, 50, 38, 86]) == [16, 38, 50, 86, 100]
    assert candidate([100, 14, 54, 32, 89]) == [14, 32, 54, 89, 100]
    assert candidate([93, 12, 54, 34, 85]) == [12, 34, 54, 85, 93]
    assert candidate([95, 17, 49, 34, 89]) == [17, 34, 49, 89, 95]
    assert candidate([98, 11, 59, 38, 89]) == [11, 38, 59, 89, 98]
    assert candidate([102, 11, 59, 39, 81]) == [11, 39, 59, 81, 102]
    assert candidate([100, 8, 55, 32, 90]) == [8, 32, 55, 90, 100]
    assert candidate([93, 11, 55, 37, 84]) == [11, 37, 55, 84, 93]
    assert candidate([44, 47, 28, 14, 20]) == [14, 20, 28, 44, 47]
    assert candidate([39, 38, 27, 16, 27]) == [16, 27, 27, 38, 39]
    assert candidate([42, 40, 29, 16, 25]) == [16, 25, 29, 40, 42]
    assert candidate([39, 38, 34, 12, 28]) == [12, 28, 34, 38, 39]
    assert candidate([41, 38, 29, 8, 18]) == [8, 18, 29, 38, 41]
    assert candidate([37, 44, 37, 12, 28]) == [12, 28, 37, 37, 44]
    assert candidate([46, 38, 29, 7, 23]) == [7, 23, 29, 38, 46]
    assert candidate([40, 47, 33, 10, 23]) == [10, 23, 33, 40, 47]
    assert candidate([46, 44, 29, 12, 18]) == [12, 18, 29, 44, 46]
    assert candidate([38, 40, 30, 17, 18]) == [17, 18, 30, 38, 40]
    assert candidate([43, 47, 29, 12, 21]) == [12, 21, 29, 43, 47]
    assert candidate([46, 46, 37, 11, 26]) == [11, 26, 37, 46, 46]
    assert candidate([38, 42, 28, 15, 19]) == [15, 19, 28, 38, 42]
    assert candidate([38, 43, 32, 13, 25]) == [13, 25, 32, 38, 43]
    assert candidate([40, 44, 34, 15, 20]) == [15, 20, 34, 40, 44]
    assert candidate([46, 39, 36, 9, 21]) == [9, 21, 36, 39, 46]
    assert candidate([39, 47, 30, 15, 26]) == [15, 26, 30, 39, 47]
    assert candidate([37, 47, 33, 9, 25]) == [9, 25, 33, 37, 47]
    assert candidate([46, 47, 35, 16, 20]) == [16, 20, 35, 46, 47]
    assert candidate([45, 44, 28, 12, 22]) == [12, 22, 28, 44, 45]
    assert candidate([40, 47, 27, 9, 28]) == [9, 27, 28, 40, 47]
    assert candidate([39, 38, 29, 15, 23]) == [15, 23, 29, 38, 39]
    assert candidate([46, 46, 30, 15, 25]) == [15, 25, 30, 46, 46]
    assert candidate([38, 45, 36, 15, 22]) == [15, 22, 36, 38, 45]
    assert candidate([36, 46, 30, 9, 23]) == [9, 23, 30, 36, 46]
    assert candidate([44, 39, 35, 9, 27]) == [9, 27, 35, 39, 44]
    assert candidate([43, 38, 30, 17, 22]) == [17, 22, 30, 38, 43]
    assert candidate([43, 47, 34, 12, 19]) == [12, 19, 34, 43, 47]
    assert candidate([46, 47, 30, 7, 28]) == [7, 28, 30, 46, 47]
    assert candidate([37, 38, 32, 11, 22]) == [11, 22, 32, 37, 38]
    assert candidate([39, 47, 37, 16, 24]) == [16, 24, 37, 39, 47]
    assert candidate([45, 41, 27, 8, 22]) == [8, 22, 27, 41, 45]
    assert candidate([37, 38, 30, 17, 18]) == [17, 18, 30, 37, 38]

if __name__ == '__main__':
    check(pancake_sort)