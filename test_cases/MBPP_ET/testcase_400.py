from case_MBPP_400 import count_Divisors


def check(candidate):
    assert candidate(10) == "Even"
    assert candidate(100) == "Odd"
    assert candidate(125) == "Even"
    assert candidate(8) == "Even"
    assert candidate(7) == "Even"
    assert candidate(13) == "Even"
    assert candidate(6) == "Even"
    assert candidate(6) == "Even"
    assert candidate(9) == "Odd"
    assert candidate(10) == "Even"
    assert candidate(6) == "Even"
    assert candidate(8) == "Even"
    assert candidate(9) == "Odd"
    assert candidate(12) == "Even"
    assert candidate(13) == "Even"
    assert candidate(6) == "Even"
    assert candidate(12) == "Even"
    assert candidate(11) == "Even"
    assert candidate(7) == "Even"
    assert candidate(6) == "Even"
    assert candidate(14) == "Even"
    assert candidate(11) == "Even"
    assert candidate(10) == "Even"
    assert candidate(8) == "Even"
    assert candidate(12) == "Even"
    assert candidate(5) == "Even"
    assert candidate(13) == "Even"
    assert candidate(13) == "Even"
    assert candidate(9) == "Odd"
    assert candidate(12) == "Even"
    assert candidate(8) == "Even"
    assert candidate(7) == "Even"
    assert candidate(12) == "Even"
    assert candidate(15) == "Even"
    assert candidate(14) == "Even"
    assert candidate(5) == "Even"
    assert candidate(98) == "Even"
    assert candidate(103) == "Even"
    assert candidate(102) == "Even"
    assert candidate(102) == "Even"
    assert candidate(96) == "Even"
    assert candidate(98) == "Even"
    assert candidate(99) == "Even"
    assert candidate(95) == "Even"
    assert candidate(105) == "Even"
    assert candidate(100) == "Odd"
    assert candidate(97) == "Even"
    assert candidate(96) == "Even"
    assert candidate(102) == "Even"
    assert candidate(102) == "Even"
    assert candidate(100) == "Odd"
    assert candidate(105) == "Even"
    assert candidate(95) == "Even"
    assert candidate(96) == "Even"
    assert candidate(98) == "Even"
    assert candidate(105) == "Even"
    assert candidate(104) == "Even"
    assert candidate(96) == "Even"
    assert candidate(97) == "Even"
    assert candidate(99) == "Even"
    assert candidate(104) == "Even"
    assert candidate(104) == "Even"
    assert candidate(102) == "Even"
    assert candidate(97) == "Even"
    assert candidate(99) == "Even"
    assert candidate(104) == "Even"
    assert candidate(102) == "Even"
    assert candidate(100) == "Odd"
    assert candidate(101) == "Even"
    assert candidate(120) == "Even"
    assert candidate(124) == "Even"
    assert candidate(124) == "Even"
    assert candidate(121) == "Odd"
    assert candidate(130) == "Even"
    assert candidate(127) == "Even"
    assert candidate(120) == "Even"
    assert candidate(126) == "Even"
    assert candidate(127) == "Even"
    assert candidate(128) == "Even"
    assert candidate(123) == "Even"
    assert candidate(122) == "Even"
    assert candidate(124) == "Even"
    assert candidate(120) == "Even"
    assert candidate(121) == "Odd"
    assert candidate(128) == "Even"
    assert candidate(127) == "Even"
    assert candidate(123) == "Even"
    assert candidate(120) == "Even"
    assert candidate(122) == "Even"
    assert candidate(130) == "Even"
    assert candidate(126) == "Even"
    assert candidate(130) == "Even"
    assert candidate(127) == "Even"
    assert candidate(122) == "Even"
    assert candidate(124) == "Even"
    assert candidate(121) == "Odd"
    assert candidate(129) == "Even"
    assert candidate(124) == "Even"
    assert candidate(123) == "Even"
    assert candidate(125) == "Even"
    assert candidate(130) == "Even"
    assert candidate(122) == "Even"

if __name__ == '__main__':
    check(count_Divisors)