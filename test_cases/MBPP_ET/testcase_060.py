from case_MBPP_060 import add_lists


def check(candidate):
    assert candidate([5, 6, 7], (9, 10)) == (9, 10, 5, 6, 7)
    assert candidate([6, 7, 8], (10, 11)) == (10, 11, 6, 7, 8)
    assert candidate([7, 8, 9], (11, 12)) == (11, 12, 7, 8, 9)
    assert candidate([6, 4, 9], (13, 5)) == (13, 5, 6, 4, 9)
    assert candidate([2, 9, 7], (8, 14)) == (8, 14, 2, 9, 7)
    assert candidate([4, 3, 10], (11, 9)) == (11, 9, 4, 3, 10)
    assert candidate([3, 6, 7], (9, 12)) == (9, 12, 3, 6, 7)
    assert candidate([8, 4, 5], (13, 12)) == (13, 12, 8, 4, 5)
    assert candidate([7, 6, 3], (13, 9)) == (13, 9, 7, 6, 3)
    assert candidate([6, 11, 5], (13, 15)) == (13, 15, 6, 11, 5)
    assert candidate([3, 5, 2], (11, 15)) == (11, 15, 3, 5, 2)
    assert candidate([6, 3, 3], (10, 9)) == (10, 9, 6, 3, 3)
    assert candidate([9, 3, 3], (13, 9)) == (13, 9, 9, 3, 3)
    assert candidate([9, 4, 11], (11, 13)) == (11, 13, 9, 4, 11)
    assert candidate([8, 2, 2], (12, 13)) == (12, 13, 8, 2, 2)
    assert candidate([5, 8, 6], (6, 14)) == (6, 14, 5, 8, 6)
    assert candidate([4, 3, 12], (10, 7)) == (10, 7, 4, 3, 12)
    assert candidate([6, 9, 9], (13, 15)) == (13, 15, 6, 9, 9)
    assert candidate([9, 11, 11], (4, 12)) == (4, 12, 9, 11, 11)
    assert candidate([5, 5, 8], (7, 15)) == (7, 15, 5, 5, 8)
    assert candidate([7, 5, 9], (7, 9)) == (7, 9, 7, 5, 9)
    assert candidate([7, 8, 3], (10, 15)) == (10, 15, 7, 8, 3)
    assert candidate([4, 6, 11], (5, 5)) == (5, 5, 4, 6, 11)
    assert candidate([10, 10, 3], (4, 5)) == (4, 5, 10, 10, 3)
    assert candidate([6, 11, 11], (13, 9)) == (13, 9, 6, 11, 11)
    assert candidate([3, 3, 2], (4, 13)) == (4, 13, 3, 3, 2)
    assert candidate([9, 5, 9], (11, 6)) == (11, 6, 9, 5, 9)
    assert candidate([2, 3, 11], (5, 14)) == (5, 14, 2, 3, 11)
    assert candidate([1, 7, 12], (5, 6)) == (5, 6, 1, 7, 12)
    assert candidate([7, 3, 11], (10, 8)) == (10, 8, 7, 3, 11)
    assert candidate([10, 9, 2], (6, 12)) == (6, 12, 10, 9, 2)
    assert candidate([10, 5, 12], (6, 12)) == (6, 12, 10, 5, 12)
    assert candidate([2, 2, 7], (7, 7)) == (7, 7, 2, 2, 7)
    assert candidate([10, 3, 4], (5, 8)) == (5, 8, 10, 3, 4)
    assert candidate([8, 11, 8], (4, 9)) == (4, 9, 8, 11, 8)
    assert candidate([10, 3, 6], (9, 10)) == (9, 10, 10, 3, 6)
    assert candidate([3, 7, 6], (13, 15)) == (13, 15, 3, 7, 6)
    assert candidate([8, 12, 9], (14, 11)) == (14, 11, 8, 12, 9)
    assert candidate([10, 12, 7], (15, 9)) == (15, 9, 10, 12, 7)
    assert candidate([10, 7, 4], (6, 12)) == (6, 12, 10, 7, 4)
    assert candidate([4, 7, 9], (9, 8)) == (9, 8, 4, 7, 9)
    assert candidate([11, 12, 9], (9, 6)) == (9, 6, 11, 12, 9)
    assert candidate([11, 2, 8], (11, 16)) == (11, 16, 11, 2, 8)
    assert candidate([9, 9, 5], (13, 12)) == (13, 12, 9, 9, 5)
    assert candidate([5, 3, 9], (12, 7)) == (12, 7, 5, 3, 9)
    assert candidate([5, 6, 10], (6, 13)) == (6, 13, 5, 6, 10)
    assert candidate([8, 3, 11], (8, 12)) == (8, 12, 8, 3, 11)
    assert candidate([9, 7, 5], (6, 8)) == (6, 8, 9, 7, 5)
    assert candidate([5, 11, 5], (6, 16)) == (6, 16, 5, 11, 5)
    assert candidate([7, 6, 6], (8, 8)) == (8, 8, 7, 6, 6)
    assert candidate([9, 6, 3], (8, 10)) == (8, 10, 9, 6, 3)
    assert candidate([6, 5, 10], (6, 15)) == (6, 15, 6, 5, 10)
    assert candidate([2, 9, 3], (15, 13)) == (15, 13, 2, 9, 3)
    assert candidate([1, 9, 5], (13, 10)) == (13, 10, 1, 9, 5)
    assert candidate([11, 4, 13], (6, 12)) == (6, 12, 11, 4, 13)
    assert candidate([1, 7, 5], (7, 11)) == (7, 11, 1, 7, 5)
    assert candidate([10, 7, 3], (6, 15)) == (6, 15, 10, 7, 3)
    assert candidate([1, 6, 9], (12, 9)) == (12, 9, 1, 6, 9)
    assert candidate([3, 3, 11], (6, 15)) == (6, 15, 3, 3, 11)
    assert candidate([3, 10, 12], (13, 16)) == (13, 16, 3, 10, 12)
    assert candidate([10, 8, 5], (13, 7)) == (13, 7, 10, 8, 5)
    assert candidate([3, 5, 7], (10, 8)) == (10, 8, 3, 5, 7)
    assert candidate([1, 10, 6], (7, 11)) == (7, 11, 1, 10, 6)
    assert candidate([5, 2, 9], (6, 15)) == (6, 15, 5, 2, 9)
    assert candidate([10, 7, 13], (13, 9)) == (13, 9, 10, 7, 13)
    assert candidate([10, 5, 6], (5, 9)) == (5, 9, 10, 5, 6)
    assert candidate([3, 2, 7], (11, 10)) == (11, 10, 3, 2, 7)
    assert candidate([10, 4, 13], (9, 6)) == (9, 6, 10, 4, 13)
    assert candidate([4, 11, 11], (10, 11)) == (10, 11, 4, 11, 11)
    assert candidate([10, 10, 14], (14, 17)) == (14, 17, 10, 10, 14)
    assert candidate([11, 11, 6], (8, 11)) == (8, 11, 11, 11, 6)
    assert candidate([11, 9, 9], (16, 7)) == (16, 7, 11, 9, 9)
    assert candidate([2, 11, 13], (12, 15)) == (12, 15, 2, 11, 13)
    assert candidate([4, 6, 10], (14, 9)) == (14, 9, 4, 6, 10)
    assert candidate([4, 8, 7], (15, 13)) == (15, 13, 4, 8, 7)
    assert candidate([10, 4, 5], (13, 8)) == (13, 8, 10, 4, 5)
    assert candidate([7, 5, 7], (8, 9)) == (8, 9, 7, 5, 7)
    assert candidate([2, 6, 14], (10, 13)) == (10, 13, 2, 6, 14)
    assert candidate([8, 3, 11], (6, 11)) == (6, 11, 8, 3, 11)
    assert candidate([9, 5, 6], (9, 15)) == (9, 15, 9, 5, 6)
    assert candidate([6, 3, 6], (7, 14)) == (7, 14, 6, 3, 6)
    assert candidate([8, 3, 10], (14, 9)) == (14, 9, 8, 3, 10)
    assert candidate([3, 8, 14], (16, 13)) == (16, 13, 3, 8, 14)
    assert candidate([4, 13, 11], (10, 14)) == (10, 14, 4, 13, 11)
    assert candidate([8, 4, 9], (12, 12)) == (12, 12, 8, 4, 9)
    assert candidate([12, 9, 7], (12, 15)) == (12, 15, 12, 9, 7)
    assert candidate([9, 13, 10], (8, 16)) == (8, 16, 9, 13, 10)
    assert candidate([9, 6, 4], (9, 15)) == (9, 15, 9, 6, 4)
    assert candidate([2, 13, 4], (12, 9)) == (12, 9, 2, 13, 4)
    assert candidate([9, 10, 7], (14, 14)) == (14, 14, 9, 10, 7)
    assert candidate([8, 12, 5], (15, 9)) == (15, 9, 8, 12, 5)
    assert candidate([3, 13, 4], (7, 11)) == (7, 11, 3, 13, 4)
    assert candidate([9, 5, 6], (15, 8)) == (15, 8, 9, 5, 6)
    assert candidate([9, 5, 10], (9, 16)) == (9, 16, 9, 5, 10)
    assert candidate([6, 7, 7], (12, 11)) == (12, 11, 6, 7, 7)
    assert candidate([9, 11, 6], (10, 7)) == (10, 7, 9, 11, 6)
    assert candidate([3, 6, 12], (13, 13)) == (13, 13, 3, 6, 12)
    assert candidate([9, 4, 10], (7, 14)) == (7, 14, 9, 4, 10)
    assert candidate([9, 12, 11], (12, 14)) == (12, 14, 9, 12, 11)
    assert candidate([3, 10, 13], (16, 10)) == (16, 10, 3, 10, 13)
    assert candidate([10, 13, 7], (15, 9)) == (15, 9, 10, 13, 7)
    assert candidate([6, 13, 14], (15, 14)) == (15, 14, 6, 13, 14)

if __name__ == '__main__':
    check(add_lists)