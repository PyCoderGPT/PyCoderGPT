from case_MBPP_319 import tuple_modulo


def check(candidate):
    assert candidate((10, 4, 5, 6), (5, 6, 7, 5)) == (0, 4, 5, 1)
    assert candidate((11, 5, 6, 7), (6, 7, 8, 6)) == (5, 5, 6, 1)
    assert candidate((12, 6, 7, 8), (7, 8, 9, 7)) == (5, 6, 7, 1)
    assert candidate((9, 7, 5, 6), (4, 10, 4, 7)) == (1, 7, 1, 6)
    assert candidate((11, 1, 2, 11), (4, 10, 10, 5)) == (3, 1, 2, 1)
    assert candidate((5, 3, 10, 10), (1, 6, 9, 7)) == (0, 3, 1, 3)
    assert candidate((10, 4, 4, 4), (5, 9, 9, 1)) == (0, 4, 4, 0)
    assert candidate((12, 6, 3, 6), (5, 3, 6, 6)) == (2, 0, 3, 0)
    assert candidate((8, 5, 6, 11), (1, 7, 3, 3)) == (0, 5, 0, 2)
    assert candidate((11, 4, 2, 1), (7, 5, 10, 2)) == (4, 4, 2, 1)
    assert candidate((13, 4, 7, 11), (3, 8, 9, 3)) == (1, 4, 7, 2)
    assert candidate((8, 8, 2, 6), (1, 5, 6, 5)) == (0, 3, 2, 1)
    assert candidate((7, 6, 9, 3), (10, 8, 11, 9)) == (7, 6, 9, 3)
    assert candidate((14, 8, 7, 2), (6, 11, 10, 1)) == (2, 8, 7, 0)
    assert candidate((14, 8, 6, 1), (3, 10, 5, 8)) == (2, 8, 1, 1)
    assert candidate((8, 4, 7, 1), (3, 11, 3, 10)) == (2, 4, 1, 1)
    assert candidate((15, 5, 7, 5), (2, 2, 8, 10)) == (1, 1, 7, 5)
    assert candidate((15, 1, 5, 10), (10, 8, 4, 4)) == (5, 1, 1, 2)
    assert candidate((10, 7, 1, 1), (2, 6, 10, 4)) == (0, 1, 1, 1)
    assert candidate((5, 8, 9, 3), (5, 4, 11, 6)) == (0, 0, 9, 3)
    assert candidate((7, 2, 7, 3), (9, 10, 8, 7)) == (7, 2, 7, 3)
    assert candidate((9, 1, 3, 6), (3, 6, 10, 4)) == (0, 1, 3, 2)
    assert candidate((14, 3, 6, 8), (2, 4, 9, 6)) == (0, 3, 6, 2)
    assert candidate((15, 2, 7, 4), (2, 1, 7, 3)) == (1, 0, 0, 1)
    assert candidate((10, 7, 5, 2), (7, 6, 10, 5)) == (3, 1, 5, 2)
    assert candidate((5, 9, 4, 9), (2, 2, 8, 9)) == (1, 1, 4, 0)
    assert candidate((15, 1, 7, 3), (10, 6, 10, 7)) == (5, 1, 7, 3)
    assert candidate((6, 8, 7, 10), (9, 1, 8, 1)) == (6, 0, 7, 0)
    assert candidate((10, 9, 10, 7), (6, 8, 12, 1)) == (4, 1, 10, 0)
    assert candidate((10, 2, 9, 1), (5, 2, 6, 6)) == (0, 0, 3, 1)
    assert candidate((7, 8, 10, 2), (10, 4, 10, 7)) == (7, 0, 0, 2)
    assert candidate((10, 4, 8, 6), (10, 9, 7, 1)) == (0, 4, 1, 0)
    assert candidate((15, 5, 4, 8), (3, 3, 6, 3)) == (0, 2, 4, 2)
    assert candidate((6, 8, 2, 3), (4, 7, 6, 10)) == (2, 1, 2, 3)
    assert candidate((15, 8, 7, 10), (10, 10, 2, 9)) == (5, 8, 1, 1)
    assert candidate((8, 7, 5, 2), (7, 7, 12, 8)) == (1, 0, 5, 2)
    assert candidate((11, 7, 2, 11), (7, 12, 10, 5)) == (4, 7, 2, 1)
    assert candidate((11, 4, 4, 7), (7, 12, 6, 6)) == (4, 4, 4, 1)
    assert candidate((8, 1, 10, 5), (4, 10, 7, 5)) == (0, 1, 3, 0)
    assert candidate((9, 2, 2, 11), (8, 12, 9, 5)) == (1, 2, 2, 1)
    assert candidate((8, 3, 6, 11), (11, 10, 3, 2)) == (8, 3, 0, 1)
    assert candidate((14, 1, 4, 11), (5, 3, 5, 9)) == (4, 1, 4, 2)
    assert candidate((8, 9, 2, 3), (9, 12, 5, 3)) == (8, 9, 2, 0)
    assert candidate((13, 3, 3, 8), (5, 5, 9, 5)) == (3, 3, 3, 3)
    assert candidate((12, 3, 6, 11), (1, 11, 11, 6)) == (0, 3, 6, 5)
    assert candidate((12, 3, 6, 8), (6, 6, 3, 3)) == (0, 3, 0, 2)
    assert candidate((15, 7, 5, 6), (3, 6, 13, 3)) == (0, 1, 5, 0)
    assert candidate((15, 10, 4, 8), (7, 7, 10, 9)) == (1, 3, 4, 8)
    assert candidate((13, 1, 2, 4), (7, 3, 4, 5)) == (6, 1, 2, 4)
    assert candidate((10, 10, 2, 8), (3, 9, 8, 2)) == (1, 1, 2, 0)
    assert candidate((14, 3, 11, 8), (7, 3, 4, 11)) == (0, 0, 3, 8)
    assert candidate((9, 4, 2, 4), (11, 6, 5, 8)) == (9, 4, 2, 4)
    assert candidate((8, 2, 11, 11), (7, 12, 9, 7)) == (1, 2, 2, 4)
    assert candidate((6, 8, 1, 4), (7, 8, 11, 10)) == (6, 0, 1, 4)
    assert candidate((15, 6, 6, 7), (2, 7, 10, 11)) == (1, 6, 6, 7)
    assert candidate((16, 8, 10, 7), (1, 11, 9, 7)) == (0, 8, 1, 0)
    assert candidate((9, 6, 10, 11), (11, 6, 7, 6)) == (9, 0, 3, 5)
    assert candidate((11, 4, 3, 12), (8, 7, 10, 8)) == (3, 4, 3, 4)
    assert candidate((12, 4, 10, 3), (9, 11, 13, 7)) == (3, 4, 10, 3)
    assert candidate((6, 8, 10, 4), (7, 2, 5, 2)) == (6, 0, 0, 0)
    assert candidate((6, 1, 8, 7), (5, 7, 3, 3)) == (1, 1, 2, 1)
    assert candidate((6, 4, 9, 11), (7, 11, 9, 8)) == (6, 4, 0, 3)
    assert candidate((13, 1, 4, 3), (2, 7, 11, 4)) == (1, 1, 4, 3)
    assert candidate((11, 10, 1, 2), (4, 3, 5, 9)) == (3, 1, 1, 2)
    assert candidate((7, 5, 3, 8), (9, 11, 13, 3)) == (7, 5, 3, 2)
    assert candidate((7, 9, 2, 5), (1, 4, 6, 11)) == (0, 1, 2, 5)
    assert candidate((10, 4, 1, 8), (10, 5, 11, 1)) == (0, 4, 1, 0)
    assert candidate((12, 6, 1, 3), (3, 8, 7, 6)) == (0, 6, 1, 3)
    assert candidate((9, 1, 3, 3), (1, 12, 13, 7)) == (0, 1, 3, 3)
    assert candidate((8, 9, 10, 8), (3, 4, 12, 11)) == (2, 1, 10, 8)
    assert candidate((8, 9, 5, 6), (7, 11, 5, 11)) == (1, 9, 0, 6)
    assert candidate((10, 9, 12, 9), (3, 9, 4, 11)) == (1, 0, 0, 9)
    assert candidate((10, 11, 2, 4), (6, 5, 4, 2)) == (4, 1, 2, 0)
    assert candidate((16, 3, 7, 6), (4, 4, 10, 3)) == (0, 3, 7, 0)
    assert candidate((7, 9, 9, 10), (4, 4, 12, 11)) == (3, 1, 9, 10)
    assert candidate((12, 8, 10, 8), (7, 9, 12, 3)) == (5, 8, 10, 2)
    assert candidate((13, 3, 8, 11), (3, 8, 4, 3)) == (1, 3, 0, 2)
    assert candidate((9, 7, 9, 10), (10, 8, 9, 4)) == (9, 7, 0, 2)
    assert candidate((12, 2, 11, 5), (4, 10, 4, 8)) == (0, 2, 3, 5)
    assert candidate((8, 1, 8, 7), (7, 12, 12, 6)) == (1, 1, 8, 1)
    assert candidate((14, 2, 2, 13), (2, 11, 12, 8)) == (0, 2, 2, 5)
    assert candidate((15, 1, 8, 9), (9, 5, 11, 5)) == (6, 1, 8, 4)
    assert candidate((15, 11, 8, 13), (7, 4, 10, 10)) == (1, 3, 8, 3)
    assert candidate((11, 1, 10, 10), (2, 7, 12, 4)) == (1, 1, 10, 2)
    assert candidate((12, 2, 6, 13), (9, 11, 8, 5)) == (3, 2, 6, 3)
    assert candidate((12, 11, 7, 8), (12, 6, 10, 8)) == (0, 5, 7, 0)
    assert candidate((13, 2, 9, 9), (5, 13, 6, 11)) == (3, 2, 3, 9)
    assert candidate((8, 11, 3, 8), (4, 4, 14, 4)) == (0, 3, 3, 0)
    assert candidate((10, 6, 3, 6), (4, 5, 11, 6)) == (2, 1, 3, 0)
    assert candidate((10, 7, 3, 9), (12, 10, 12, 2)) == (10, 7, 3, 1)
    assert candidate((9, 11, 11, 4), (3, 3, 11, 10)) == (0, 2, 0, 4)
    assert candidate((14, 3, 3, 13), (3, 5, 10, 6)) == (2, 3, 3, 1)
    assert candidate((8, 7, 5, 8), (9, 6, 4, 7)) == (8, 1, 1, 1)
    assert candidate((8, 5, 3, 11), (8, 4, 12, 2)) == (0, 1, 3, 1)
    assert candidate((14, 3, 8, 4), (6, 13, 14, 4)) == (2, 3, 8, 0)
    assert candidate((12, 3, 8, 12), (9, 5, 13, 11)) == (3, 3, 8, 1)
    assert candidate((9, 11, 10, 12), (3, 12, 5, 11)) == (0, 11, 0, 1)
    assert candidate((13, 5, 6, 10), (5, 4, 5, 8)) == (3, 1, 1, 2)
    assert candidate((17, 2, 12, 3), (3, 5, 9, 7)) == (2, 2, 3, 3)
    assert candidate((8, 4, 12, 6), (8, 4, 11, 10)) == (0, 0, 1, 6)
    assert candidate((13, 6, 12, 9), (4, 4, 9, 12)) == (1, 2, 3, 9)
    assert candidate((17, 3, 11, 11), (6, 10, 10, 10)) == (5, 3, 1, 1)

if __name__ == '__main__':
    check(tuple_modulo)