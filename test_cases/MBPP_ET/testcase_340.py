from case_MBPP_340 import remove_parenthesis


def check(candidate):
    assert candidate(["python (chrome)"])==("python")
    assert candidate(["string(.abc)"])==("string")
    assert candidate(["alpha(num)"])==("alpha")
    assert candidate(['zjzydhpltnt cf}dejq']) == "zjzydhpltnt cf}dejq"
    assert candidate(['(a]vl])afnyaog([']) == "afnyaog(["
    assert candidate(['[tv>gz}ng{qoyi>]jmwu']) == "[tv>gz}ng{qoyi>]jmwu"
    assert candidate(['ai]z(ifuhjuql<']) == "ai]z(ifuhjuql<"
    assert candidate(['zs<f {covjg)nvpg}dt']) == "zs<f {covjg)nvpg}dt"
    assert candidate(['mlrhiqywaoutc]f(h']) == "mlrhiqywaoutc]f(h"
    assert candidate(['pchbrpsj]voupbttcg{a']) == "pchbrpsj]voupbttcg{a"
    assert candidate(['()ioo){rusw(inhsl']) == "()ioo){rusw(inhsl"
    assert candidate(['xu<pps[pd]x<ri)p{bba']) == "xu<pps[pd]x<ri)p{bba"
    assert candidate(['<zan)nt}}dy )z<l ']) == "<zan)nt}}dy )z<l"
    assert candidate(['y]>{(ner}vvd']) == "y]>{(ner}vvd"
    assert candidate(['xkmts[ug  cyz']) == "xkmts[ug  cyz"
    assert candidate(['eky>wev < wjlpm']) == "eky>wev < wjlpm"
    assert candidate(['rmpzacziyn)<>j(j']) == "rmpzacziyn)<>j(j"
    assert candidate(['>erf<ogdzuoo']) == ">erf<ogdzuoo"
    assert candidate(['zs }<} yldpf<sho']) == "zs }<} yldpf<sho"
    assert candidate(['emrvy[iv}vfg ([gs']) == "emrvy[iv}vfg ([gs"
    assert candidate(['cs<mifc]]rbtp']) == "cs<mifc]]rbtp"
    assert candidate(['cj>wjkxg>jlndkxsvd[z']) == "cj>wjkxg>jlndkxsvd[z"
    assert candidate(['{([ig]ygtoz]wk<earq']) == "{([ig]ygtoz]wk<earq"
    assert candidate(['h<jl)lg<ax}{{ io']) == "h<jl)lg<ax}{{ io"
    assert candidate([' <t}ubwv]nv)']) == "<t}ubwv]nv)"
    assert candidate(['uckx{nvx>xj(x wkisjr']) == "uckx{nvx>xj(x wkisjr"
    assert candidate(['ei)iuhvcg{m>v']) == "ei)iuhvcg{m>v"
    assert candidate(['d}q[qwebwr fcs)ir']) == "d}q[qwebwr fcs)ir"
    assert candidate([']byivgyj p<(<']) == "]byivgyj p<(<"
    assert candidate(['}mzdrlpacslsin>']) == "}mzdrlpacslsin>"
    assert candidate(['>a]<qxyijikg)t<j']) == ">a]<qxyijikg)t<j"
    assert candidate(['<qu cy]hqal]db{y{[tj']) == "<qu cy]hqal]db{y{[tj"
    assert candidate(['j>esqhkdy<zws)wc']) == "j>esqhkdy<zws)wc"
    assert candidate(['{)ghguen{x[>hf()<n']) == "{)ghguen{x[>hf()<n"
    assert candidate(['mph ir]dg)n}fgamxuji']) == "mph ir]dg)n}fgamxuji"
    assert candidate(['bvwkncw{qvexqmqh']) == "bvwkncw{qvexqmqh"
    assert candidate(['ykcf(jqjyz']) == "ykcf(jqjyz"
    assert candidate(['[grbts]qpeonvn}[']) == "[grbts]qpeonvn}["
    assert candidate(['r)h]su]rn}s<w<']) == "r)h]su]rn}s<w<"
    assert candidate(['p))]{nyqlfso{']) == "p))]{nyqlfso{"
    assert candidate(['if])ma}rx']) == "if])ma}rx"
    assert candidate(['scfwocnmi.]']) == "scfwocnmi.]"
    assert candidate(['<m)>h]n)wnt]aimxi}']) == "<m)>h]n)wnt]aimxi}"
    assert candidate(['(e{couvstn']) == "(e{couvstn"
    assert candidate(['qx(}yrhqlz>zl']) == "qx(}yrhqlz>zl"
    assert candidate(['..z<{eaopzwk']) == "..z<{eaopzwk"
    assert candidate(['e{iwb>>bv.g>hzfl']) == "e{iwb>>bv.g>hzfl"
    assert candidate(['dbbs{.nzltwe{yjhqw']) == "dbbs{.nzltwe{yjhqw"
    assert candidate(['vchc])w>(yr(']) == "vchc])w>(yr("
    assert candidate(['gfw(esmrnjrq']) == "gfw(esmrnjrq"
    assert candidate(['fgi(iejf<hi(w']) == "fgi(iejf<hi(w"
    assert candidate(['h]]ssbmwsur[']) == "h]]ssbmwsur["
    assert candidate(['ongd]wve<gggsm[']) == "ongd]wve<gggsm["
    assert candidate(['.fwayoc.)pw']) == ".fwayoc.)pw"
    assert candidate(['lovugfk}>l']) == "lovugfk}>l"
    assert candidate(['qa(uj]ug<nrmm']) == "qa(uj]ug<nrmm"
    assert candidate(['jrbit>d]nk.s{m<[']) == "jrbit>d]nk.s{m<["
    assert candidate(['mou.)fwttdrwgdume(']) == "mou.)fwttdrwgdume("
    assert candidate(['j)ndjawdz']) == "j)ndjawdz"
    assert candidate(['e>{{zc)inwa)]lbu']) == "e>{{zc)inwa)]lbu"
    assert candidate(['j(f.oqe.)y[hy']) == "jy[hy"
    assert candidate(['(assaqfwnohh']) == "(assaqfwnohh"
    assert candidate(['x>>hz)eur>o']) == "x>>hz)eur>o"
    assert candidate(['btotweyar{']) == "btotweyar{"
    assert candidate(['fpycgz}ha']) == "fpycgz}ha"
    assert candidate(['v<fxh<u<waj]ppytq']) == "v<fxh<u<waj]ppytq"
    assert candidate(['yvia)efztkaa']) == "yvia)efztkaa"
    assert candidate(['qpctvpl<}o']) == "qpctvpl<}o"
    assert candidate(['egm]l[.]}fm(r']) == "egm]l[.]}fm(r"
    assert candidate(['mq]{fp(ivzuff[g']) == "mq]{fp(ivzuff[g"
    assert candidate(['lddpttgdk]<]ai>']) == "lddpttgdk]<]ai>"
    assert candidate(['xvpyhgxbxd)fhhc']) == "xvpyhgxbxd)fhhc"
    assert candidate(['lqymj)i']) == "lqymj)i"
    assert candidate(['lnvk>rr']) == "lnvk>rr"
    assert candidate(['lifrkpvrl<yvh']) == "lifrkpvrl<yvh"
    assert candidate(['ou{s<<pzkqac)']) == "ou{s<<pzkqac)"
    assert candidate(['fvgclxd']) == "fvgclxd"
    assert candidate(['<yoqttgybl<t[a']) == "<yoqttgybl<t[a"
    assert candidate(['f)weqyusl]']) == "f)weqyusl]"
    assert candidate(['qus>dkor']) == "qus>dkor"
    assert candidate(['mnj(hvvvvbcyk']) == "mnj(hvvvvbcyk"
    assert candidate(['[x<t(dp']) == "[x<t(dp"
    assert candidate(['gg){<}vnblfyuzv']) == "gg){<}vnblfyuzv"
    assert candidate(['gwzek[bory}']) == "gwzek[bory}"
    assert candidate(['f>]moi']) == "f>]moi"
    assert candidate(['ep<bvm(mqoyx']) == "ep<bvm(mqoyx"
    assert candidate(['vetfjl]']) == "vetfjl]"
    assert candidate(['][cutejc(u']) == "][cutejc(u"
    assert candidate(['gmkipuuxsyd']) == "gmkipuuxsyd"
    assert candidate(['ouyy{n']) == "ouyy{n"
    assert candidate(['fuqmsqq']) == "fuqmsqq"
    assert candidate(['zdwd>>iu[']) == "zdwd>>iu["
    assert candidate(['ekd]xorf]aa']) == "ekd]xorf]aa"
    assert candidate([')ssvhc(vkwk']) == ")ssvhc(vkwk"
    assert candidate(['e{[]axhet{v>p']) == "e{[]axhet{v>p"
    assert candidate(['}oaq]slugc']) == "}oaq]slugc"
    assert candidate(['(pjcpxdthajubd']) == "(pjcpxdthajubd"
    assert candidate(['hee<dy']) == "hee<dy"
    assert candidate(['bhu(zbet{<)}']) == "bhu}"
    assert candidate(['ubl[gtfxaaacevr']) == "ubl[gtfxaaacevr"
    assert candidate(['ntljqsh(s']) == "ntljqsh(s"
    assert candidate(['cxwxh)}pg']) == "cxwxh)}pg"

if __name__ == '__main__':
    check(remove_parenthesis)