from case_MBPP_146 import substract_elements


def check(candidate):
    assert candidate((10, 4, 5), (2, 5, 18)) == (8, -1, -13)
    assert candidate((11, 2, 3), (24, 45 ,16)) == (-13, -43, -13)
    assert candidate((7, 18, 9), (10, 11, 12)) == (-3, 7, -3)
    assert candidate((12, 5, 8), (1, 1, 13)) == (11, 4, -5)
    assert candidate((10, 3, 5), (2, 10, 21)) == (8, -7, -16)
    assert candidate((9, 2, 1), (2, 8, 19)) == (7, -6, -18)
    assert candidate((15, 4, 4), (1, 9, 23)) == (14, -5, -19)
    assert candidate((7, 5, 10), (3, 1, 20)) == (4, 4, -10)
    assert candidate((13, 1, 8), (1, 1, 23)) == (12, 0, -15)
    assert candidate((8, 4, 2), (7, 1, 21)) == (1, 3, -19)
    assert candidate((12, 3, 2), (5, 3, 22)) == (7, 0, -20)
    assert candidate((15, 8, 4), (5, 2, 20)) == (10, 6, -16)
    assert candidate((6, 3, 6), (4, 5, 16)) == (2, -2, -10)
    assert candidate((8, 9, 9), (7, 5, 16)) == (1, 4, -7)
    assert candidate((13, 6, 10), (3, 6, 23)) == (10, 0, -13)
    assert candidate((11, 7, 10), (1, 4, 23)) == (10, 3, -13)
    assert candidate((10, 8, 8), (4, 4, 16)) == (6, 4, -8)
    assert candidate((8, 3, 2), (1, 2, 14)) == (7, 1, -12)
    assert candidate((10, 4, 1), (1, 1, 23)) == (9, 3, -22)
    assert candidate((9, 7, 1), (2, 7, 19)) == (7, 0, -18)
    assert candidate((10, 6, 3), (4, 2, 19)) == (6, 4, -16)
    assert candidate((10, 4, 5), (6, 4, 18)) == (4, 0, -13)
    assert candidate((6, 8, 1), (3, 1, 16)) == (3, 7, -15)
    assert candidate((8, 1, 1), (3, 10, 16)) == (5, -9, -15)
    assert candidate((11, 7, 1), (2, 3, 13)) == (9, 4, -12)
    assert candidate((5, 8, 5), (2, 7, 22)) == (3, 1, -17)
    assert candidate((14, 4, 2), (6, 4, 18)) == (8, 0, -16)
    assert candidate((10, 2, 9), (6, 5, 15)) == (4, -3, -6)
    assert candidate((5, 5, 3), (1, 6, 16)) == (4, -1, -13)
    assert candidate((5, 3, 2), (6, 4, 13)) == (-1, -1, -11)
    assert candidate((6, 9, 1), (7, 3, 19)) == (-1, 6, -18)
    assert candidate((11, 1, 5), (5, 6, 13)) == (6, -5, -8)
    assert candidate((7, 3, 4), (3, 3, 22)) == (4, 0, -18)
    assert candidate((11, 2, 1), (1, 9, 23)) == (10, -7, -22)
    assert candidate((8, 7, 7), (7, 6, 22)) == (1, 1, -15)
    assert candidate((8, 8, 3), (5, 1, 21)) == (3, 7, -18)
    assert candidate((13, 5, 1), (29, 40, 20)) == (-16, -35, -19)
    assert candidate((11, 4, 5), (21, 44, 21)) == (-10, -40, -16)
    assert candidate((7, 3, 6), (21, 41, 19)) == (-14, -38, -13)
    assert candidate((9, 1, 7), (23, 42, 17)) == (-14, -41, -10)
    assert candidate((15, 5, 7), (20, 50, 17)) == (-5, -45, -10)
    assert candidate((8, 2, 8), (27, 50, 18)) == (-19, -48, -10)
    assert candidate((16, 2, 2), (23, 43, 16)) == (-7, -41, -14)
    assert candidate((13, 5, 1), (21, 41, 19)) == (-8, -36, -18)
    assert candidate((15, 1, 7), (19, 47, 16)) == (-4, -46, -9)
    assert candidate((7, 6, 4), (24, 42, 15)) == (-17, -36, -11)
    assert candidate((14, 3, 8), (20, 48, 14)) == (-6, -45, -6)
    assert candidate((9, 5, 4), (19, 45, 21)) == (-10, -40, -17)
    assert candidate((7, 2, 2), (20, 42, 11)) == (-13, -40, -9)
    assert candidate((13, 5, 3), (24, 45, 20)) == (-11, -40, -17)
    assert candidate((8, 4, 2), (27, 45, 11)) == (-19, -41, -9)
    assert candidate((11, 6, 2), (22, 49, 18)) == (-11, -43, -16)
    assert candidate((9, 6, 3), (26, 42, 14)) == (-17, -36, -11)
    assert candidate((12, 5, 7), (20, 48, 14)) == (-8, -43, -7)
    assert candidate((16, 3, 8), (20, 43, 14)) == (-4, -40, -6)
    assert candidate((10, 7, 5), (19, 45, 15)) == (-9, -38, -10)
    assert candidate((13, 2, 7), (20, 48, 20)) == (-7, -46, -13)
    assert candidate((6, 5, 5), (26, 43, 14)) == (-20, -38, -9)
    assert candidate((9, 4, 4), (28, 40, 15)) == (-19, -36, -11)
    assert candidate((11, 7, 2), (29, 50, 18)) == (-18, -43, -16)
    assert candidate((6, 1, 5), (27, 45, 20)) == (-21, -44, -15)
    assert candidate((15, 2, 3), (25, 46, 17)) == (-10, -44, -14)
    assert candidate((8, 7, 6), (20, 49, 12)) == (-12, -42, -6)
    assert candidate((9, 6, 4), (25, 45, 15)) == (-16, -39, -11)
    assert candidate((13, 1, 3), (25, 40, 20)) == (-12, -39, -17)
    assert candidate((16, 7, 1), (21, 46, 12)) == (-5, -39, -11)
    assert candidate((15, 5, 5), (29, 47, 16)) == (-14, -42, -11)
    assert candidate((14, 5, 8), (21, 45, 21)) == (-7, -40, -13)
    assert candidate((15, 1, 4), (29, 46, 13)) == (-14, -45, -9)
    assert candidate((8, 21, 12), (11, 13, 12)) == (-3, 8, 0)
    assert candidate((2, 16, 5), (11, 11, 16)) == (-9, 5, -11)
    assert candidate((6, 15, 12), (9, 8, 13)) == (-3, 7, -1)
    assert candidate((6, 21, 4), (15, 12, 7)) == (-9, 9, -3)
    assert candidate((6, 20, 12), (12, 15, 11)) == (-6, 5, 1)
    assert candidate((7, 17, 4), (11, 12, 15)) == (-4, 5, -11)
    assert candidate((3, 16, 12), (15, 14, 13)) == (-12, 2, -1)
    assert candidate((5, 13, 4), (7, 7, 12)) == (-2, 6, -8)
    assert candidate((3, 14, 4), (10, 12, 9)) == (-7, 2, -5)
    assert candidate((6, 15, 12), (14, 14, 12)) == (-8, 1, 0)
    assert candidate((11, 20, 6), (15, 6, 11)) == (-4, 14, -5)
    assert candidate((2, 14, 11), (9, 10, 13)) == (-7, 4, -2)
    assert candidate((9, 23, 5), (10, 12, 14)) == (-1, 11, -9)
    assert candidate((6, 19, 10), (15, 6, 8)) == (-9, 13, 2)
    assert candidate((2, 20, 9), (5, 6, 8)) == (-3, 14, 1)
    assert candidate((11, 23, 11), (14, 7, 7)) == (-3, 16, 4)
    assert candidate((9, 13, 12), (11, 11, 14)) == (-2, 2, -2)
    assert candidate((2, 22, 14), (13, 16, 8)) == (-11, 6, 6)
    assert candidate((2, 17, 11), (7, 10, 10)) == (-5, 7, 1)
    assert candidate((9, 16, 4), (6, 12, 9)) == (3, 4, -5)
    assert candidate((8, 22, 12), (6, 15, 17)) == (2, 7, -5)
    assert candidate((7, 17, 13), (9, 9, 8)) == (-2, 8, 5)
    assert candidate((12, 18, 7), (5, 12, 11)) == (7, 6, -4)
    assert candidate((8, 20, 8), (5, 9, 15)) == (3, 11, -7)
    assert candidate((12, 18, 4), (6, 11, 9)) == (6, 7, -5)
    assert candidate((9, 19, 10), (15, 7, 10)) == (-6, 12, 0)
    assert candidate((2, 20, 9), (9, 14, 11)) == (-7, 6, -2)
    assert candidate((11, 15, 5), (11, 12, 16)) == (0, 3, -11)
    assert candidate((5, 13, 12), (10, 8, 10)) == (-5, 5, 2)
    assert candidate((5, 16, 10), (7, 10, 7)) == (-2, 6, 3)
    assert candidate((2, 15, 13), (10, 11, 17)) == (-8, 4, -4)
    assert candidate((11, 18, 9), (13, 8, 7)) == (-2, 10, 2)
    assert candidate((8, 17, 6), (9, 7, 12)) == (-1, 10, -6)

if __name__ == '__main__':
    check(substract_elements)