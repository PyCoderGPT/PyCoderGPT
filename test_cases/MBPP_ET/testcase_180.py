from case_MBPP_180 import highest_Power_of_2


def check(candidate):
    assert candidate(10) == 8
    assert candidate(19) == 16
    assert candidate(32) == 32
    assert candidate(13) == 8
    assert candidate(14) == 8
    assert candidate(13) == 8
    assert candidate(11) == 8
    assert candidate(9) == 8
    assert candidate(14) == 8
    assert candidate(13) == 8
    assert candidate(8) == 8
    assert candidate(12) == 8
    assert candidate(7) == 4
    assert candidate(12) == 8
    assert candidate(13) == 8
    assert candidate(11) == 8
    assert candidate(8) == 8
    assert candidate(13) == 8
    assert candidate(14) == 8
    assert candidate(13) == 8
    assert candidate(12) == 8
    assert candidate(5) == 4
    assert candidate(10) == 8
    assert candidate(6) == 4
    assert candidate(15) == 8
    assert candidate(9) == 8
    assert candidate(15) == 8
    assert candidate(8) == 8
    assert candidate(9) == 8
    assert candidate(12) == 8
    assert candidate(7) == 4
    assert candidate(8) == 8
    assert candidate(15) == 8
    assert candidate(5) == 4
    assert candidate(11) == 8
    assert candidate(13) == 8
    assert candidate(24) == 16
    assert candidate(16) == 16
    assert candidate(17) == 16
    assert candidate(22) == 16
    assert candidate(18) == 16
    assert candidate(18) == 16
    assert candidate(21) == 16
    assert candidate(23) == 16
    assert candidate(24) == 16
    assert candidate(21) == 16
    assert candidate(22) == 16
    assert candidate(16) == 16
    assert candidate(24) == 16
    assert candidate(16) == 16
    assert candidate(14) == 8
    assert candidate(22) == 16
    assert candidate(24) == 16
    assert candidate(22) == 16
    assert candidate(21) == 16
    assert candidate(24) == 16
    assert candidate(20) == 16
    assert candidate(22) == 16
    assert candidate(14) == 8
    assert candidate(15) == 8
    assert candidate(15) == 8
    assert candidate(15) == 8
    assert candidate(18) == 16
    assert candidate(22) == 16
    assert candidate(14) == 8
    assert candidate(18) == 16
    assert candidate(14) == 8
    assert candidate(19) == 16
    assert candidate(15) == 8
    assert candidate(29) == 16
    assert candidate(30) == 16
    assert candidate(27) == 16
    assert candidate(35) == 32
    assert candidate(31) == 16
    assert candidate(36) == 32
    assert candidate(37) == 32
    assert candidate(34) == 32
    assert candidate(30) == 16
    assert candidate(34) == 32
    assert candidate(30) == 16
    assert candidate(35) == 32
    assert candidate(28) == 16
    assert candidate(29) == 16
    assert candidate(31) == 16
    assert candidate(28) == 16
    assert candidate(37) == 32
    assert candidate(33) == 32
    assert candidate(29) == 16
    assert candidate(29) == 16
    assert candidate(30) == 16
    assert candidate(29) == 16
    assert candidate(30) == 16
    assert candidate(33) == 32
    assert candidate(37) == 32
    assert candidate(33) == 32
    assert candidate(33) == 32
    assert candidate(33) == 32
    assert candidate(29) == 16
    assert candidate(33) == 32
    assert candidate(31) == 16
    assert candidate(30) == 16
    assert candidate(34) == 32

if __name__ == '__main__':
    check(highest_Power_of_2)