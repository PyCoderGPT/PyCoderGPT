from case_MBPP_352 import consecutive_duplicates


def check(candidate):
    assert candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4 ])==[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]
    assert candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10])==[10, 15, 19, 18, 17, 26, 17, 18, 10]
    assert candidate(['a', 'a', 'b', 'c', 'd', 'd'])==['a', 'b', 'c', 'd']
    assert candidate([1, 2, 3, 1, 4, 4, 3, 8, 2, 7, 6, 11, 9, 7, 4, 5]) == [1, 2, 3, 1, 4, 3, 8, 2, 7, 6, 11, 9, 7, 4, 5]
    assert candidate([2, 3, 1, 5, 1, 6, 4, 10, 6, 8, 7, 8, 11, 9, 2, 8]) == [2, 3, 1, 5, 1, 6, 4, 10, 6, 8, 7, 8, 11, 9, 2, 8]
    assert candidate([3, 5, 1, 1, 1, 2, 9, 8, 5, 9, 6, 6, 3, 4, 1, 5]) == [3, 5, 1, 2, 9, 8, 5, 9, 6, 3, 4, 1, 5]
    assert candidate([5, 4, 3, 4, 2, 6, 9, 3, 11, 5, 9, 3, 10, 8, 7, 1]) == [5, 4, 3, 4, 2, 6, 9, 3, 11, 5, 9, 3, 10, 8, 7, 1]
    assert candidate([1, 1, 2, 7, 3, 7, 4, 1, 1, 9, 4, 6, 7, 11, 5, 6]) == [1, 2, 7, 3, 7, 4, 1, 9, 4, 6, 7, 11, 5, 6]
    assert candidate([4, 1, 6, 1, 2, 5, 2, 5, 6, 5, 9, 5, 7, 13, 2, 3]) == [4, 1, 6, 1, 2, 5, 2, 5, 6, 5, 9, 5, 7, 13, 2, 3]
    assert candidate([2, 3, 2, 7, 7, 9, 3, 1, 3, 7, 5, 8, 8, 10, 1, 8]) == [2, 3, 2, 7, 9, 3, 1, 3, 7, 5, 8, 10, 1, 8]
    assert candidate([1, 5, 1, 7, 5, 7, 5, 4, 9, 11, 10, 10, 8, 10, 8, 6]) == [1, 5, 1, 7, 5, 7, 5, 4, 9, 11, 10, 8, 10, 8, 6]
    assert candidate([5, 5, 1, 6, 3, 2, 2, 3, 9, 2, 7, 5, 12, 8, 5, 3]) == [5, 1, 6, 3, 2, 3, 9, 2, 7, 5, 12, 8, 5, 3]
    assert candidate([5, 1, 2, 6, 8, 6, 4, 10, 6, 11, 7, 11, 12, 7, 7, 2]) == [5, 1, 2, 6, 8, 6, 4, 10, 6, 11, 7, 11, 12, 7, 2]
    assert candidate([2, 4, 2, 3, 4, 9, 5, 6, 4, 8, 11, 4, 13, 4, 1, 1]) == [2, 4, 2, 3, 4, 9, 5, 6, 4, 8, 11, 4, 13, 4, 1]
    assert candidate([3, 2, 2, 7, 6, 6, 7, 3, 8, 6, 11, 7, 4, 7, 8, 6]) == [3, 2, 7, 6, 7, 3, 8, 6, 11, 7, 4, 7, 8, 6]
    assert candidate([4, 1, 1, 1, 2, 1, 7, 1, 9, 6, 7, 8, 13, 9, 5, 5]) == [4, 1, 2, 1, 7, 1, 9, 6, 7, 8, 13, 9, 5]
    assert candidate([1, 2, 6, 3, 3, 5, 5, 2, 2, 3, 3, 10, 5, 13, 9, 7]) == [1, 2, 6, 3, 5, 2, 3, 10, 5, 13, 9, 7]
    assert candidate([2, 4, 5, 7, 6, 9, 8, 7, 8, 11, 9, 7, 3, 5, 5, 8]) == [2, 4, 5, 7, 6, 9, 8, 7, 8, 11, 9, 7, 3, 5, 8]
    assert candidate([1, 5, 6, 6, 5, 4, 3, 3, 7, 10, 4, 6, 7, 4, 2, 5]) == [1, 5, 6, 5, 4, 3, 7, 10, 4, 6, 7, 4, 2, 5]
    assert candidate([4, 2, 2, 1, 6, 2, 3, 10, 6, 2, 9, 4, 5, 13, 6, 9]) == [4, 2, 1, 6, 2, 3, 10, 6, 2, 9, 4, 5, 13, 6, 9]
    assert candidate([1, 5, 6, 3, 7, 3, 2, 6, 4, 9, 7, 10, 13, 12, 6, 8]) == [1, 5, 6, 3, 7, 3, 2, 6, 4, 9, 7, 10, 13, 12, 6, 8]
    assert candidate([5, 3, 4, 4, 4, 5, 9, 10, 11, 7, 10, 4, 10, 12, 5, 9]) == [5, 3, 4, 5, 9, 10, 11, 7, 10, 4, 10, 12, 5, 9]
    assert candidate([3, 4, 4, 7, 3, 3, 1, 9, 2, 6, 11, 3, 9, 9, 3, 4]) == [3, 4, 7, 3, 1, 9, 2, 6, 11, 3, 9, 3, 4]
    assert candidate([4, 5, 1, 5, 2, 4, 6, 4, 7, 2, 11, 8, 6, 12, 5, 9]) == [4, 5, 1, 5, 2, 4, 6, 4, 7, 2, 11, 8, 6, 12, 5, 9]
    assert candidate([3, 1, 6, 7, 5, 3, 7, 2, 6, 10, 3, 12, 11, 4, 9, 9]) == [3, 1, 6, 7, 5, 3, 7, 2, 6, 10, 3, 12, 11, 4, 9]
    assert candidate([4, 5, 2, 3, 1, 8, 3, 10, 8, 11, 11, 6, 12, 12, 1, 8]) == [4, 5, 2, 3, 1, 8, 3, 10, 8, 11, 6, 12, 1, 8]
    assert candidate([1, 2, 3, 4, 3, 8, 8, 2, 1, 4, 7, 2, 5, 7, 1, 9]) == [1, 2, 3, 4, 3, 8, 2, 1, 4, 7, 2, 5, 7, 1, 9]
    assert candidate([4, 2, 4, 4, 2, 4, 7, 7, 4, 2, 3, 3, 7, 7, 2, 1]) == [4, 2, 4, 2, 4, 7, 4, 2, 3, 7, 2, 1]
    assert candidate([4, 3, 2, 5, 3, 3, 4, 7, 6, 11, 1, 5, 4, 6, 1, 5]) == [4, 3, 2, 5, 3, 4, 7, 6, 11, 1, 5, 4, 6, 1, 5]
    assert candidate([3, 4, 1, 3, 3, 4, 7, 8, 10, 11, 6, 9, 3, 8, 4, 8]) == [3, 4, 1, 3, 4, 7, 8, 10, 11, 6, 9, 3, 8, 4, 8]
    assert candidate([1, 1, 4, 2, 6, 7, 7, 4, 1, 9, 6, 9, 11, 14, 5, 1]) == [1, 4, 2, 6, 7, 4, 1, 9, 6, 9, 11, 14, 5, 1]
    assert candidate([2, 5, 5, 4, 4, 8, 8, 2, 11, 4, 1, 5, 4, 4, 7, 6]) == [2, 5, 4, 8, 2, 11, 4, 1, 5, 4, 7, 6]
    assert candidate([5, 3, 6, 1, 8, 7, 6, 8, 3, 10, 4, 6, 7, 7, 7, 3]) == [5, 3, 6, 1, 8, 7, 6, 8, 3, 10, 4, 6, 7, 3]
    assert candidate([5, 5, 2, 5, 2, 5, 8, 2, 6, 9, 10, 9, 8, 4, 2, 2]) == [5, 2, 5, 2, 5, 8, 2, 6, 9, 10, 9, 8, 4, 2]
    assert candidate([1, 1, 2, 2, 4, 8, 7, 4, 3, 6, 3, 6, 13, 6, 6, 5]) == [1, 2, 4, 8, 7, 4, 3, 6, 3, 6, 13, 6, 5]
    assert candidate([1, 4, 1, 6, 4, 6, 6, 8, 9, 10, 1, 5, 13, 14, 1, 3]) == [1, 4, 1, 6, 4, 6, 8, 9, 10, 1, 5, 13, 14, 1, 3]
    assert candidate([15, 12, 12, 17, 13, 21, 21, 24, 31, 19, 22, 13]) == [15, 12, 17, 13, 21, 24, 31, 19, 22, 13]
    assert candidate([5, 10, 11, 16, 15, 19, 12, 29, 26, 15, 17, 8]) == [5, 10, 11, 16, 15, 19, 12, 29, 26, 15, 17, 8]
    assert candidate([12, 5, 11, 17, 23, 15, 21, 30, 31, 13, 18, 14]) == [12, 5, 11, 17, 23, 15, 21, 30, 31, 13, 18, 14]
    assert candidate([8, 15, 15, 20, 20, 23, 15, 23, 25, 14, 17, 10]) == [8, 15, 20, 23, 15, 23, 25, 14, 17, 10]
    assert candidate([9, 12, 16, 16, 13, 21, 20, 30, 31, 14, 13, 6]) == [9, 12, 16, 13, 21, 20, 30, 31, 14, 13, 6]
    assert candidate([7, 15, 11, 23, 14, 22, 18, 28, 27, 18, 23, 14]) == [7, 15, 11, 23, 14, 22, 18, 28, 27, 18, 23, 14]
    assert candidate([8, 12, 13, 18, 19, 13, 12, 22, 30, 19, 20, 12]) == [8, 12, 13, 18, 19, 13, 12, 22, 30, 19, 20, 12]
    assert candidate([15, 12, 15, 22, 13, 13, 22, 27, 30, 21, 21, 6]) == [15, 12, 15, 22, 13, 22, 27, 30, 21, 6]
    assert candidate([15, 10, 11, 18, 14, 16, 15, 21, 23, 17, 14, 5]) == [15, 10, 11, 18, 14, 16, 15, 21, 23, 17, 14, 5]
    assert candidate([7, 11, 18, 19, 22, 15, 14, 25, 31, 12, 16, 12]) == [7, 11, 18, 19, 22, 15, 14, 25, 31, 12, 16, 12]
    assert candidate([13, 8, 17, 16, 19, 18, 12, 29, 26, 18, 13, 12]) == [13, 8, 17, 16, 19, 18, 12, 29, 26, 18, 13, 12]
    assert candidate([5, 8, 16, 18, 21, 17, 12, 31, 30, 12, 20, 13]) == [5, 8, 16, 18, 21, 17, 12, 31, 30, 12, 20, 13]
    assert candidate([13, 15, 16, 23, 23, 15, 19, 31, 28, 20, 14, 10]) == [13, 15, 16, 23, 15, 19, 31, 28, 20, 14, 10]
    assert candidate([10, 5, 14, 21, 15, 15, 15, 29, 26, 22, 23, 14]) == [10, 5, 14, 21, 15, 29, 26, 22, 23, 14]
    assert candidate([8, 11, 18, 23, 22, 21, 18, 30, 22, 16, 18, 13]) == [8, 11, 18, 23, 22, 21, 18, 30, 22, 16, 18, 13]
    assert candidate([10, 8, 13, 16, 23, 13, 22, 27, 24, 14, 13, 14]) == [10, 8, 13, 16, 23, 13, 22, 27, 24, 14, 13, 14]
    assert candidate([7, 10, 17, 14, 14, 14, 12, 27, 31, 18, 16, 9]) == [7, 10, 17, 14, 12, 27, 31, 18, 16, 9]
    assert candidate([8, 11, 11, 23, 15, 19, 16, 23, 23, 16, 22, 5]) == [8, 11, 23, 15, 19, 16, 23, 16, 22, 5]
    assert candidate([6, 5, 12, 20, 17, 13, 19, 22, 30, 12, 18, 14]) == [6, 5, 12, 20, 17, 13, 19, 22, 30, 12, 18, 14]
    assert candidate([10, 15, 15, 23, 20, 21, 21, 22, 23, 14, 21, 13]) == [10, 15, 23, 20, 21, 22, 23, 14, 21, 13]
    assert candidate([12, 5, 17, 24, 18, 20, 15, 22, 28, 18, 17, 12]) == [12, 5, 17, 24, 18, 20, 15, 22, 28, 18, 17, 12]
    assert candidate([11, 12, 15, 14, 15, 16, 22, 28, 23, 19, 20, 13]) == [11, 12, 15, 14, 15, 16, 22, 28, 23, 19, 20, 13]
    assert candidate([11, 8, 16, 17, 21, 23, 16, 28, 30, 19, 22, 5]) == [11, 8, 16, 17, 21, 23, 16, 28, 30, 19, 22, 5]
    assert candidate([15, 11, 20, 15, 21, 15, 18, 26, 23, 16, 21, 8]) == [15, 11, 20, 15, 21, 15, 18, 26, 23, 16, 21, 8]
    assert candidate([10, 15, 15, 21, 17, 14, 17, 25, 30, 14, 21, 13]) == [10, 15, 21, 17, 14, 17, 25, 30, 14, 21, 13]
    assert candidate([15, 15, 11, 17, 14, 16, 16, 25, 22, 13, 20, 8]) == [15, 11, 17, 14, 16, 25, 22, 13, 20, 8]
    assert candidate([7, 11, 19, 22, 21, 22, 20, 23, 21, 22, 15, 11]) == [7, 11, 19, 22, 21, 22, 20, 23, 21, 22, 15, 11]
    assert candidate([7, 5, 20, 21, 14, 19, 13, 25, 24, 12, 20, 5]) == [7, 5, 20, 21, 14, 19, 13, 25, 24, 12, 20, 5]
    assert candidate([6, 5, 12, 15, 19, 19, 16, 25, 27, 20, 22, 15]) == [6, 5, 12, 15, 19, 16, 25, 27, 20, 22, 15]
    assert candidate([9, 13, 18, 16, 21, 18, 12, 24, 23, 14, 19, 8]) == [9, 13, 18, 16, 21, 18, 12, 24, 23, 14, 19, 8]
    assert candidate([10, 7, 17, 15, 13, 21, 20, 22, 29, 22, 21, 7]) == [10, 7, 17, 15, 13, 21, 20, 22, 29, 22, 21, 7]
    assert candidate([8, 13, 17, 24, 14, 21, 18, 25, 21, 21, 15, 10]) == [8, 13, 17, 24, 14, 21, 18, 25, 21, 15, 10]
    assert candidate([14, 6, 13, 23, 21, 22, 14, 29, 27, 21, 23, 13]) == [14, 6, 13, 23, 21, 22, 14, 29, 27, 21, 23, 13]
    assert candidate(['n', 'z', 'l', 'g', 'u', 'r']) == ['n', 'z', 'l', 'g', 'u', 'r']
    assert candidate(['a', 'j', 'b', 'd', 'k', 'w']) == ['a', 'j', 'b', 'd', 'k', 'w']
    assert candidate(['e', 'w', 'h', 'v', 'b', 'c']) == ['e', 'w', 'h', 'v', 'b', 'c']
    assert candidate(['u', 'd', 'b', 'c', 'x', 'y']) == ['u', 'd', 'b', 'c', 'x', 'y']
    assert candidate(['u', 'd', 'n', 's', 'y', 'o']) == ['u', 'd', 'n', 's', 'y', 'o']
    assert candidate(['f', 'c', 'c', 'n', 'u', 'z']) == ['f', 'c', 'n', 'u', 'z']
    assert candidate(['o', 'z', 'n', 'r', 'e', 'z']) == ['o', 'z', 'n', 'r', 'e', 'z']
    assert candidate(['y', 'b', 'm', 'k', 'm', 'e']) == ['y', 'b', 'm', 'k', 'm', 'e']
    assert candidate(['g', 'd', 'd', 'p', 'k', 'u']) == ['g', 'd', 'p', 'k', 'u']
    assert candidate(['p', 'y', 'y', 'o', 'p', 'i']) == ['p', 'y', 'o', 'p', 'i']
    assert candidate(['l', 'n', 'p', 't', 'h', 'a']) == ['l', 'n', 'p', 't', 'h', 'a']
    assert candidate(['m', 'a', 'z', 'z', 'f', 'j']) == ['m', 'a', 'z', 'f', 'j']
    assert candidate(['f', 'f', 'c', 'v', 'o', 'f']) == ['f', 'c', 'v', 'o', 'f']
    assert candidate(['n', 't', 'e', 'a', 's', 'i']) == ['n', 't', 'e', 'a', 's', 'i']
    assert candidate(['e', 'g', 'm', 'f', 'p', 'q']) == ['e', 'g', 'm', 'f', 'p', 'q']
    assert candidate(['x', 'q', 't', 'z', 'v', 'y']) == ['x', 'q', 't', 'z', 'v', 'y']
    assert candidate(['r', 'b', 'y', 'u', 't', 'g']) == ['r', 'b', 'y', 'u', 't', 'g']
    assert candidate(['n', 'n', 'd', 'b', 'q', 'x']) == ['n', 'd', 'b', 'q', 'x']
    assert candidate(['j', 's', 'y', 'j', 'j', 'o']) == ['j', 's', 'y', 'j', 'o']
    assert candidate(['a', 'd', 'b', 'p', 'j', 'd']) == ['a', 'd', 'b', 'p', 'j', 'd']
    assert candidate(['d', 'i', 'o', 'n', 'u', 't']) == ['d', 'i', 'o', 'n', 'u', 't']
    assert candidate(['j', 'x', 's', 'x', 'h', 'm']) == ['j', 'x', 's', 'x', 'h', 'm']
    assert candidate(['x', 'j', 'u', 'h', 'k', 'a']) == ['x', 'j', 'u', 'h', 'k', 'a']
    assert candidate(['d', 'y', 'q', 'e', 'v', 'l']) == ['d', 'y', 'q', 'e', 'v', 'l']
    assert candidate(['k', 'k', 'k', 'j', 'd', 'j']) == ['k', 'j', 'd', 'j']
    assert candidate(['s', 'm', 'a', 'z', 'n', 'o']) == ['s', 'm', 'a', 'z', 'n', 'o']
    assert candidate(['q', 'o', 'p', 'h', 'x', 'l']) == ['q', 'o', 'p', 'h', 'x', 'l']
    assert candidate(['q', 'e', 'x', 'p', 'l', 'd']) == ['q', 'e', 'x', 'p', 'l', 'd']
    assert candidate(['b', 'w', 'n', 'k', 'u', 'i']) == ['b', 'w', 'n', 'k', 'u', 'i']
    assert candidate(['x', 'e', 'x', 'e', 'p', 'o']) == ['x', 'e', 'x', 'e', 'p', 'o']
    assert candidate(['w', 'w', 'k', 'l', 'i', 'l']) == ['w', 'k', 'l', 'i', 'l']
    assert candidate(['o', 'm', 's', 'f', 'c', 't']) == ['o', 'm', 's', 'f', 'c', 't']
    assert candidate(['u', 'v', 'b', 'h', 'u', 's']) == ['u', 'v', 'b', 'h', 'u', 's']

if __name__ == '__main__':
    check(consecutive_duplicates)