from case_MBPP_083 import zero_count


def check(candidate):
    assert candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8])==0.15
    assert candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8])==0.00
    assert candidate([2, 4, -6, -9, 11, -12, 14, -5, 17])==0.00
    assert candidate([1, 4, 2, -3, -5, 7, 5, -6, 1, 8, 3, 8, 9]) == 0.0
    assert candidate([5, 5, 5, -1, -6, 11, 1, -1, -2, 5, 8, 4, 7]) == 0.0
    assert candidate([4, 6, 7, -1, -9, 1, 1, -8, 3, 6, 8, 5, 4]) == 0.0
    assert candidate([1, 1, 4, 2, -1, 10, 1, -2, 2, 6, 3, 1, 3]) == 0.0
    assert candidate([4, 3, 5, 3, -4, 8, 3, 2, -2, 5, 5, 3, 9]) == 0.0
    assert candidate([3, 2, 6, -3, -5, 1, 3, -1, -3, 5, 3, 8, 6]) == 0.0
    assert candidate([4, 5, 1, -6, -2, 5, 5, -8, 1, 7, 4, 6, 4]) == 0.0
    assert candidate([2, 1, 7, -6, -10, 9, 2, -5, -4, 4, 4, 11, 4]) == 0.0
    assert candidate([4, 5, 2, 2, -1, 7, 2, -7, 3, 3, 8, 6, 4]) == 0.0
    assert candidate([2, 6, 1, 1, 0, 5, 5, -3, 3, 4, 4, 4, 12]) == 0.08
    assert candidate([4, 5, 5, -3, 0, 4, 3, -8, -5, 2, 5, 9, 9]) == 0.08
    assert candidate([1, 2, 6, 0, -5, 7, 3, -3, -6, 3, 8, 4, 5]) == 0.08
    assert candidate([4, 5, 5, -6, -1, 10, 1, -4, -2, 7, 1, 3, 5]) == 0.0
    assert candidate([5, 2, 4, -5, -10, 2, 5, -1, -7, 1, 5, 10, 6]) == 0.0
    assert candidate([5, 3, 4, -3, -5, 2, 4, -1, -6, 5, 3, 7, 4]) == 0.0
    assert candidate([3, 4, 6, -6, 0, 8, 1, -8, 3, 8, 8, 9, 11]) == 0.08
    assert candidate([2, 4, 4, -2, -6, 3, 1, -6, -1, 2, 4, 6, 13]) == 0.0
    assert candidate([4, 2, 2, 4, -8, 1, 5, 2, -5, 6, 9, 1, 11]) == 0.0
    assert candidate([1, 5, 3, 0, -10, 6, 3, -8, -3, 5, 5, 7, 10]) == 0.08
    assert candidate([2, 3, 6, 3, -8, 4, 4, -3, -3, 7, 4, 9, 9]) == 0.0
    assert candidate([4, 1, 3, -2, -9, 3, 3, 2, -1, 4, 3, 8, 11]) == 0.0
    assert candidate([3, 3, 2, -3, -10, 8, 3, -8, 0, 7, 1, 2, 8]) == 0.08
    assert candidate([2, 2, 3, 1, -3, 2, 1, -8, 3, 6, 6, 6, 10]) == 0.0
    assert candidate([3, 4, 7, 2, -6, 6, 1, -8, 0, 1, 3, 5, 6]) == 0.08
    assert candidate([1, 5, 1, -5, -8, 11, 1, -5, -5, 5, 1, 5, 11]) == 0.0
    assert candidate([4, 1, 4, -6, -9, 4, 4, -3, -7, 3, 5, 7, 3]) == 0.0
    assert candidate([5, 4, 4, 4, -10, 3, 1, -5, -3, 2, 1, 4, 11]) == 0.0
    assert candidate([5, 1, 5, -4, -1, 8, 2, -7, -7, 7, 2, 5, 6]) == 0.0
    assert candidate([1, 6, 7, -4, -4, 10, 3, -2, 1, 7, 8, 3, 10]) == 0.0
    assert candidate([3, 5, 1, -2, -6, 10, 4, -5, -2, 8, 5, 10, 7]) == 0.0
    assert candidate([3, 6, 6, 4, -4, 11, 1, 1, -5, 1, 9, 11, 4]) == 0.0
    assert candidate([3, 5, 6, 4, -6, 4, 5, -7, 1, 3, 1, 4, 3]) == 0.0
    assert candidate([4, 5, 7, 4, -3, 9, 2, 1, 3, 7, 2, 1, 9]) == 0.0
    assert candidate([2, 4, 6, -5, -1, 11, 2, -8, -1, 1, 8, 8, 10]) == 0.0
    assert candidate([7, 2, 4, -5, -1, 1, 3, -3, 1, 1, 9, 2, 11]) == 0.0
    assert candidate([5, 1, 5, 2, -6, 10, 6, -1, 1, 8, 2, 1, 3]) == 0.0
    assert candidate([6, 6, 7, 4, -6, 2, 2, 2, -5, 1, 6, 3, 13]) == 0.0
    assert candidate([1, 5, 5, 4, -1, 9, 9, 1, 2, 6, 1, 9, 10]) == 0.0
    assert candidate([4, 5, 7, -5, -10, 10, 1, 0, -3, 1, 2, 4, 12]) == 0.08
    assert candidate([6, 2, 6, 1, -3, 7, 3, -8, 2, 2, 2, 4, 11]) == 0.0
    assert candidate([5, 6, 3, 0, -6, 1, 9, -4, -4, 4, 5, 3, 3]) == 0.08
    assert candidate([4, 2, 7, -3, -1, 7, 8, 1, -7, 5, 4, 8, 4]) == 0.0
    assert candidate([6, 1, 5, 3, -3, 11, 4, -5, 2, 1, 1, 3, 12]) == 0.0
    assert candidate([1, 3, 5, -2, -2, 8, 8, -7, -4, 3, 3, 3, 3]) == 0.0
    assert candidate([2, 4, 6, -3, -6, 4, 1, 1, -6, 1, 1, 3, 11]) == 0.0
    assert candidate([1, 5, 6, 1, -7, 5, 7, -5, -2, 2, 7, 4, 5]) == 0.0
    assert candidate([6, 6, 3, 0, -1, 11, 2, 1, 0, 4, 3, 1, 12]) == 0.15
    assert candidate([7, 4, 6, -1, -10, 3, 7, -1, -1, 3, 5, 2, 13]) == 0.0
    assert candidate([6, 4, 5, 0, -8, 1, 8, 0, -1, 2, 7, 2, 4]) == 0.15
    assert candidate([7, 2, 4, -4, -4, 4, 1, -6, -3, 3, 5, 6, 3]) == 0.0
    assert candidate([3, 5, 7, -2, -8, 3, 4, -1, 1, 1, 9, 9, 13]) == 0.0
    assert candidate([4, 4, 4, -5, -9, 11, 6, 0, 2, 1, 4, 6, 6]) == 0.08
    assert candidate([5, 3, 6, 0, -6, 10, 8, -4, 0, 6, 4, 6, 12]) == 0.15
    assert candidate([7, 1, 3, -4, -2, 6, 8, -4, -1, 1, 8, 6, 13]) == 0.0
    assert candidate([3, 3, 4, 1, -3, 6, 6, -6, 1, 8, 6, 8, 7]) == 0.0
    assert candidate([2, 4, 7, -4, -7, 6, 1, -1, 1, 5, 4, 2, 4]) == 0.0
    assert candidate([6, 2, 5, -3, -6, 10, 4, -2, -1, 8, 5, 1, 7]) == 0.0
    assert candidate([7, 5, 2, -2, -2, 1, 6, 2, 2, 3, 9, 2, 4]) == 0.0
    assert candidate([3, 5, 4, -4, -7, 5, 8, 0, -3, 8, 5, 6, 9]) == 0.08
    assert candidate([2, 1, 4, 3, -6, 2, 1, 0, -6, 8, 2, 7, 6]) == 0.08
    assert candidate([5, 3, 6, 3, -2, 11, 3, -4, -5, 5, 9, 8, 3]) == 0.0
    assert candidate([7, 6, 4, -5, -2, 4, 8, -1, -2, 2, 9, 4, 10]) == 0.0
    assert candidate([1, 6, 4, -3, -9, 11, 2, -7, 1, 6, 7, 9, 9]) == 0.0
    assert candidate([6, 6, 3, -3, -10, 1, 2, -6, 2, 3, 2, 1, 4]) == 0.0
    assert candidate([7, 1, 3, 3, -5, 8, 1, -7, 0, 7, 3, 10, 8]) == 0.08
    assert candidate([5, 5, 1, 4, -5, 3, 9, -4, -7, 2, 1, 7, 10]) == 0.0
    assert candidate([2, 9, -6, -14, 10, -9, 9, -6, 12]) == 0.0
    assert candidate([1, 1, -10, -10, 6, -12, 10, -4, 21]) == 0.0
    assert candidate([7, 3, -11, -7, 14, -12, 10, -8, 22]) == 0.0
    assert candidate([4, 8, -7, -13, 11, -8, 19, -5, 15]) == 0.0
    assert candidate([7, 5, -11, -4, 8, -11, 18, -3, 18]) == 0.0
    assert candidate([6, 1, -1, -4, 6, -13, 13, -8, 14]) == 0.0
    assert candidate([2, 6, -4, -8, 8, -10, 17, -2, 18]) == 0.0
    assert candidate([2, 7, -8, -14, 13, -11, 16, -9, 18]) == 0.0
    assert candidate([2, 9, -7, -7, 8, -17, 18, -6, 15]) == 0.0
    assert candidate([5, 5, -8, -14, 10, -10, 10, -5, 12]) == 0.0
    assert candidate([4, 1, -7, -8, 13, -12, 9, -5, 13]) == 0.0
    assert candidate([1, 4, -10, -5, 7, -8, 11, -7, 13]) == 0.0
    assert candidate([1, 4, -11, -7, 9, -9, 14, -4, 21]) == 0.0
    assert candidate([6, 5, -9, -12, 16, -17, 12, -3, 12]) == 0.0
    assert candidate([6, 5, -8, -4, 8, -9, 19, -8, 13]) == 0.0
    assert candidate([2, 8, -5, -13, 9, -17, 10, -3, 20]) == 0.0
    assert candidate([1, 9, -6, -9, 9, -8, 17, -8, 21]) == 0.0
    assert candidate([4, 1, -8, -11, 10, -12, 17, -6, 17]) == 0.0
    assert candidate([2, 6, -7, -14, 10, -11, 9, -4, 16]) == 0.0
    assert candidate([4, 7, -6, -13, 14, -8, 17, -8, 17]) == 0.0
    assert candidate([3, 4, -5, -7, 15, -17, 16, -3, 22]) == 0.0
    assert candidate([2, 3, -8, -10, 7, -13, 19, -5, 18]) == 0.0
    assert candidate([6, 3, -5, -14, 16, -10, 13, -7, 13]) == 0.0
    assert candidate([6, 8, -10, -11, 9, -17, 14, -8, 12]) == 0.0
    assert candidate([7, 5, -6, -4, 8, -9, 15, -2, 13]) == 0.0
    assert candidate([1, 4, -6, -14, 10, -13, 14, -10, 20]) == 0.0
    assert candidate([6, 1, -1, -13, 12, -10, 16, -4, 19]) == 0.0
    assert candidate([6, 2, -1, -4, 10, -12, 13, -9, 22]) == 0.0
    assert candidate([6, 9, -5, -11, 14, -7, 17, -9, 12]) == 0.0
    assert candidate([1, 7, -6, -11, 10, -15, 18, -6, 22]) == 0.0
    assert candidate([3, 9, -6, -8, 15, -9, 11, -7, 12]) == 0.0
    assert candidate([2, 9, -4, -7, 11, -14, 16, -6, 22]) == 0.0
    assert candidate([3, 9, -8, -10, 13, -16, 10, 0, 22]) == 0.11

if __name__ == '__main__':
    check(zero_count)