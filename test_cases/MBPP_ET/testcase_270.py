from case_MBPP_270 import union_elements


def check(candidate):
    assert candidate((3, 4, 5, 6),(5, 7, 4, 10) ) == (3, 4, 5, 6, 7, 10)
    assert candidate((1, 2, 3, 4),(3, 4, 5, 6) ) == (1, 2, 3, 4, 5, 6)
    assert candidate((11, 12, 13, 14),(13, 15, 16, 17) ) == (11, 12, 13, 14, 15, 16, 17)
    assert candidate((1, 4, 1, 8), (2, 4, 1, 13)) == (1, 2, 4, 8, 13)
    assert candidate((5, 4, 8, 11), (9, 3, 4, 11)) == (3, 4, 5, 8, 9, 11)
    assert candidate((5, 9, 9, 7), (4, 11, 9, 13)) == (4, 5, 7, 9, 11, 13)
    assert candidate((8, 8, 7, 2), (10, 3, 7, 8)) == (2, 3, 7, 8, 10)
    assert candidate((6, 7, 7, 3), (3, 9, 7, 13)) == (3, 6, 7, 9, 13)
    assert candidate((7, 1, 5, 5), (1, 6, 5, 8)) == (1, 5, 6, 7, 8)
    assert candidate((1, 5, 4, 5), (5, 6, 1, 8)) == (1, 4, 5, 6, 8)
    assert candidate((6, 1, 2, 9), (5, 10, 2, 10)) == (1, 2, 5, 6, 9, 10)
    assert candidate((1, 8, 6, 9), (3, 7, 4, 13)) == (1, 3, 4, 6, 7, 8, 9, 13)
    assert candidate((7, 6, 6, 5), (4, 3, 4, 7)) == (3, 4, 5, 6, 7)
    assert candidate((6, 2, 1, 10), (2, 8, 3, 7)) == (1, 2, 3, 6, 7, 8, 10)
    assert candidate((8, 4, 10, 3), (1, 11, 6, 8)) == (1, 3, 4, 6, 8, 10, 11)
    assert candidate((5, 8, 3, 2), (1, 5, 7, 6)) == (1, 2, 3, 5, 6, 7, 8)
    assert candidate((6, 1, 3, 1), (4, 2, 9, 9)) == (1, 2, 3, 4, 6, 9)
    assert candidate((4, 3, 6, 6), (3, 7, 4, 8)) == (3, 4, 6, 7, 8)
    assert candidate((1, 2, 9, 2), (5, 8, 6, 10)) == (1, 2, 5, 6, 8, 9, 10)
    assert candidate((4, 9, 2, 3), (10, 6, 9, 11)) == (2, 3, 4, 6, 9, 10, 11)
    assert candidate((1, 7, 2, 1), (3, 3, 6, 12)) == (1, 2, 3, 6, 7, 12)
    assert candidate((7, 5, 2, 8), (6, 9, 6, 7)) == (2, 5, 6, 7, 8, 9)
    assert candidate((4, 5, 9, 3), (6, 11, 4, 11)) == (3, 4, 5, 6, 9, 11)
    assert candidate((7, 4, 10, 3), (4, 8, 4, 11)) == (3, 4, 7, 8, 10, 11)
    assert candidate((1, 7, 5, 5), (6, 6, 3, 11)) == (1, 3, 5, 6, 7, 11)
    assert candidate((2, 1, 9, 4), (6, 8, 9, 8)) == (1, 2, 4, 6, 8, 9)
    assert candidate((4, 4, 8, 11), (7, 11, 4, 9)) == (4, 7, 8, 9, 11)
    assert candidate((7, 8, 7, 9), (5, 8, 5, 7)) == (8, 9, 5, 7)
    assert candidate((2, 4, 6, 7), (8, 2, 5, 6)) == (2, 4, 5, 6, 7, 8)
    assert candidate((7, 6, 1, 7), (6, 4, 6, 11)) == (1, 4, 6, 7, 11)
    assert candidate((1, 2, 2, 5), (7, 5, 3, 10)) == (1, 2, 3, 5, 7, 10)
    assert candidate((8, 6, 3, 9), (4, 10, 6, 12)) == (3, 4, 6, 8, 9, 10, 12)
    assert candidate((4, 2, 6, 9), (6, 6, 2, 5)) == (2, 4, 5, 6, 9)
    assert candidate((6, 4, 7, 2), (8, 10, 8, 9)) == (2, 4, 6, 7, 8, 9, 10)
    assert candidate((7, 5, 3, 9), (3, 7, 3, 11)) == (3, 5, 7, 9, 11)
    assert candidate((6, 3, 9, 5), (4, 8, 7, 15)) == (3, 4, 5, 6, 7, 8, 9, 15)
    assert candidate((2, 3, 2, 1), (3, 6, 8, 5)) == (1, 2, 3, 5, 6, 8)
    assert candidate((6, 7, 7, 1), (7, 7, 8, 10)) == (1, 6, 7, 8, 10)
    assert candidate((1, 7, 5, 6), (5, 3, 7, 1)) == (1, 3, 5, 6, 7)
    assert candidate((4, 5, 3, 1), (2, 4, 4, 6)) == (1, 2, 3, 4, 5, 6)
    assert candidate((3, 6, 2, 4), (6, 5, 6, 11)) == (2, 3, 4, 5, 6, 11)
    assert candidate((3, 7, 5, 8), (1, 2, 2, 10)) == (1, 2, 3, 5, 7, 8, 10)
    assert candidate((4, 5, 7, 4), (7, 5, 10, 6)) == (4, 5, 6, 7, 10)
    assert candidate((3, 2, 3, 4), (5, 2, 9, 7)) == (2, 3, 4, 5, 7, 9)
    assert candidate((1, 3, 4, 5), (1, 2, 1, 3)) == (1, 2, 3, 4, 5)
    assert candidate((6, 4, 3, 5), (5, 7, 5, 7)) == (3, 4, 5, 6, 7)
    assert candidate((3, 7, 5, 8), (8, 7, 7, 2)) == (2, 3, 5, 7, 8)
    assert candidate((4, 4, 1, 5), (5, 7, 2, 2)) == (1, 2, 4, 5, 7)
    assert candidate((3, 7, 4, 3), (7, 6, 3, 10)) == (3, 4, 6, 7, 10)
    assert candidate((2, 1, 3, 7), (8, 8, 6, 9)) == (1, 2, 3, 6, 7, 8, 9)
    assert candidate((6, 7, 5, 8), (7, 1, 4, 7)) == (1, 4, 5, 6, 7, 8)
    assert candidate((6, 3, 6, 9), (1, 4, 3, 2)) == (1, 2, 3, 4, 6, 9)
    assert candidate((6, 5, 1, 4), (7, 2, 8, 9)) == (1, 2, 4, 5, 6, 7, 8, 9)
    assert candidate((2, 5, 4, 5), (5, 3, 8, 10)) == (2, 3, 4, 5, 8, 10)
    assert candidate((2, 1, 8, 1), (7, 4, 10, 7)) == (1, 2, 4, 7, 8, 10)
    assert candidate((4, 6, 8, 7), (1, 2, 5, 3)) == (1, 2, 3, 4, 5, 6, 7, 8)
    assert candidate((5, 5, 4, 1), (8, 5, 4, 1)) == (8, 1, 4, 5)
    assert candidate((4, 7, 6, 4), (7, 3, 4, 6)) == (3, 4, 6, 7)
    assert candidate((4, 7, 7, 1), (6, 4, 6, 6)) == (1, 4, 6, 7)
    assert candidate((4, 5, 8, 8), (1, 2, 5, 7)) == (1, 2, 4, 5, 7, 8)
    assert candidate((6, 5, 1, 6), (5, 5, 8, 5)) == (8, 1, 5, 6)
    assert candidate((6, 7, 1, 1), (1, 1, 8, 11)) == (1, 6, 7, 8, 11)
    assert candidate((2, 4, 8, 8), (4, 2, 9, 6)) == (2, 4, 6, 8, 9)
    assert candidate((4, 3, 7, 9), (1, 3, 2, 8)) == (1, 2, 3, 4, 7, 8, 9)
    assert candidate((3, 6, 8, 9), (5, 1, 5, 7)) == (1, 3, 5, 6, 7, 8, 9)
    assert candidate((4, 7, 7, 7), (1, 3, 6, 3)) == (1, 3, 4, 6, 7)
    assert candidate((6, 1, 3, 5), (8, 4, 3, 6)) == (1, 3, 4, 5, 6, 8)
    assert candidate((3, 6, 3, 6), (3, 8, 5, 10)) == (3, 5, 6, 8, 10)
    assert candidate((5, 3, 5, 9), (1, 2, 5, 11)) == (1, 2, 3, 5, 9, 11)
    assert candidate((8, 11, 18, 13), (15, 19, 19, 13)) == (8, 11, 13, 15, 18, 19)
    assert candidate((8, 11, 14, 15), (18, 15, 16, 12)) == (8, 11, 12, 14, 15, 16, 18)
    assert candidate((15, 14, 16, 12), (15, 16, 18, 14)) == (12, 14, 15, 16, 18)
    assert candidate((10, 9, 18, 13), (8, 11, 11, 17)) == (8, 9, 10, 11, 13, 17, 18)
    assert candidate((6, 10, 8, 14), (9, 17, 11, 20)) == (6, 8, 9, 10, 11, 14, 17, 20)
    assert candidate((11, 9, 15, 12), (18, 20, 11, 20)) == (9, 11, 12, 15, 18, 20)
    assert candidate((10, 13, 15, 18), (16, 12, 13, 15)) == (10, 12, 13, 15, 16, 18)
    assert candidate((7, 9, 17, 10), (14, 15, 16, 20)) == (7, 9, 10, 14, 15, 16, 17, 20)
    assert candidate((11, 10, 14, 9), (10, 18, 14, 16)) == (9, 10, 11, 14, 16, 18)
    assert candidate((16, 11, 13, 12), (15, 11, 13, 17)) == (11, 12, 13, 15, 16, 17)
    assert candidate((15, 17, 8, 16), (8, 10, 11, 13)) == (8, 10, 11, 13, 15, 16, 17)
    assert candidate((11, 15, 9, 16), (13, 10, 12, 22)) == (9, 10, 11, 12, 13, 15, 16, 22)
    assert candidate((14, 10, 11, 19), (12, 16, 14, 14)) == (10, 11, 12, 14, 16, 19)
    assert candidate((16, 10, 16, 13), (16, 18, 16, 17)) == (10, 13, 16, 17, 18)
    assert candidate((8, 15, 13, 19), (10, 12, 11, 16)) == (8, 10, 11, 12, 13, 15, 16, 19)
    assert candidate((15, 11, 18, 19), (12, 15, 16, 17)) == (11, 12, 15, 16, 17, 18, 19)
    assert candidate((13, 13, 10, 12), (8, 20, 14, 15)) == (8, 10, 12, 13, 14, 15, 20)
    assert candidate((14, 10, 16, 15), (16, 17, 11, 16)) == (10, 11, 14, 15, 16, 17)
    assert candidate((13, 8, 15, 12), (14, 10, 12, 18)) == (8, 10, 12, 13, 14, 15, 18)
    assert candidate((12, 14, 13, 12), (12, 17, 21, 12)) == (12, 13, 14, 17, 21)
    assert candidate((8, 17, 10, 15), (10, 14, 16, 19)) == (8, 10, 14, 15, 16, 17, 19)
    assert candidate((15, 16, 15, 18), (12, 13, 15, 17)) == (12, 13, 15, 16, 17, 18)
    assert candidate((8, 15, 9, 10), (17, 13, 11, 18)) == (8, 9, 10, 11, 13, 15, 17, 18)
    assert candidate((11, 11, 8, 12), (17, 20, 16, 16)) == (8, 11, 12, 16, 17, 20)
    assert candidate((7, 16, 15, 11), (10, 12, 21, 12)) == (7, 10, 11, 12, 15, 16, 21)
    assert candidate((10, 14, 13, 13), (10, 12, 15, 15)) == (10, 12, 13, 14, 15)
    assert candidate((12, 10, 10, 15), (13, 16, 11, 12)) == (10, 11, 12, 13, 15, 16)
    assert candidate((11, 16, 12, 12), (17, 16, 20, 19)) == (11, 12, 16, 17, 19, 20)
    assert candidate((15, 16, 14, 16), (9, 17, 21, 20)) == (9, 14, 15, 16, 17, 20, 21)
    assert candidate((11, 14, 14, 12), (13, 19, 13, 13)) == (11, 12, 13, 14, 19)
    assert candidate((13, 14, 14, 14), (14, 10, 15, 14)) == (10, 13, 14, 15)
    assert candidate((16, 10, 11, 17), (17, 20, 19, 18)) == (10, 11, 16, 17, 18, 19, 20)
    assert candidate((14, 14, 15, 16), (13, 14, 16, 22)) == (13, 14, 15, 16, 22)

if __name__ == '__main__':
    check(union_elements)