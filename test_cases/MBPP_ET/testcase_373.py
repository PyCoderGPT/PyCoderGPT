from case_MBPP_373 import check_min_heap


def check(candidate):
    assert candidate([1, 2, 3, 4, 5, 6], 0) == True
    assert candidate([2, 3, 4, 5, 10, 15], 0) == True
    assert candidate([2, 10, 4, 5, 3, 15], 0) == False
    assert candidate([5, 3, 5, 3, 2, 3], 4) == True
    assert candidate([1, 4, 3, 5, 2, 5], 3) == True
    assert candidate([2, 5, 8, 3, 1, 3], 3) == True
    assert candidate([1, 1, 1, 3, 8, 7], 4) == True
    assert candidate([6, 1, 1, 9, 6, 6], 2) == True
    assert candidate([2, 5, 3, 7, 10, 8], 1) == True
    assert candidate([2, 6, 8, 6, 10, 11], 2) == True
    assert candidate([5, 7, 4, 2, 4, 9], 1) == False
    assert candidate([6, 5, 3, 2, 9, 2], 3) == True
    assert candidate([4, 5, 7, 6, 2, 9], 4) == True
    assert candidate([6, 1, 4, 4, 4, 2], 2) == False
    assert candidate([1, 3, 7, 9, 7, 6], 4) == True
    assert candidate([5, 4, 4, 2, 8, 6], 2) == True
    assert candidate([1, 7, 6, 7, 2, 3], 4) == True
    assert candidate([4, 5, 1, 7, 7, 8], 5) == True
    assert candidate([3, 2, 1, 6, 6, 10], 3) == True
    assert candidate([5, 5, 8, 8, 5, 4], 2) == False
    assert candidate([3, 3, 6, 8, 6, 2], 2) == False
    assert candidate([6, 3, 2, 8, 7, 9], 3) == True
    assert candidate([4, 2, 4, 8, 10, 10], 4) == True
    assert candidate([4, 2, 3, 8, 3, 7], 3) == True
    assert candidate([2, 7, 4, 5, 1, 11], 1) == False
    assert candidate([4, 2, 5, 6, 8, 9], 4) == True
    assert candidate([6, 6, 6, 4, 1, 1], 5) == True
    assert candidate([2, 7, 6, 6, 9, 6], 1) == False
    assert candidate([4, 1, 8, 7, 5, 1], 1) == True
    assert candidate([4, 4, 2, 8, 1, 4], 5) == True
    assert candidate([2, 1, 8, 4, 6, 7], 4) == True
    assert candidate([1, 6, 7, 1, 5, 7], 4) == True
    assert candidate([1, 3, 2, 2, 8, 3], 5) == True
    assert candidate([3, 6, 6, 2, 7, 9], 5) == True
    assert candidate([3, 7, 7, 9, 4, 5], 2) == False
    assert candidate([4, 4, 7, 5, 10, 5], 4) == True
    assert candidate([5, 5, 7, 7, 12, 16], 3) == True
    assert candidate([6, 5, 9, 3, 6, 10], 2) == True
    assert candidate([6, 8, 6, 3, 6, 11], 2) == True
    assert candidate([3, 1, 9, 6, 15, 12], 4) == True
    assert candidate([7, 6, 3, 9, 10, 19], 3) == True
    assert candidate([2, 4, 8, 8, 5, 10], 2) == True
    assert candidate([1, 8, 1, 5, 8, 18], 2) == True
    assert candidate([6, 3, 9, 7, 10, 19], 1) == True
    assert candidate([5, 2, 1, 3, 7, 10], 4) == True
    assert candidate([6, 7, 5, 10, 7, 12], 4) == True
    assert candidate([3, 2, 9, 9, 9, 19], 1) == True
    assert candidate([6, 4, 9, 7, 11, 19], 2) == True
    assert candidate([1, 4, 7, 7, 13, 18], 1) == True
    assert candidate([1, 8, 9, 6, 6, 12], 1) == False
    assert candidate([5, 4, 1, 2, 9, 18], 4) == True
    assert candidate([2, 2, 9, 2, 15, 14], 1) == True
    assert candidate([5, 1, 1, 2, 8, 20], 2) == True
    assert candidate([6, 5, 4, 5, 15, 14], 4) == True
    assert candidate([5, 5, 9, 3, 13, 10], 1) == False
    assert candidate([4, 7, 4, 1, 6, 17], 2) == True
    assert candidate([1, 8, 7, 3, 13, 13], 2) == True
    assert candidate([2, 8, 6, 5, 8, 13], 3) == True
    assert candidate([1, 2, 4, 5, 15, 18], 4) == True
    assert candidate([4, 7, 6, 2, 15, 11], 4) == True
    assert candidate([4, 8, 9, 1, 10, 18], 2) == True
    assert candidate([7, 7, 9, 9, 10, 12], 3) == True
    assert candidate([6, 3, 3, 10, 15, 13], 2) == True
    assert candidate([3, 1, 6, 7, 9, 10], 4) == True
    assert candidate([3, 5, 5, 5, 10, 14], 3) == True
    assert candidate([6, 4, 7, 6, 7, 11], 2) == True
    assert candidate([1, 5, 4, 9, 13, 18], 4) == True
    assert candidate([6, 3, 9, 2, 9, 18], 5) == True
    assert candidate([3, 5, 3, 8, 6, 16], 2) == True
    assert candidate([4, 11, 2, 9, 5, 15], 5) == True
    assert candidate([7, 8, 4, 10, 6, 19], 5) == True
    assert candidate([7, 10, 3, 4, 5, 13], 1) == False
    assert candidate([5, 10, 2, 3, 2, 14], 3) == True
    assert candidate([2, 6, 3, 3, 1, 16], 3) == True
    assert candidate([3, 7, 3, 8, 7, 13], 4) == True
    assert candidate([1, 10, 8, 6, 8, 16], 2) == True
    assert candidate([3, 13, 5, 5, 4, 18], 4) == True
    assert candidate([5, 13, 4, 2, 3, 17], 4) == True
    assert candidate([3, 8, 8, 10, 5, 10], 2) == True
    assert candidate([4, 7, 1, 6, 7, 12], 5) == True
    assert candidate([2, 7, 1, 10, 3, 20], 1) == False
    assert candidate([4, 13, 3, 10, 7, 14], 5) == True
    assert candidate([7, 11, 8, 8, 6, 13], 3) == True
    assert candidate([4, 14, 3, 1, 4, 15], 5) == True
    assert candidate([7, 7, 9, 10, 8, 16], 4) == True
    assert candidate([7, 10, 5, 1, 1, 10], 3) == True
    assert candidate([3, 8, 1, 9, 3, 11], 2) == True
    assert candidate([6, 13, 1, 1, 6, 19], 5) == True
    assert candidate([2, 6, 2, 1, 4, 16], 5) == True
    assert candidate([1, 7, 4, 3, 3, 13], 4) == True
    assert candidate([1, 12, 8, 8, 8, 16], 1) == False
    assert candidate([7, 7, 8, 5, 6, 10], 3) == True
    assert candidate([1, 5, 1, 3, 8, 17], 2) == True
    assert candidate([5, 9, 4, 5, 7, 18], 4) == True
    assert candidate([2, 15, 3, 6, 6, 11], 5) == True
    assert candidate([4, 10, 8, 6, 4, 20], 5) == True
    assert candidate([1, 15, 1, 6, 2, 11], 4) == True
    assert candidate([7, 11, 7, 7, 7, 14], 3) == True
    assert candidate([5, 15, 2, 9, 2, 13], 4) == True
    assert candidate([1, 13, 8, 6, 7, 14], 2) == True
    assert candidate([3, 15, 6, 2, 7, 20], 2) == True
    assert candidate([7, 7, 4, 8, 8, 18], 1) == True

if __name__ == '__main__':
    check(check_min_heap)