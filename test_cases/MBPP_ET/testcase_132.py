from case_MBPP_132 import swap_numbers


def check(candidate):
    assert candidate(10,20)==(20,10)
    assert candidate(15,17)==(17,15)
    assert candidate(100,200)==(200,100)
    assert candidate(9, 18) == (18, 9)
    assert candidate(9, 18) == (18, 9)
    assert candidate(5, 24) == (24, 5)
    assert candidate(9, 24) == (24, 9)
    assert candidate(12, 17) == (17, 12)
    assert candidate(15, 21) == (21, 15)
    assert candidate(5, 22) == (22, 5)
    assert candidate(5, 18) == (18, 5)
    assert candidate(15, 16) == (16, 15)
    assert candidate(13, 21) == (21, 13)
    assert candidate(8, 21) == (21, 8)
    assert candidate(11, 23) == (23, 11)
    assert candidate(15, 24) == (24, 15)
    assert candidate(9, 20) == (20, 9)
    assert candidate(10, 22) == (22, 10)
    assert candidate(8, 15) == (15, 8)
    assert candidate(10, 20) == (20, 10)
    assert candidate(11, 17) == (17, 11)
    assert candidate(6, 18) == (18, 6)
    assert candidate(13, 23) == (23, 13)
    assert candidate(15, 24) == (24, 15)
    assert candidate(6, 24) == (24, 6)
    assert candidate(6, 23) == (23, 6)
    assert candidate(12, 23) == (23, 12)
    assert candidate(13, 24) == (24, 13)
    assert candidate(12, 24) == (24, 12)
    assert candidate(8, 21) == (21, 8)
    assert candidate(6, 24) == (24, 6)
    assert candidate(7, 24) == (24, 7)
    assert candidate(10, 20) == (20, 10)
    assert candidate(10, 16) == (16, 10)
    assert candidate(5, 16) == (16, 5)
    assert candidate(7, 23) == (23, 7)
    assert candidate(10, 22) == (22, 10)
    assert candidate(17, 14) == (14, 17)
    assert candidate(17, 19) == (19, 17)
    assert candidate(10, 18) == (18, 10)
    assert candidate(16, 18) == (18, 16)
    assert candidate(18, 18) == (18, 18)
    assert candidate(19, 16) == (16, 19)
    assert candidate(15, 12) == (12, 15)
    assert candidate(12, 13) == (13, 12)
    assert candidate(12, 16) == (16, 12)
    assert candidate(19, 12) == (12, 19)
    assert candidate(15, 21) == (21, 15)
    assert candidate(20, 21) == (21, 20)
    assert candidate(14, 14) == (14, 14)
    assert candidate(15, 15) == (15, 15)
    assert candidate(11, 17) == (17, 11)
    assert candidate(20, 18) == (18, 20)
    assert candidate(18, 13) == (13, 18)
    assert candidate(14, 21) == (21, 14)
    assert candidate(11, 13) == (13, 11)
    assert candidate(14, 15) == (15, 14)
    assert candidate(11, 21) == (21, 11)
    assert candidate(17, 17) == (17, 17)
    assert candidate(14, 12) == (12, 14)
    assert candidate(15, 19) == (19, 15)
    assert candidate(19, 18) == (18, 19)
    assert candidate(17, 22) == (22, 17)
    assert candidate(14, 22) == (22, 14)
    assert candidate(14, 18) == (18, 14)
    assert candidate(10, 17) == (17, 10)
    assert candidate(15, 18) == (18, 15)
    assert candidate(14, 15) == (15, 14)
    assert candidate(13, 22) == (22, 13)
    assert candidate(102, 198) == (198, 102)
    assert candidate(104, 196) == (196, 104)
    assert candidate(98, 195) == (195, 98)
    assert candidate(96, 199) == (199, 96)
    assert candidate(100, 201) == (201, 100)
    assert candidate(95, 197) == (197, 95)
    assert candidate(95, 201) == (201, 95)
    assert candidate(96, 201) == (201, 96)
    assert candidate(98, 205) == (205, 98)
    assert candidate(105, 202) == (202, 105)
    assert candidate(95, 202) == (202, 95)
    assert candidate(98, 199) == (199, 98)
    assert candidate(101, 195) == (195, 101)
    assert candidate(104, 196) == (196, 104)
    assert candidate(101, 205) == (205, 101)
    assert candidate(101, 202) == (202, 101)
    assert candidate(100, 198) == (198, 100)
    assert candidate(101, 195) == (195, 101)
    assert candidate(99, 195) == (195, 99)
    assert candidate(101, 203) == (203, 101)
    assert candidate(95, 199) == (199, 95)
    assert candidate(96, 197) == (197, 96)
    assert candidate(103, 205) == (205, 103)
    assert candidate(97, 201) == (201, 97)
    assert candidate(105, 197) == (197, 105)
    assert candidate(96, 198) == (198, 96)
    assert candidate(95, 195) == (195, 95)
    assert candidate(102, 197) == (197, 102)
    assert candidate(95, 200) == (200, 95)
    assert candidate(97, 203) == (203, 97)
    assert candidate(96, 199) == (199, 96)
    assert candidate(99, 195) == (195, 99)
    assert candidate(102, 200) == (200, 102)

if __name__ == '__main__':
    check(swap_numbers)