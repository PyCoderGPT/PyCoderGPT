from case_MBPP_154 import sub_list


def check(candidate):
    assert candidate([1, 2, 3],[4,5,6])==[-3,-3,-3]
    assert candidate([1,2],[3,4])==[-2,-2]
    assert candidate([90,120],[50,70])==[40,50]
    assert candidate([2, 2, 6], [4, 1, 3]) == [-2, 1, 3]
    assert candidate([1, 5, 3], [5, 6, 7]) == [-4, -1, -4]
    assert candidate([3, 5, 4], [6, 3, 3]) == [-3, 2, 1]
    assert candidate([1, 2, 2], [7, 9, 6]) == [-6, -7, -4]
    assert candidate([5, 1, 3], [7, 1, 5]) == [-2, 0, -2]
    assert candidate([3, 2, 7], [6, 3, 4]) == [-3, -1, 3]
    assert candidate([5, 7, 1], [3, 3, 2]) == [2, 4, -1]
    assert candidate([4, 2, 8], [7, 1, 6]) == [-3, 1, 2]
    assert candidate([1, 7, 7], [1, 7, 3]) == [0, 0, 4]
    assert candidate([1, 2, 8], [4, 9, 3]) == [-3, -7, 5]
    assert candidate([3, 6, 1], [8, 3, 9]) == [-5, 3, -8]
    assert candidate([2, 1, 4], [6, 1, 9]) == [-4, 0, -5]
    assert candidate([3, 1, 3], [3, 9, 9]) == [0, -8, -6]
    assert candidate([2, 2, 3], [2, 7, 11]) == [0, -5, -8]
    assert candidate([5, 1, 1], [2, 10, 4]) == [3, -9, -3]
    assert candidate([6, 6, 2], [1, 8, 11]) == [5, -2, -9]
    assert candidate([1, 1, 3], [5, 1, 9]) == [-4, 0, -6]
    assert candidate([3, 3, 8], [1, 7, 8]) == [2, -4, 0]
    assert candidate([1, 6, 7], [4, 1, 9]) == [-3, 5, -2]
    assert candidate([1, 2, 2], [9, 8, 6]) == [-8, -6, -4]
    assert candidate([6, 7, 4], [1, 9, 6]) == [5, -2, -2]
    assert candidate([3, 3, 8], [9, 5, 8]) == [-6, -2, 0]
    assert candidate([5, 6, 7], [2, 2, 9]) == [3, 4, -2]
    assert candidate([5, 6, 7], [5, 5, 6]) == [0, 1, 1]
    assert candidate([1, 2, 2], [3, 1, 2]) == [-2, 1, 0]
    assert candidate([2, 7, 7], [2, 9, 2]) == [0, -2, 5]
    assert candidate([3, 7, 8], [5, 9, 11]) == [-2, -2, -3]
    assert candidate([2, 6, 4], [3, 1, 4]) == [-1, 5, 0]
    assert candidate([6, 2, 6], [4, 7, 7]) == [2, -5, -1]
    assert candidate([1, 6, 2], [9, 1, 6]) == [-8, 5, -4]
    assert candidate([1, 5, 7], [1, 5, 2]) == [0, 0, 5]
    assert candidate([1, 2, 7], [8, 5, 3]) == [-7, -3, 4]
    assert candidate([2, 7, 1], [5, 5, 8]) == [-3, 2, -7]
    assert candidate([5, 6], [4, 8]) == [1, -2]
    assert candidate([2, 6], [3, 9]) == [-1, -3]
    assert candidate([5, 3], [6, 2]) == [-1, 1]
    assert candidate([3, 5], [3, 5]) == [0, 0]
    assert candidate([4, 6], [3, 6]) == [1, 0]
    assert candidate([6, 3], [7, 6]) == [-1, -3]
    assert candidate([3, 2], [2, 6]) == [1, -4]
    assert candidate([4, 6], [1, 1]) == [3, 5]
    assert candidate([1, 2], [1, 1]) == [0, 1]
    assert candidate([1, 3], [6, 8]) == [-5, -5]
    assert candidate([2, 2], [7, 6]) == [-5, -4]
    assert candidate([1, 6], [3, 6]) == [-2, 0]
    assert candidate([3, 2], [3, 7]) == [0, -5]
    assert candidate([2, 2], [4, 1]) == [-2, 1]
    assert candidate([3, 2], [7, 7]) == [-4, -5]
    assert candidate([4, 7], [8, 8]) == [-4, -1]
    assert candidate([3, 6], [1, 6]) == [2, 0]
    assert candidate([1, 7], [1, 6]) == [0, 1]
    assert candidate([3, 3], [4, 7]) == [-1, -4]
    assert candidate([3, 2], [8, 6]) == [-5, -4]
    assert candidate([4, 1], [6, 2]) == [-2, -1]
    assert candidate([6, 2], [6, 9]) == [0, -7]
    assert candidate([2, 4], [2, 2]) == [0, 2]
    assert candidate([3, 4], [5, 4]) == [-2, 0]
    assert candidate([3, 7], [3, 8]) == [0, -1]
    assert candidate([2, 5], [1, 3]) == [1, 2]
    assert candidate([4, 6], [4, 2]) == [0, 4]
    assert candidate([5, 6], [3, 4]) == [2, 2]
    assert candidate([1, 6], [3, 9]) == [-2, -3]
    assert candidate([6, 3], [3, 2]) == [3, 1]
    assert candidate([2, 1], [5, 9]) == [-3, -8]
    assert candidate([5, 1], [5, 5]) == [0, -4]
    assert candidate([4, 6], [7, 7]) == [-3, -1]
    assert candidate([88, 120], [55, 65]) == [33, 55]
    assert candidate([85, 121], [45, 71]) == [40, 50]
    assert candidate([92, 125], [46, 74]) == [46, 51]
    assert candidate([93, 115], [50, 68]) == [43, 47]
    assert candidate([90, 116], [45, 72]) == [45, 44]
    assert candidate([88, 119], [51, 67]) == [37, 52]
    assert candidate([91, 121], [47, 74]) == [44, 47]
    assert candidate([94, 118], [53, 71]) == [41, 47]
    assert candidate([89, 119], [51, 65]) == [38, 54]
    assert candidate([85, 124], [48, 72]) == [37, 52]
    assert candidate([89, 124], [53, 67]) == [36, 57]
    assert candidate([90, 118], [50, 67]) == [40, 51]
    assert candidate([85, 123], [54, 70]) == [31, 53]
    assert candidate([85, 118], [48, 75]) == [37, 43]
    assert candidate([91, 122], [45, 73]) == [46, 49]
    assert candidate([90, 115], [47, 71]) == [43, 44]
    assert candidate([89, 125], [55, 70]) == [34, 55]
    assert candidate([89, 115], [50, 71]) == [39, 44]
    assert candidate([94, 119], [45, 75]) == [49, 44]
    assert candidate([89, 117], [46, 68]) == [43, 49]
    assert candidate([90, 118], [54, 67]) == [36, 51]
    assert candidate([90, 118], [53, 70]) == [37, 48]
    assert candidate([88, 125], [54, 69]) == [34, 56]
    assert candidate([92, 115], [49, 71]) == [43, 44]
    assert candidate([86, 119], [50, 71]) == [36, 48]
    assert candidate([85, 119], [48, 67]) == [37, 52]
    assert candidate([93, 122], [54, 69]) == [39, 53]
    assert candidate([93, 119], [49, 74]) == [44, 45]
    assert candidate([88, 123], [46, 67]) == [42, 56]
    assert candidate([90, 116], [50, 73]) == [40, 43]
    assert candidate([93, 120], [46, 68]) == [47, 52]
    assert candidate([85, 116], [53, 69]) == [32, 47]
    assert candidate([86, 123], [46, 75]) == [40, 48]

if __name__ == '__main__':
    check(sub_list)