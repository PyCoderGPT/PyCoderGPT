from case_MBPP_120 import next_Perfect_Square


def check(candidate):
    assert candidate(35) == 36
    assert candidate(6) == 9
    assert candidate(9) == 16
    assert candidate(37) == 49
    assert candidate(37) == 49
    assert candidate(33) == 36
    assert candidate(33) == 36
    assert candidate(33) == 36
    assert candidate(35) == 36
    assert candidate(34) == 36
    assert candidate(39) == 49
    assert candidate(32) == 36
    assert candidate(31) == 36
    assert candidate(37) == 49
    assert candidate(31) == 36
    assert candidate(35) == 36
    assert candidate(39) == 49
    assert candidate(34) == 36
    assert candidate(38) == 49
    assert candidate(36) == 49
    assert candidate(32) == 36
    assert candidate(32) == 36
    assert candidate(36) == 49
    assert candidate(38) == 49
    assert candidate(31) == 36
    assert candidate(31) == 36
    assert candidate(34) == 36
    assert candidate(33) == 36
    assert candidate(31) == 36
    assert candidate(31) == 36
    assert candidate(32) == 36
    assert candidate(40) == 49
    assert candidate(30) == 36
    assert candidate(37) == 49
    assert candidate(35) == 36
    assert candidate(37) == 49
    assert candidate(6) == 9
    assert candidate(6) == 9
    assert candidate(11) == 16
    assert candidate(3) == 4
    assert candidate(7) == 9
    assert candidate(2) == 4
    assert candidate(2) == 4
    assert candidate(5) == 9
    assert candidate(2) == 4
    assert candidate(7) == 9
    assert candidate(3) == 4
    assert candidate(1) == 4
    assert candidate(11) == 16
    assert candidate(9) == 16
    assert candidate(9) == 16
    assert candidate(2) == 4
    assert candidate(10) == 16
    assert candidate(4) == 9
    assert candidate(7) == 9
    assert candidate(8) == 9
    assert candidate(7) == 9
    assert candidate(7) == 9
    assert candidate(8) == 9
    assert candidate(11) == 16
    assert candidate(5) == 9
    assert candidate(1) == 4
    assert candidate(10) == 16
    assert candidate(11) == 16
    assert candidate(7) == 9
    assert candidate(4) == 9
    assert candidate(7) == 9
    assert candidate(2) == 4
    assert candidate(9) == 16
    assert candidate(14) == 16
    assert candidate(9) == 16
    assert candidate(14) == 16
    assert candidate(6) == 9
    assert candidate(12) == 16
    assert candidate(14) == 16
    assert candidate(11) == 16
    assert candidate(6) == 9
    assert candidate(9) == 16
    assert candidate(5) == 9
    assert candidate(7) == 9
    assert candidate(5) == 9
    assert candidate(14) == 16
    assert candidate(6) == 9
    assert candidate(11) == 16
    assert candidate(13) == 16
    assert candidate(4) == 9
    assert candidate(13) == 16
    assert candidate(4) == 9
    assert candidate(11) == 16
    assert candidate(5) == 9
    assert candidate(13) == 16
    assert candidate(7) == 9
    assert candidate(4) == 9
    assert candidate(6) == 9
    assert candidate(9) == 16
    assert candidate(7) == 9
    assert candidate(14) == 16
    assert candidate(7) == 9
    assert candidate(11) == 16
    assert candidate(4) == 9
    assert candidate(13) == 16
    assert candidate(6) == 9

if __name__ == '__main__':
    check(next_Perfect_Square)