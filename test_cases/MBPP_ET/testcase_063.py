from case_MBPP_063 import common_in_nested_lists


def check(candidate):
    assert candidate([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8, 12, 15, 16, 18]])==[18, 12]
    assert candidate([[12, 5, 23, 25, 45], [7, 11, 5, 23, 28], [1, 5, 8, 18, 23, 16]])==[5,23]
    assert candidate([[2, 3,4, 1], [4, 5], [6,4, 8],[4, 5], [6, 8,4]])==[4]
    assert candidate([[8, 21, 23, 26, 44], [3, 14, 23, 25, 27], [2, 7, 12, 9, 13, 16, 22]]) == []
    assert candidate([[10, 15, 27, 29, 43], [4, 12, 19, 28, 25], [4, 10, 9, 8, 10, 16, 22]]) == []
    assert candidate([[10, 21, 21, 25, 45], [4, 7, 14, 25, 27], [4, 4, 9, 9, 19, 15, 22]]) == []
    assert candidate([[12, 18, 28, 22, 48], [8, 15, 19, 24, 25], [5, 10, 4, 11, 18, 12, 14]]) == []
    assert candidate([[17, 13, 28, 30, 42], [8, 15, 14, 24, 33], [3, 1, 5, 10, 16, 13, 15]]) == []
    assert candidate([[12, 17, 25, 23, 42], [3, 13, 15, 27, 26], [1, 4, 4, 8, 12, 13, 13]]) == []
    assert candidate([[12, 22, 26, 21, 43], [7, 7, 20, 26, 25], [6, 2, 11, 13, 20, 16, 15]]) == []
    assert candidate([[8, 15, 22, 23, 47], [7, 16, 18, 28, 23], [5, 7, 12, 17, 11, 16, 13]]) == []
    assert candidate([[13, 19, 22, 24, 44], [10, 8, 15, 25, 25], [3, 5, 12, 16, 16, 21, 17]]) == []
    assert candidate([[8, 23, 22, 28, 40], [5, 15, 16, 24, 32], [2, 5, 12, 17, 20, 11, 13]]) == []
    assert candidate([[15, 22, 21, 22, 47], [4, 7, 21, 23, 26], [3, 4, 5, 15, 12, 11, 15]]) == []
    assert candidate([[11, 15, 23, 29, 42], [3, 13, 15, 21, 27], [4, 7, 12, 12, 10, 13, 21]]) == []
    assert candidate([[16, 23, 21, 22, 47], [9, 7, 20, 28, 25], [3, 3, 7, 11, 13, 18, 22]]) == []
    assert candidate([[10, 23, 23, 30, 49], [6, 15, 17, 22, 23], [1, 5, 7, 14, 20, 20, 22]]) == []
    assert candidate([[9, 17, 20, 27, 50], [11, 15, 14, 19, 31], [6, 10, 11, 15, 11, 14, 17]]) == []
    assert candidate([[8, 17, 18, 25, 50], [8, 9, 20, 22, 32], [2, 3, 7, 7, 12, 21, 21]]) == []
    assert candidate([[10, 19, 26, 29, 43], [5, 16, 17, 21, 27], [3, 1, 5, 16, 16, 11, 14]]) == []
    assert candidate([[9, 18, 18, 24, 44], [3, 14, 23, 23, 23], [6, 1, 3, 14, 13, 18, 19]]) == []
    assert candidate([[8, 13, 27, 25, 41], [7, 10, 15, 25, 23], [1, 10, 7, 8, 14, 20, 21]]) == []
    assert candidate([[13, 17, 19, 26, 44], [10, 9, 21, 29, 29], [6, 4, 6, 17, 11, 16, 20]]) == []
    assert candidate([[9, 19, 20, 23, 46], [4, 7, 21, 27, 29], [1, 3, 13, 9, 20, 17, 13]]) == []
    assert candidate([[11, 15, 24, 24, 40], [9, 8, 16, 19, 32], [5, 9, 3, 14, 19, 14, 18]]) == []
    assert candidate([[12, 17, 24, 20, 45], [12, 16, 21, 23, 24], [4, 8, 12, 15, 13, 11, 16]]) == [12]
    assert candidate([[14, 14, 27, 22, 46], [8, 13, 14, 29, 29], [5, 9, 12, 8, 10, 14, 15]]) == [14]
    assert candidate([[13, 16, 18, 25, 46], [12, 17, 23, 27, 33], [2, 1, 11, 11, 15, 19, 15]]) == []
    assert candidate([[9, 19, 28, 29, 41], [11, 8, 18, 20, 28], [6, 6, 13, 16, 14, 20, 17]]) == []
    assert candidate([[8, 13, 24, 27, 50], [8, 16, 15, 20, 24], [2, 5, 3, 17, 18, 12, 21]]) == []
    assert candidate([[16, 15, 21, 25, 46], [5, 8, 19, 19, 32], [6, 9, 6, 13, 10, 12, 23]]) == []
    assert candidate([[15, 19, 27, 20, 42], [12, 9, 22, 19, 23], [5, 1, 7, 17, 17, 15, 13]]) == []
    assert candidate([[16, 23, 21, 22, 43], [7, 13, 17, 21, 29], [5, 4, 7, 13, 18, 13, 23]]) == []
    assert candidate([[7, 21, 23, 29, 46], [4, 15, 22, 28, 32], [6, 4, 5, 9, 20, 12, 20]]) == []
    assert candidate([[8, 16, 28, 20, 48], [3, 14, 23, 23, 25], [6, 5, 6, 15, 12, 15, 17]]) == []
    assert candidate([[11, 20, 19, 20, 42], [8, 14, 21, 21, 33], [1, 5, 6, 9, 11, 12, 19]]) == []
    assert candidate([[14, 4, 23, 30, 50], [10, 7, 8, 26, 31], [2, 6, 10, 20, 25, 11]]) == []
    assert candidate([[13, 7, 19, 20, 50], [2, 12, 1, 23, 23], [6, 8, 12, 18, 25, 14]]) == []
    assert candidate([[10, 6, 28, 26, 45], [8, 14, 9, 24, 27], [3, 3, 8, 20, 25, 20]]) == []
    assert candidate([[13, 8, 18, 30, 50], [2, 10, 7, 20, 24], [1, 5, 4, 22, 22, 18]]) == []
    assert candidate([[13, 9, 26, 25, 45], [11, 14, 9, 27, 27], [6, 10, 11, 14, 26, 16]]) == []
    assert candidate([[9, 10, 25, 24, 49], [8, 10, 10, 26, 29], [1, 2, 3, 16, 27, 20]]) == []
    assert candidate([[7, 4, 27, 20, 42], [10, 10, 8, 22, 30], [6, 9, 11, 13, 22, 19]]) == []
    assert candidate([[17, 9, 26, 27, 49], [2, 10, 2, 19, 33], [1, 1, 11, 22, 28, 11]]) == []
    assert candidate([[16, 3, 24, 23, 50], [12, 12, 7, 24, 30], [5, 5, 12, 17, 18, 15]]) == []
    assert candidate([[7, 6, 20, 22, 50], [8, 14, 3, 25, 27], [2, 10, 7, 20, 26, 11]]) == []
    assert candidate([[8, 9, 26, 26, 43], [3, 10, 9, 28, 24], [1, 1, 11, 13, 20, 18]]) == []
    assert candidate([[11, 8, 27, 30, 40], [6, 6, 9, 21, 25], [1, 4, 11, 17, 24, 14]]) == []
    assert candidate([[11, 9, 19, 24, 45], [3, 14, 5, 27, 29], [1, 3, 9, 17, 19, 20]]) == []
    assert candidate([[15, 9, 25, 23, 40], [10, 10, 5, 28, 27], [6, 10, 6, 14, 25, 17]]) == []
    assert candidate([[11, 7, 18, 20, 45], [4, 13, 4, 28, 25], [3, 6, 9, 19, 18, 19]]) == []
    assert candidate([[9, 7, 18, 23, 47], [6, 9, 10, 27, 25], [5, 1, 7, 19, 25, 20]]) == []
    assert candidate([[15, 7, 28, 30, 49], [12, 6, 10, 27, 30], [4, 2, 5, 13, 24, 21]]) == []
    assert candidate([[13, 3, 21, 22, 40], [4, 7, 5, 25, 25], [4, 1, 4, 21, 19, 16]]) == []
    assert candidate([[11, 9, 24, 24, 48], [12, 6, 5, 27, 31], [5, 2, 5, 21, 24, 18]]) == []
    assert candidate([[16, 3, 23, 30, 50], [11, 8, 9, 19, 23], [4, 1, 10, 19, 26, 16]]) == []
    assert candidate([[9, 2, 25, 25, 48], [5, 14, 6, 24, 26], [6, 4, 9, 15, 20, 21]]) == []
    assert candidate([[16, 5, 19, 25, 49], [10, 13, 8, 19, 25], [4, 2, 7, 21, 24, 16]]) == []
    assert candidate([[8, 8, 24, 29, 48], [11, 8, 1, 19, 29], [4, 3, 5, 18, 22, 11]]) == []
    assert candidate([[8, 10, 20, 22, 45], [11, 10, 10, 26, 32], [2, 8, 4, 13, 19, 19]]) == []
    assert candidate([[8, 5, 19, 29, 44], [5, 7, 4, 24, 29], [1, 3, 13, 13, 22, 13]]) == []
    assert candidate([[7, 7, 28, 27, 46], [2, 6, 7, 28, 27], [2, 7, 7, 19, 20, 21]]) == [7]
    assert candidate([[15, 8, 21, 29, 43], [12, 6, 8, 20, 26], [1, 8, 13, 22, 28, 11]]) == [8]
    assert candidate([[13, 8, 28, 25, 50], [3, 10, 1, 21, 25], [6, 9, 12, 20, 26, 21]]) == []
    assert candidate([[11, 7, 25, 21, 49], [7, 15, 4, 20, 32], [5, 9, 7, 16, 26, 13]]) == [7]
    assert candidate([[10, 1, 18, 25, 40], [11, 8, 3, 24, 30], [5, 6, 8, 13, 27, 20]]) == []
    assert candidate([[14, 6, 20, 29, 49], [9, 16, 9, 22, 30], [4, 9, 13, 19, 19, 18]]) == []
    assert candidate([[14, 5, 26, 27, 45], [5, 9, 1, 27, 30], [1, 5, 13, 23, 21, 18]]) == [5]
    assert candidate([[14, 1, 26, 29, 40], [8, 6, 6, 27, 31], [6, 3, 11, 14, 28, 21]]) == []
    assert candidate([[1, 4, 2, 1], [6, 7], [8, 8, 6], [8, 9], [6, 3, 3]]) == []
    assert candidate([[5, 8, 9, 5], [3, 2], [8, 8, 4], [8, 10], [11, 10, 2]]) == []
    assert candidate([[6, 7, 1, 4], [2, 5], [3, 8, 13], [5, 10], [10, 3, 2]]) == []
    assert candidate([[3, 8, 8, 2], [7, 2], [4, 8, 12], [5, 2], [7, 5, 7]]) == []
    assert candidate([[6, 2, 1, 4], [5, 7], [1, 9, 13], [3, 7], [5, 9, 7]]) == []
    assert candidate([[7, 6, 3, 4], [7, 3], [3, 4, 7], [7, 2], [10, 12, 6]]) == []
    assert candidate([[1, 3, 2, 5], [5, 6], [9, 9, 12], [7, 9], [10, 7, 6]]) == []
    assert candidate([[1, 4, 5, 3], [2, 4], [4, 2, 4], [1, 6], [1, 7, 4]]) == []
    assert candidate([[6, 6, 7, 3], [7, 1], [6, 8, 7], [9, 9], [6, 12, 5]]) == []
    assert candidate([[3, 1, 3, 1], [9, 8], [2, 1, 12], [9, 1], [6, 9, 5]]) == []
    assert candidate([[7, 3, 7, 4], [3, 7], [6, 1, 10], [1, 10], [10, 9, 3]]) == []
    assert candidate([[4, 3, 2, 1], [3, 1], [7, 9, 13], [6, 9], [9, 7, 6]]) == []
    assert candidate([[2, 3, 8, 5], [9, 9], [6, 2, 10], [9, 3], [2, 12, 5]]) == []
    assert candidate([[5, 1, 7, 4], [2, 1], [3, 1, 11], [5, 9], [3, 10, 2]]) == []
    assert candidate([[7, 8, 4, 6], [2, 10], [3, 1, 8], [4, 4], [9, 3, 8]]) == []
    assert candidate([[5, 6, 7, 1], [8, 8], [8, 6, 12], [1, 9], [1, 5, 5]]) == []
    assert candidate([[7, 5, 4, 1], [9, 2], [2, 6, 11], [1, 3], [10, 8, 2]]) == []
    assert candidate([[2, 8, 9, 6], [1, 7], [1, 1, 6], [7, 9], [11, 11, 2]]) == []
    assert candidate([[1, 2, 5, 3], [9, 1], [10, 6, 9], [8, 8], [8, 7, 3]]) == []
    assert candidate([[2, 5, 5, 2], [1, 6], [6, 8, 9], [2, 6], [1, 5, 4]]) == []
    assert candidate([[4, 2, 5, 6], [4, 3], [2, 6, 7], [7, 1], [1, 11, 7]]) == []
    assert candidate([[7, 2, 2, 3], [9, 10], [1, 3, 11], [6, 4], [9, 3, 9]]) == []
    assert candidate([[1, 7, 6, 2], [8, 7], [11, 7, 4], [7, 7], [7, 9, 8]]) == [7]
    assert candidate([[2, 2, 8, 4], [2, 7], [4, 2, 6], [2, 7], [8, 8, 6]]) == []
    assert candidate([[3, 8, 9, 6], [5, 4], [7, 9, 12], [6, 7], [4, 5, 3]]) == []
    assert candidate([[3, 6, 4, 1], [9, 8], [3, 7, 13], [3, 5], [11, 11, 4]]) == []
    assert candidate([[7, 1, 6, 4], [3, 4], [11, 1, 7], [2, 3], [5, 8, 3]]) == []
    assert candidate([[6, 6, 1, 6], [9, 6], [9, 2, 3], [9, 6], [10, 6, 4]]) == []
    assert candidate([[4, 3, 6, 2], [1, 9], [8, 5, 6], [2, 3], [5, 11, 3]]) == []
    assert candidate([[4, 5, 2, 6], [5, 3], [2, 4, 4], [6, 6], [9, 13, 3]]) == []
    assert candidate([[2, 4, 3, 5], [5, 7], [3, 2, 4], [1, 7], [7, 12, 1]]) == []
    assert candidate([[7, 3, 7, 6], [9, 10], [3, 2, 9], [6, 6], [1, 4, 6]]) == []
    assert candidate([[2, 4, 5, 2], [7, 10], [4, 9, 3], [7, 8], [9, 7, 4]]) == []

if __name__ == '__main__':
    check(common_in_nested_lists)