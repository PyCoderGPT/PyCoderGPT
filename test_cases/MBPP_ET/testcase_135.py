from case_MBPP_135 import division_elements


def check(candidate):
    assert candidate((10, 4, 6, 9),(5, 2, 3, 3)) == (2, 2, 2, 3)
    assert candidate((12, 6, 8, 16),(6, 3, 4, 4)) == (2, 2, 2, 4)
    assert candidate((20, 14, 36, 18),(5, 7, 6, 9)) == (4, 2, 6, 2)
    assert candidate((13, 9, 11, 13), (7, 2, 7, 8)) == (1, 4, 1, 1)
    assert candidate((7, 1, 1, 8), (6, 3, 7, 5)) == (1, 0, 0, 1)
    assert candidate((6, 1, 6, 6), (8, 7, 3, 8)) == (0, 0, 2, 0)
    assert candidate((10, 1, 4, 4), (2, 4, 8, 7)) == (5, 0, 0, 0)
    assert candidate((14, 5, 6, 12), (1, 2, 2, 2)) == (14, 2, 3, 6)
    assert candidate((7, 2, 9, 4), (8, 3, 1, 7)) == (0, 0, 9, 0)
    assert candidate((7, 1, 10, 11), (5, 7, 5, 6)) == (1, 0, 2, 1)
    assert candidate((14, 6, 8, 6), (8, 4, 4, 4)) == (1, 1, 2, 1)
    assert candidate((11, 2, 3, 6), (6, 6, 6, 1)) == (1, 0, 0, 6)
    assert candidate((15, 7, 7, 13), (8, 3, 7, 4)) == (1, 2, 1, 3)
    assert candidate((12, 8, 4, 5), (8, 5, 2, 4)) == (1, 1, 2, 1)
    assert candidate((7, 1, 3, 5), (7, 5, 4, 8)) == (1, 0, 0, 0)
    assert candidate((6, 3, 4, 7), (6, 4, 2, 2)) == (1, 0, 2, 3)
    assert candidate((15, 5, 6, 13), (5, 4, 4, 6)) == (3, 1, 1, 2)
    assert candidate((9, 9, 11, 14), (9, 4, 4, 1)) == (1, 2, 2, 14)
    assert candidate((13, 2, 9, 12), (5, 6, 7, 1)) == (2, 0, 1, 12)
    assert candidate((6, 7, 5, 11), (5, 4, 3, 7)) == (1, 1, 1, 1)
    assert candidate((7, 1, 4, 11), (2, 4, 7, 7)) == (3, 0, 0, 1)
    assert candidate((13, 6, 4, 9), (3, 7, 7, 6)) == (4, 0, 0, 1)
    assert candidate((12, 9, 4, 9), (6, 2, 7, 2)) == (2, 4, 0, 4)
    assert candidate((7, 4, 9, 5), (4, 1, 8, 4)) == (1, 4, 1, 1)
    assert candidate((14, 5, 6, 9), (8, 7, 4, 5)) == (1, 0, 1, 1)
    assert candidate((7, 4, 7, 14), (1, 1, 3, 4)) == (7, 4, 2, 3)
    assert candidate((7, 6, 3, 14), (6, 5, 4, 1)) == (1, 1, 0, 14)
    assert candidate((13, 7, 3, 8), (6, 4, 8, 2)) == (2, 1, 0, 4)
    assert candidate((5, 2, 3, 9), (4, 7, 7, 6)) == (1, 0, 0, 1)
    assert candidate((14, 8, 9, 14), (5, 2, 1, 3)) == (2, 4, 9, 4)
    assert candidate((15, 2, 11, 10), (5, 1, 7, 7)) == (3, 2, 1, 1)
    assert candidate((11, 5, 6, 6), (9, 2, 2, 5)) == (1, 2, 3, 1)
    assert candidate((13, 9, 10, 13), (9, 7, 2, 6)) == (1, 1, 5, 2)
    assert candidate((12, 7, 1, 11), (5, 4, 5, 3)) == (2, 1, 0, 3)
    assert candidate((8, 7, 6, 9), (2, 4, 3, 8)) == (4, 1, 2, 1)
    assert candidate((8, 1, 4, 14), (1, 5, 7, 5)) == (8, 0, 0, 2)
    assert candidate((16, 11, 4, 17), (8, 5, 9, 2)) == (2, 2, 0, 8)
    assert candidate((13, 7, 10, 17), (5, 3, 7, 9)) == (2, 2, 1, 1)
    assert candidate((12, 2, 13, 19), (1, 6, 4, 5)) == (12, 0, 3, 3)
    assert candidate((7, 1, 6, 11), (11, 2, 7, 7)) == (0, 0, 0, 1)
    assert candidate((13, 5, 8, 21), (1, 4, 2, 7)) == (13, 1, 4, 3)
    assert candidate((9, 9, 5, 12), (2, 1, 7, 6)) == (4, 9, 0, 2)
    assert candidate((14, 4, 11, 20), (10, 8, 1, 9)) == (1, 0, 11, 2)
    assert candidate((10, 5, 3, 17), (4, 1, 3, 8)) == (2, 5, 1, 2)
    assert candidate((12, 2, 11, 19), (3, 4, 7, 7)) == (4, 0, 1, 2)
    assert candidate((8, 10, 8, 17), (10, 4, 1, 3)) == (0, 2, 8, 5)
    assert candidate((11, 2, 9, 14), (10, 5, 1, 7)) == (1, 0, 9, 2)
    assert candidate((15, 11, 7, 18), (10, 7, 6, 7)) == (1, 1, 1, 2)
    assert candidate((8, 6, 6, 16), (7, 4, 2, 4)) == (1, 1, 3, 4)
    assert candidate((11, 2, 3, 12), (3, 8, 3, 2)) == (3, 0, 1, 6)
    assert candidate((7, 5, 12, 11), (10, 4, 2, 7)) == (0, 1, 6, 1)
    assert candidate((7, 7, 9, 14), (11, 7, 7, 9)) == (0, 1, 1, 1)
    assert candidate((12, 7, 8, 17), (5, 7, 1, 6)) == (2, 1, 8, 2)
    assert candidate((16, 1, 9, 15), (11, 2, 3, 7)) == (1, 0, 3, 2)
    assert candidate((16, 7, 9, 16), (11, 5, 8, 2)) == (1, 1, 1, 8)
    assert candidate((16, 4, 11, 18), (3, 7, 3, 8)) == (5, 0, 3, 2)
    assert candidate((16, 6, 3, 18), (2, 4, 4, 7)) == (8, 1, 0, 2)
    assert candidate((12, 9, 7, 11), (10, 1, 2, 6)) == (1, 9, 3, 1)
    assert candidate((13, 10, 5, 18), (9, 1, 5, 4)) == (1, 10, 1, 4)
    assert candidate((14, 9, 5, 13), (9, 7, 2, 6)) == (1, 1, 2, 2)
    assert candidate((11, 8, 8, 16), (4, 4, 6, 1)) == (2, 2, 1, 16)
    assert candidate((17, 4, 11, 12), (10, 7, 6, 8)) == (1, 0, 1, 1)
    assert candidate((10, 7, 5, 14), (9, 8, 4, 8)) == (1, 0, 1, 1)
    assert candidate((15, 1, 5, 18), (4, 4, 3, 2)) == (3, 0, 1, 9)
    assert candidate((14, 5, 12, 15), (11, 2, 4, 1)) == (1, 2, 3, 15)
    assert candidate((15, 7, 11, 18), (5, 1, 1, 2)) == (3, 7, 11, 9)
    assert candidate((13, 10, 4, 16), (11, 8, 7, 5)) == (1, 1, 0, 3)
    assert candidate((15, 2, 12, 13), (4, 8, 9, 2)) == (3, 0, 1, 6)
    assert candidate((7, 6, 4, 19), (8, 2, 1, 8)) == (0, 3, 4, 2)
    assert candidate((18, 13, 40, 21), (8, 9, 6, 5)) == (2, 1, 6, 4)
    assert candidate((24, 19, 34, 18), (1, 6, 6, 8)) == (24, 3, 5, 2)
    assert candidate((16, 16, 40, 17), (2, 2, 4, 14)) == (8, 8, 10, 1)
    assert candidate((25, 9, 41, 21), (3, 6, 6, 14)) == (8, 1, 6, 1)
    assert candidate((17, 11, 35, 15), (8, 8, 4, 10)) == (2, 1, 8, 1)
    assert candidate((21, 15, 35, 21), (10, 5, 1, 11)) == (2, 3, 35, 1)
    assert candidate((20, 16, 33, 14), (8, 11, 8, 4)) == (2, 1, 4, 3)
    assert candidate((19, 11, 35, 21), (3, 4, 4, 6)) == (6, 2, 8, 3)
    assert candidate((20, 13, 35, 22), (1, 12, 1, 11)) == (20, 1, 35, 2)
    assert candidate((24, 10, 39, 22), (5, 11, 4, 7)) == (4, 0, 9, 3)
    assert candidate((20, 11, 34, 21), (9, 3, 7, 14)) == (2, 3, 4, 1)
    assert candidate((23, 12, 34, 19), (8, 2, 4, 14)) == (2, 6, 8, 1)
    assert candidate((23, 15, 37, 16), (7, 8, 4, 9)) == (3, 1, 9, 1)
    assert candidate((15, 11, 36, 21), (1, 7, 10, 9)) == (15, 1, 3, 2)
    assert candidate((18, 13, 32, 14), (8, 10, 10, 8)) == (2, 1, 3, 1)
    assert candidate((15, 10, 32, 17), (2, 10, 4, 8)) == (7, 1, 8, 2)
    assert candidate((15, 16, 33, 23), (1, 8, 6, 9)) == (15, 2, 5, 2)
    assert candidate((19, 16, 38, 21), (3, 5, 9, 9)) == (6, 3, 4, 2)
    assert candidate((17, 13, 38, 16), (5, 3, 1, 7)) == (3, 4, 38, 2)
    assert candidate((15, 12, 41, 18), (3, 5, 7, 6)) == (5, 2, 5, 3)
    assert candidate((24, 18, 35, 22), (4, 9, 3, 6)) == (6, 2, 11, 3)
    assert candidate((22, 11, 40, 13), (8, 3, 7, 7)) == (2, 3, 5, 1)
    assert candidate((22, 14, 40, 17), (2, 5, 5, 10)) == (11, 2, 8, 1)
    assert candidate((18, 13, 31, 16), (2, 3, 11, 11)) == (9, 4, 2, 1)
    assert candidate((24, 9, 34, 15), (1, 10, 4, 13)) == (24, 0, 8, 1)
    assert candidate((19, 12, 38, 17), (5, 6, 9, 12)) == (3, 2, 4, 1)
    assert candidate((17, 19, 36, 13), (6, 4, 8, 9)) == (2, 4, 4, 1)
    assert candidate((22, 13, 38, 17), (2, 7, 7, 5)) == (11, 1, 5, 3)
    assert candidate((18, 11, 35, 16), (10, 11, 9, 8)) == (1, 1, 3, 2)
    assert candidate((17, 18, 33, 13), (2, 2, 9, 13)) == (8, 9, 3, 1)
    assert candidate((15, 12, 36, 22), (7, 3, 1, 7)) == (2, 4, 36, 3)
    assert candidate((22, 11, 35, 17), (5, 4, 4, 14)) == (4, 2, 8, 1)
    assert candidate((15, 12, 32, 23), (10, 6, 8, 11)) == (1, 2, 4, 2)

if __name__ == '__main__':
    check(division_elements)