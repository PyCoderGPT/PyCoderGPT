from case_MBPP_277 import empty_list


def check(candidate):
    assert candidate(5)==[{},{},{},{},{}]
    assert candidate(6)==[{},{},{},{},{},{}]
    assert candidate(7)==[{},{},{},{},{},{},{}]
    assert candidate(8) == [{}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(7) == [{}, {}, {}, {}, {}, {}, {}]
    assert candidate(10) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(2) == [{}, {}]
    assert candidate(2) == [{}, {}]
    assert candidate(2) == [{}, {}]
    assert candidate(6) == [{}, {}, {}, {}, {}, {}]
    assert candidate(6) == [{}, {}, {}, {}, {}, {}]
    assert candidate(4) == [{}, {}, {}, {}]
    assert candidate(9) == [{}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(7) == [{}, {}, {}, {}, {}, {}, {}]
    assert candidate(3) == [{}, {}, {}]
    assert candidate(3) == [{}, {}, {}]
    assert candidate(6) == [{}, {}, {}, {}, {}, {}]
    assert candidate(8) == [{}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(2) == [{}, {}]
    assert candidate(8) == [{}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(8) == [{}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(3) == [{}, {}, {}]
    assert candidate(9) == [{}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(7) == [{}, {}, {}, {}, {}, {}, {}]
    assert candidate(9) == [{}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(3) == [{}, {}, {}]
    assert candidate(3) == [{}, {}, {}]
    assert candidate(10) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(7) == [{}, {}, {}, {}, {}, {}, {}]
    assert candidate(10) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(7) == [{}, {}, {}, {}, {}, {}, {}]
    assert candidate(7) == [{}, {}, {}, {}, {}, {}, {}]
    assert candidate(10) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(10) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(6) == [{}, {}, {}, {}, {}, {}]
    assert candidate(2) == [{}, {}]
    assert candidate(8) == [{}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(7) == [{}, {}, {}, {}, {}, {}, {}]
    assert candidate(10) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(11) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(10) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(6) == [{}, {}, {}, {}, {}, {}]
    assert candidate(7) == [{}, {}, {}, {}, {}, {}, {}]
    assert candidate(9) == [{}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(10) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(10) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(11) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(6) == [{}, {}, {}, {}, {}, {}]
    assert candidate(1) == [{}]
    assert candidate(11) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(8) == [{}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(1) == [{}]
    assert candidate(10) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(6) == [{}, {}, {}, {}, {}, {}]
    assert candidate(2) == [{}, {}]
    assert candidate(7) == [{}, {}, {}, {}, {}, {}, {}]
    assert candidate(3) == [{}, {}, {}]
    assert candidate(8) == [{}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(2) == [{}, {}]
    assert candidate(6) == [{}, {}, {}, {}, {}, {}]
    assert candidate(5) == [{}, {}, {}, {}, {}]
    assert candidate(7) == [{}, {}, {}, {}, {}, {}, {}]
    assert candidate(1) == [{}]
    assert candidate(5) == [{}, {}, {}, {}, {}]
    assert candidate(10) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(9) == [{}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(1) == [{}]
    assert candidate(1) == [{}]
    assert candidate(7) == [{}, {}, {}, {}, {}, {}, {}]
    assert candidate(7) == [{}, {}, {}, {}, {}, {}, {}]
    assert candidate(11) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(9) == [{}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(5) == [{}, {}, {}, {}, {}]
    assert candidate(8) == [{}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(2) == [{}, {}]
    assert candidate(10) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(9) == [{}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(10) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(4) == [{}, {}, {}, {}]
    assert candidate(7) == [{}, {}, {}, {}, {}, {}, {}]
    assert candidate(5) == [{}, {}, {}, {}, {}]
    assert candidate(3) == [{}, {}, {}]
    assert candidate(2) == [{}, {}]
    assert candidate(5) == [{}, {}, {}, {}, {}]
    assert candidate(2) == [{}, {}]
    assert candidate(5) == [{}, {}, {}, {}, {}]
    assert candidate(8) == [{}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(10) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(9) == [{}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(3) == [{}, {}, {}]
    assert candidate(8) == [{}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(4) == [{}, {}, {}, {}]
    assert candidate(7) == [{}, {}, {}, {}, {}, {}, {}]
    assert candidate(12) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(12) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(4) == [{}, {}, {}, {}]
    assert candidate(6) == [{}, {}, {}, {}, {}, {}]
    assert candidate(7) == [{}, {}, {}, {}, {}, {}, {}]
    assert candidate(3) == [{}, {}, {}]
    assert candidate(11) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(12) == [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
    assert candidate(6) == [{}, {}, {}, {}, {}, {}]

if __name__ == '__main__':
    check(empty_list)