from case_MBPP_324 import get_median


def check(candidate):
    assert candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5) == 16.0
    assert candidate([2, 4, 8, 9], [7, 13, 19, 28], 4) == 8.5
    assert candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6) == 25.0
    assert candidate([1, 17, 13, 24, 41], [1, 10, 21, 28, 50], 4) == 15.0
    assert candidate([6, 12, 18, 22, 33], [4, 10, 18, 25, 50], 6) == 20.0
    assert candidate([3, 15, 10, 31, 34], [2, 12, 22, 33, 48], 6) == 26.5
    assert candidate([2, 12, 13, 23, 35], [7, 16, 18, 25, 46], 2) == 9.5
    assert candidate([4, 7, 20, 24, 42], [2, 8, 16, 30, 41], 3) == 7.5
    assert candidate([1, 7, 11, 21, 41], [4, 11, 17, 31, 50], 3) == 9.0
    assert candidate([6, 7, 13, 23, 41], [3, 17, 15, 28, 42], 7) == 25.5
    assert candidate([6, 11, 17, 21, 37], [4, 8, 12, 27, 43], 4) == 11.5
    assert candidate([4, 11, 14, 25, 42], [7, 10, 21, 30, 41], 7) == 27.5
    assert candidate([1, 17, 14, 27, 33], [5, 13, 18, 31, 44], 6) == 22.5
    assert candidate([5, 7, 11, 28, 36], [1, 14, 12, 29, 47], 5) == 13.0
    assert candidate([5, 16, 11, 27, 39], [6, 9, 19, 31, 50], 3) == 12.5
    assert candidate([6, 17, 11, 21, 37], [7, 12, 16, 35, 47], 5) == 14.0
    assert candidate([5, 10, 11, 21, 33], [7, 16, 21, 29, 48], 1) == 6.0
    assert candidate([3, 9, 19, 27, 36], [5, 16, 21, 25, 47], 4) == 17.5
    assert candidate([6, 13, 10, 26, 42], [3, 9, 17, 26, 40], 2) == 7.5
    assert candidate([5, 11, 15, 21, 41], [5, 17, 20, 28, 42], 1) == 5.0
    assert candidate([1, 17, 10, 30, 39], [4, 17, 22, 26, 40], 7) == 28.0
    assert candidate([3, 9, 16, 23, 36], [7, 8, 21, 32, 45], 4) == 12.5
    assert candidate([6, 13, 18, 26, 42], [6, 18, 18, 35, 50], 6) == 22.0
    assert candidate([3, 15, 12, 23, 43], [7, 15, 13, 25, 45], 4) == 13.5
    assert candidate([6, 11, 17, 28, 42], [1, 10, 22, 27, 42], 2) == 8.0
    assert candidate([2, 16, 10, 26, 35], [6, 16, 20, 35, 49], 4) == 13.0
    assert candidate([5, 17, 13, 26, 39], [2, 13, 19, 27, 48], 2) == 9.0
    assert candidate([5, 14, 10, 24, 39], [7, 16, 20, 31, 46], 7) == 27.5
    assert candidate([3, 9, 17, 27, 37], [5, 10, 21, 26, 50], 3) == 9.5
    assert candidate([2, 14, 11, 28, 41], [3, 14, 13, 30, 42], 8) == 35.5
    assert candidate([4, 17, 15, 22, 39], [4, 15, 21, 34, 42], 6) == 21.5
    assert candidate([2, 9, 10, 26, 36], [4, 16, 17, 35, 40], 8) == 35.5
    assert candidate([5, 17, 11, 22, 38], [7, 11, 14, 28, 44], 5) == 14.0
    assert candidate([3, 8, 14, 28, 40], [7, 11, 18, 26, 46], 5) == 16.0
    assert candidate([4, 16, 16, 29, 34], [4, 14, 18, 27, 41], 8) == 31.5
    assert candidate([1, 13, 10, 23, 40], [5, 18, 22, 28, 48], 5) == 20.0
    assert candidate([3, 6, 5, 14], [3, 18, 17, 27], 1) == 3.0
    assert candidate([3, 8, 6, 8], [12, 16, 15, 26], 3) == 9.0
    assert candidate([6, 9, 5, 8], [7, 8, 16, 25], 4) == 7.0
    assert candidate([7, 5, 8, 14], [4, 10, 15, 28], 3) == 6.5
    assert candidate([3, 5, 7, 13], [6, 15, 20, 31], 1) == 4.5
    assert candidate([1, 2, 6, 11], [7, 18, 19, 31], 1) == 4.0
    assert candidate([3, 1, 10, 4], [3, 8, 21, 25], 4) == 9.0
    assert candidate([2, 9, 12, 4], [2, 8, 21, 28], 4) == 10.5
    assert candidate([6, 6, 7, 10], [4, 17, 22, 23], 1) == 5.0
    assert candidate([3, 2, 5, 7], [6, 16, 24, 27], 1) == 4.5
    assert candidate([5, 8, 8, 10], [4, 15, 24, 30], 4) == 9.0
    assert candidate([3, 6, 10, 8], [5, 8, 21, 30], 5) == 9.0
    assert candidate([4, 2, 5, 14], [4, 11, 19, 25], 2) == 3.0
    assert candidate([1, 8, 4, 9], [10, 14, 14, 28], 4) == 9.5
    assert candidate([4, 5, 5, 8], [6, 16, 16, 25], 4) == 7.0
    assert candidate([7, 7, 7, 12], [9, 17, 15, 27], 1) == 8.0
    assert candidate([5, 6, 12, 6], [9, 12, 16, 33], 3) == 10.5
    assert candidate([6, 4, 7, 4], [2, 16, 23, 27], 2) == 5.0
    assert candidate([5, 2, 13, 5], [2, 17, 19, 27], 2) == 3.5
    assert candidate([7, 9, 10, 4], [8, 15, 16, 24], 4) == 7.0
    assert candidate([5, 9, 3, 11], [9, 10, 23, 33], 1) == 7.0
    assert candidate([6, 7, 6, 6], [3, 13, 19, 24], 2) == 6.5
    assert candidate([5, 9, 9, 13], [2, 8, 21, 25], 5) == 11.0
    assert candidate([2, 8, 13, 11], [5, 9, 20, 30], 2) == 6.5
    assert candidate([3, 6, 12, 12], [6, 8, 21, 32], 1) == 4.5
    assert candidate([2, 3, 12, 12], [7, 9, 14, 30], 2) == 5.0
    assert candidate([4, 5, 11, 6], [8, 9, 22, 30], 1) == 6.0
    assert candidate([5, 5, 5, 11], [8, 9, 16, 23], 5) == 10.0
    assert candidate([5, 2, 11, 7], [12, 18, 18, 28], 3) == 11.5
    assert candidate([7, 5, 11, 6], [11, 15, 14, 32], 1) == 9.0
    assert candidate([5, 2, 3, 12], [4, 15, 20, 33], 2) == 3.5
    assert candidate([5, 5, 4, 12], [8, 15, 14, 24], 2) == 6.5
    assert candidate([3, 5, 13, 4], [3, 18, 21, 25], 1) == 3.0
    assert candidate([2, 11, 17, 24, 31, 47], [7, 20, 22, 37, 47, 55], 5) == 21.0
    assert candidate([8, 4, 12, 25, 35, 37], [3, 15, 24, 34, 50, 52], 7) == 29.5
    assert candidate([1, 5, 15, 27, 31, 42], [1, 17, 30, 40, 49, 56], 7) == 30.5
    assert candidate([6, 6, 12, 19, 31, 42], [7, 13, 32, 44, 53, 51], 4) == 12.5
    assert candidate([2, 7, 19, 27, 34, 46], [2, 16, 26, 43, 45, 59], 2) == 4.5
    assert candidate([5, 2, 18, 20, 40, 45], [2, 19, 25, 38, 50, 59], 7) == 31.5
    assert candidate([2, 6, 19, 25, 37, 40], [6, 15, 26, 43, 50, 57], 1) == 4.0
    assert candidate([7, 9, 15, 23, 32, 47], [3, 21, 22, 43, 48, 56], 7) == 27.5
    assert candidate([4, 4, 18, 25, 35, 42], [2, 17, 26, 42, 52, 54], 5) == 21.5
    assert candidate([4, 9, 15, 25, 33, 41], [3, 16, 32, 35, 52, 52], 8) == 34.0
    assert candidate([7, 7, 13, 24, 40, 45], [4, 18, 24, 36, 48, 53], 5) == 21.0
    assert candidate([3, 1, 16, 19, 38, 42], [3, 21, 22, 39, 47, 56], 7) == 30.0
    assert candidate([7, 4, 15, 23, 39, 39], [6, 14, 30, 43, 49, 55], 4) == 14.5
    assert candidate([1, 3, 15, 28, 35, 47], [4, 22, 23, 42, 52, 50], 1) == 2.5
    assert candidate([7, 3, 10, 20, 36, 42], [5, 15, 31, 37, 54, 58], 6) == 25.5
    assert candidate([3, 10, 13, 19, 37, 40], [2, 22, 24, 36, 52, 56], 9) == 38.5
    assert candidate([5, 10, 16, 21, 37, 43], [6, 21, 28, 42, 45, 58], 7) == 32.5
    assert candidate([3, 3, 13, 22, 38, 40], [7, 15, 29, 36, 45, 56], 4) == 14.0
    assert candidate([2, 4, 11, 18, 38, 47], [2, 14, 27, 37, 45, 51], 3) == 7.5
    assert candidate([8, 1, 12, 20, 34, 39], [6, 14, 23, 37, 50, 57], 1) == 7.0
    assert candidate([2, 10, 11, 25, 40, 40], [4, 16, 28, 40, 51, 52], 2) == 7.0
    assert candidate([6, 6, 10, 22, 35, 44], [5, 13, 28, 41, 52, 56], 4) == 11.5
    assert candidate([5, 7, 10, 24, 38, 42], [1, 15, 26, 35, 52, 59], 8) == 36.5
    assert candidate([8, 11, 10, 26, 32, 46], [5, 22, 25, 42, 47, 50], 9) == 44.0
    assert candidate([8, 11, 11, 24, 41, 43], [5, 19, 23, 41, 53, 54], 1) == 6.5
    assert candidate([4, 1, 12, 23, 31, 40], [7, 19, 23, 39, 54, 60], 6) == 23.0
    assert candidate([6, 7, 18, 23, 34, 40], [7, 18, 22, 40, 51, 59], 3) == 12.5
    assert candidate([7, 5, 19, 27, 40, 41], [5, 14, 32, 34, 44, 51], 1) == 6.0
    assert candidate([4, 9, 12, 22, 34, 41], [1, 15, 30, 42, 45, 51], 7) == 32.0
    assert candidate([5, 5, 18, 22, 41, 38], [1, 15, 26, 44, 54, 60], 2) == 5.0
    assert candidate([3, 11, 17, 24, 35, 43], [1, 19, 26, 36, 45, 50], 5) == 21.5
    assert candidate([3, 3, 15, 28, 34, 37], [1, 19, 24, 40, 49, 57], 7) == 31.0
    assert candidate([4, 6, 18, 18, 38, 42], [7, 15, 32, 40, 47, 50], 2) == 6.5

if __name__ == '__main__':
    check(get_median)