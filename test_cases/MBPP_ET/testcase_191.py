from case_MBPP_191 import bitwise_xor


def check(candidate):
    assert candidate((10, 4, 6, 9), (5, 2, 3, 3)) == (15, 6, 5, 10)
    assert candidate((11, 5, 7, 10), (6, 3, 4, 4)) == (13, 6, 3, 14)
    assert candidate((12, 6, 8, 11), (7, 4, 5, 6)) == (11, 2, 13, 13)
    assert candidate((9, 2, 11, 12), (3, 1, 2, 1)) == (10, 3, 9, 13)
    assert candidate((12, 7, 8, 11), (3, 2, 4, 2)) == (15, 5, 12, 9)
    assert candidate((9, 2, 6, 8), (2, 5, 6, 8)) == (11, 7, 0, 0)
    assert candidate((6, 6, 6, 11), (1, 5, 8, 4)) == (7, 3, 14, 15)
    assert candidate((9, 2, 7, 11), (2, 5, 6, 2)) == (11, 7, 1, 9)
    assert candidate((12, 7, 6, 12), (1, 7, 6, 2)) == (13, 0, 0, 14)
    assert candidate((14, 1, 5, 10), (2, 6, 3, 3)) == (12, 7, 6, 9)
    assert candidate((9, 5, 4, 7), (10, 5, 4, 8)) == (3, 0, 0, 15)
    assert candidate((5, 2, 1, 13), (10, 4, 3, 6)) == (15, 6, 2, 11)
    assert candidate((8, 8, 3, 9), (5, 2, 3, 2)) == (13, 10, 0, 11)
    assert candidate((5, 7, 6, 4), (1, 1, 1, 2)) == (4, 6, 7, 6)
    assert candidate((15, 1, 10, 14), (1, 2, 3, 1)) == (14, 3, 9, 15)
    assert candidate((8, 2, 3, 8), (2, 2, 6, 8)) == (10, 0, 5, 0)
    assert candidate((8, 1, 3, 10), (7, 6, 7, 1)) == (15, 7, 4, 11)
    assert candidate((8, 3, 10, 10), (7, 6, 8, 8)) == (15, 5, 2, 2)
    assert candidate((14, 5, 10, 11), (1, 4, 5, 5)) == (15, 1, 15, 14)
    assert candidate((8, 7, 7, 10), (4, 2, 5, 8)) == (12, 5, 2, 2)
    assert candidate((5, 9, 9, 6), (5, 3, 7, 3)) == (0, 10, 14, 5)
    assert candidate((8, 8, 11, 4), (7, 2, 7, 8)) == (15, 10, 12, 12)
    assert candidate((15, 1, 10, 5), (1, 6, 7, 2)) == (14, 7, 13, 7)
    assert candidate((7, 9, 7, 6), (2, 4, 5, 5)) == (5, 13, 2, 3)
    assert candidate((15, 3, 6, 6), (7, 3, 4, 6)) == (8, 0, 2, 0)
    assert candidate((13, 5, 7, 9), (3, 1, 1, 6)) == (14, 4, 6, 15)
    assert candidate((10, 9, 6, 14), (3, 5, 8, 5)) == (9, 12, 14, 11)
    assert candidate((15, 1, 8, 4), (10, 1, 4, 5)) == (5, 0, 12, 1)
    assert candidate((10, 6, 4, 10), (7, 5, 8, 6)) == (13, 3, 12, 12)
    assert candidate((5, 8, 6, 6), (7, 6, 1, 4)) == (2, 14, 7, 2)
    assert candidate((14, 9, 6, 5), (2, 6, 1, 4)) == (12, 15, 7, 1)
    assert candidate((12, 5, 9, 6), (6, 1, 4, 1)) == (10, 4, 13, 7)
    assert candidate((12, 5, 2, 13), (4, 7, 5, 1)) == (8, 2, 7, 12)
    assert candidate((11, 8, 6, 11), (8, 5, 8, 3)) == (3, 13, 14, 8)
    assert candidate((15, 6, 6, 5), (3, 1, 4, 8)) == (12, 7, 2, 13)
    assert candidate((8, 9, 2, 8), (6, 6, 8, 5)) == (14, 15, 10, 13)
    assert candidate((13, 4, 8, 15), (8, 2, 3, 4)) == (5, 6, 11, 11)
    assert candidate((16, 3, 10, 15), (7, 2, 6, 8)) == (23, 1, 12, 7)
    assert candidate((14, 10, 2, 10), (8, 7, 8, 8)) == (6, 13, 10, 2)
    assert candidate((15, 6, 10, 5), (1, 3, 5, 8)) == (14, 5, 15, 13)
    assert candidate((8, 2, 10, 11), (2, 7, 9, 2)) == (10, 5, 3, 9)
    assert candidate((12, 9, 5, 11), (6, 4, 1, 4)) == (10, 13, 4, 15)
    assert candidate((16, 3, 7, 9), (8, 7, 7, 3)) == (24, 4, 0, 10)
    assert candidate((14, 5, 10, 15), (4, 8, 9, 1)) == (10, 13, 3, 14)
    assert candidate((16, 1, 7, 12), (7, 1, 5, 8)) == (23, 0, 2, 4)
    assert candidate((10, 7, 10, 5), (7, 1, 8, 3)) == (13, 6, 2, 6)
    assert candidate((14, 2, 2, 14), (6, 6, 9, 4)) == (8, 4, 11, 10)
    assert candidate((8, 9, 9, 7), (1, 3, 9, 6)) == (9, 10, 0, 1)
    assert candidate((10, 2, 2, 5), (10, 6, 3, 6)) == (0, 4, 1, 3)
    assert candidate((8, 2, 7, 6), (3, 2, 5, 5)) == (11, 0, 2, 3)
    assert candidate((10, 10, 2, 5), (10, 2, 2, 8)) == (0, 8, 0, 13)
    assert candidate((9, 2, 12, 11), (3, 2, 1, 2)) == (10, 0, 13, 9)
    assert candidate((12, 3, 4, 5), (2, 4, 1, 4)) == (14, 7, 5, 1)
    assert candidate((7, 2, 10, 11), (4, 1, 5, 8)) == (3, 3, 15, 3)
    assert candidate((7, 1, 12, 12), (6, 2, 3, 8)) == (1, 3, 15, 4)
    assert candidate((16, 9, 6, 8), (8, 5, 8, 1)) == (24, 12, 14, 9)
    assert candidate((15, 7, 2, 10), (1, 3, 5, 1)) == (14, 4, 7, 11)
    assert candidate((16, 9, 12, 9), (9, 3, 5, 4)) == (25, 10, 9, 13)
    assert candidate((14, 10, 12, 6), (3, 4, 3, 8)) == (13, 14, 15, 14)
    assert candidate((9, 3, 5, 15), (6, 6, 1, 5)) == (15, 5, 4, 10)
    assert candidate((6, 6, 5, 13), (7, 1, 4, 7)) == (1, 7, 1, 10)
    assert candidate((16, 9, 8, 7), (10, 4, 9, 7)) == (26, 13, 1, 0)
    assert candidate((13, 4, 10, 5), (3, 7, 2, 6)) == (14, 3, 8, 3)
    assert candidate((15, 3, 9, 6), (1, 3, 3, 7)) == (14, 0, 10, 1)
    assert candidate((10, 4, 11, 10), (10, 4, 4, 1)) == (0, 0, 15, 11)
    assert candidate((7, 7, 3, 7), (1, 5, 9, 3)) == (6, 2, 10, 4)
    assert candidate((6, 4, 9, 11), (6, 6, 7, 3)) == (0, 2, 14, 8)
    assert candidate((6, 5, 10, 13), (6, 1, 4, 3)) == (0, 4, 14, 14)
    assert candidate((7, 3, 7, 5), (8, 1, 7, 4)) == (15, 2, 0, 1)
    assert candidate((8, 10, 5, 12), (6, 5, 8, 2)) == (14, 15, 13, 14)
    assert candidate((8, 5, 5, 12), (8, 6, 7, 5)) == (0, 3, 2, 9)
    assert candidate((17, 9, 4, 6), (3, 3, 2, 2)) == (18, 10, 6, 4)
    assert candidate((16, 11, 9, 9), (11, 3, 4, 1)) == (27, 8, 13, 8)
    assert candidate((9, 1, 7, 15), (3, 6, 5, 3)) == (10, 7, 2, 12)
    assert candidate((15, 9, 8, 9), (8, 8, 8, 11)) == (7, 1, 0, 2)
    assert candidate((9, 5, 6, 9), (12, 8, 3, 4)) == (5, 13, 5, 13)
    assert candidate((7, 2, 3, 16), (5, 1, 9, 3)) == (2, 3, 10, 19)
    assert candidate((16, 4, 11, 9), (7, 4, 2, 8)) == (23, 0, 9, 1)
    assert candidate((12, 10, 6, 14), (7, 1, 10, 5)) == (11, 11, 12, 11)
    assert candidate((12, 4, 3, 10), (5, 4, 4, 6)) == (9, 0, 7, 12)
    assert candidate((15, 10, 13, 14), (11, 8, 10, 9)) == (4, 2, 7, 7)
    assert candidate((17, 3, 10, 9), (7, 4, 1, 8)) == (22, 7, 11, 1)
    assert candidate((9, 5, 3, 7), (3, 2, 10, 8)) == (10, 7, 9, 15)
    assert candidate((16, 9, 8, 13), (11, 3, 7, 10)) == (27, 10, 15, 7)
    assert candidate((17, 3, 8, 16), (5, 3, 8, 6)) == (20, 0, 0, 22)
    assert candidate((13, 8, 7, 9), (2, 9, 4, 1)) == (15, 1, 3, 8)
    assert candidate((15, 11, 11, 6), (7, 6, 9, 5)) == (8, 13, 2, 3)
    assert candidate((16, 4, 5, 10), (12, 1, 1, 11)) == (28, 5, 4, 1)
    assert candidate((7, 11, 4, 16), (2, 6, 1, 8)) == (5, 13, 5, 24)
    assert candidate((16, 9, 8, 14), (3, 9, 6, 8)) == (19, 0, 14, 6)
    assert candidate((7, 1, 6, 9), (7, 5, 3, 1)) == (0, 4, 5, 8)
    assert candidate((14, 3, 6, 16), (10, 8, 5, 2)) == (4, 11, 3, 18)
    assert candidate((17, 3, 6, 7), (5, 5, 7, 6)) == (20, 6, 1, 1)
    assert candidate((12, 1, 10, 13), (9, 2, 4, 11)) == (5, 3, 14, 6)
    assert candidate((12, 11, 10, 9), (4, 5, 3, 9)) == (8, 14, 9, 0)
    assert candidate((15, 1, 10, 12), (8, 7, 7, 2)) == (7, 6, 13, 14)
    assert candidate((8, 5, 3, 8), (6, 6, 4, 8)) == (14, 3, 7, 0)
    assert candidate((10, 3, 4, 10), (10, 9, 9, 11)) == (0, 10, 13, 1)
    assert candidate((16, 3, 3, 9), (5, 1, 4, 4)) == (21, 2, 7, 13)
    assert candidate((10, 7, 11, 10), (8, 9, 1, 7)) == (2, 14, 10, 13)
    assert candidate((10, 6, 6, 16), (2, 9, 2, 4)) == (8, 15, 4, 20)
    assert candidate((16, 11, 4, 14), (4, 7, 2, 8)) == (20, 12, 6, 6)

if __name__ == '__main__':
    check(bitwise_xor)